diff --git a/p4spec/test/struct.expected b/slnew
index 2029392..1482884 100644
--- a/p4spec/test/struct.expected
+++ b/slnew
@@ -1,24 +1,24 @@
-;; ../../../../spec/0-aux.watsup:18.1-18.21
+;; spec/0-aux.watsup:18.1-18.21
 def $sum
 
 
 
-;; ../../../../spec/0-aux.watsup:19.1-19.21
+;; spec/0-aux.watsup:19.1-19.21
 def $max
 
 
 
-;; ../../../../spec/0-aux.watsup:20.1-20.21
+;; spec/0-aux.watsup:20.1-20.21
 def $min
 
 
 
-;; ../../../../spec/0-aux.watsup:26.1-27.17
+;; spec/0-aux.watsup:26.1-27.17
 def $int_to_text
 
 
 
-;; ../../../../spec/0-aux.watsup:29.1-30.17
+;; spec/0-aux.watsup:29.1-30.17
 def $concat_text(text*)
 
 1. If (text* matches pattern []), then
@@ -31,17 +31,17 @@ def $concat_text(text*)
 
   2. Return t ++ $concat_text(t'*)
 
-;; ../../../../spec/0-aux.watsup:35.1-35.37
+;; spec/0-aux.watsup:35.1-35.37
 def $strip_prefix
 
 
 
-;; ../../../../spec/0-aux.watsup:36.1-36.37
+;; spec/0-aux.watsup:36.1-36.37
 def $strip_suffix
 
 
 
-;; ../../../../spec/0-aux.watsup:42.1-42.23
+;; spec/0-aux.watsup:42.1-42.23
 def $init_(nat')
 
 1. If (nat' = 0), then
@@ -52,7 +52,7 @@ def $init_(nat')
 
   1. Return (nat' - 1) :: $init_((nat' - 1))
 
-;; ../../../../spec/0-aux.watsup:47.1-47.29
+;; spec/0-aux.watsup:47.1-47.29
 def $repeat_<X>(X, nat')
 
 1. If (nat' = 0), then
@@ -63,154 +63,154 @@ def $repeat_<X>(X, nat')
 
   1. Return [X] ++ $repeat_<X>(X, (nat' - 1))
 
-;; ../../../../spec/0-aux.watsup:53.1-54.26
+;; spec/0-aux.watsup:53.1-54.26
 def $rev_<X>
 
 
 
-;; ../../../../spec/0-aux.watsup:56.1-57.23
+;; spec/0-aux.watsup:56.1-57.23
 def $concat_<X>
 
 
 
-;; ../../../../spec/0-aux.watsup:59.1-59.39
+;; spec/0-aux.watsup:59.1-59.39
 def $partition_<X>
 
 
 
-;; ../../../../spec/0-aux.watsup:61.1-62.23
+;; spec/0-aux.watsup:61.1-62.23
 def $assoc_<X, Y>
 
 
 
-;; ../../../../spec/0-aux.watsup:64.1-65.28
+;; spec/0-aux.watsup:64.1-65.28
 def $distinct_<K>
 
 
 
-;; ../../../../spec/0-aux.watsup:71.17-71.24
+;; spec/0-aux.watsup:71.17-71.24
 syntax set<K> = 
    | `{%}`(K*)
 
-;; ../../../../spec/0-aux.watsup:73.1-74.43
+;; spec/0-aux.watsup:73.1-74.43
 def $empty_set<K>
 
 1. Return ({ [] })
 
-;; ../../../../spec/0-aux.watsup:77.1-78.36
+;; spec/0-aux.watsup:77.1-78.36
 def $in_set<K>(K, ({ K'* }))
 
 1. Return K is in K'*
 
-;; ../../../../spec/0-aux.watsup:81.1-82.37
+;; spec/0-aux.watsup:81.1-82.37
 def $intersect_set<K>
 
 
 
-;; ../../../../spec/0-aux.watsup:84.1-85.37
+;; spec/0-aux.watsup:84.1-85.37
 def $union_set<K>
 
 
 
-;; ../../../../spec/0-aux.watsup:87.1-88.37
+;; spec/0-aux.watsup:87.1-88.37
 def $unions_set<K>
 
 
 
-;; ../../../../spec/0-aux.watsup:90.1-91.42
+;; spec/0-aux.watsup:90.1-91.42
 def $diff_set<K>
 
 
 
-;; ../../../../spec/0-aux.watsup:93.1-94.40
+;; spec/0-aux.watsup:93.1-94.40
 def $sub_set<K>
 
 
 
-;; ../../../../spec/0-aux.watsup:96.1-97.33
+;; spec/0-aux.watsup:96.1-97.33
 def $eq_set<K>
 
 
 
-;; ../../../../spec/0-aux.watsup:103.21-103.27
+;; spec/0-aux.watsup:103.21-103.27
 syntax pair<K, V> = 
    | `%->%`(K, V)
 
-;; ../../../../spec/0-aux.watsup:106.20-106.37
+;; spec/0-aux.watsup:106.20-106.37
 syntax map<K, V> = set<pair<K, V>>
 
-;; ../../../../spec/0-aux.watsup:108.1-109.43
+;; spec/0-aux.watsup:108.1-109.43
 def $empty_map<K, V>
 
 1. Return ({ [] })
 
-;; ../../../../spec/0-aux.watsup:113.1-114.55
+;; spec/0-aux.watsup:113.1-114.55
 def $dom_map<K, V>(({ (K -> V)* }))
 
 1. Return ({ K* })
 
-;; ../../../../spec/0-aux.watsup:118.1-119.25
+;; spec/0-aux.watsup:118.1-119.25
 def $find_map<K, V>
 
 
 
-;; ../../../../spec/0-aux.watsup:121.1-122.25
+;; spec/0-aux.watsup:121.1-122.25
 def $find_maps<K, V>
 
 
 
-;; ../../../../spec/0-aux.watsup:124.1-125.71
+;; spec/0-aux.watsup:124.1-125.71
 def $add_map<K, V>
 
 
 
-;; ../../../../spec/0-aux.watsup:127.1-128.71
+;; spec/0-aux.watsup:127.1-128.71
 def $adds_map<K, V>
 
 
 
-;; ../../../../spec/0-aux.watsup:130.1-131.71
+;; spec/0-aux.watsup:130.1-131.71
 def $update_map<K, V>
 
 
 
-;; ../../../../spec/1a-syntax-el.watsup:5.15-5.18
+;; spec/1a-syntax-el.watsup:5.15-5.18
 syntax bits = int
 
-;; ../../../../spec/1a-syntax-el.watsup:6.16-6.19
+;; spec/1a-syntax-el.watsup:6.16-6.19
 syntax width = nat
 
-;; ../../../../spec/1a-syntax-el.watsup:9.1-11.39
+;; spec/1a-syntax-el.watsup:9.1-11.39
 syntax num = 
    | `INT%`(int)
    | `FINT%%`(width, bits)
    | `FBIT%%`(width, bits)
 
-;; ../../../../spec/1a-syntax-el.watsup:21.13-21.17
+;; spec/1a-syntax-el.watsup:21.13-21.17
 syntax id = text
 
-;; ../../../../spec/1a-syntax-el.watsup:28.1-29.29
+;; spec/1a-syntax-el.watsup:28.1-29.29
 syntax name = 
    | `TOP%`(id)
    | `CURRENT%`(id)
 
-;; ../../../../spec/1a-syntax-el.watsup:35.17-35.19
+;; spec/1a-syntax-el.watsup:35.17-35.19
 syntax member = id
 
-;; ../../../../spec/1a-syntax-el.watsup:41.20-41.22
+;; spec/1a-syntax-el.watsup:41.20-41.22
 syntax matchkind = id
 
-;; ../../../../spec/1a-syntax-el.watsup:47.21-47.23
+;; spec/1a-syntax-el.watsup:47.21-47.23
 syntax statelabel = id
 
-;; ../../../../spec/1a-syntax-el.watsup:54.1-57.35
+;; spec/1a-syntax-el.watsup:54.1-57.35
 syntax unop = 
    | `BNOT`()
    | `LNOT`()
    | `UPLUS`()
    | `UMINUS`()
 
-;; ../../../../spec/1a-syntax-el.watsup:64.1-84.36
+;; spec/1a-syntax-el.watsup:64.1-84.36
 syntax binop = 
    | `PLUS`()
    | `SPLUS`()
@@ -234,14 +234,14 @@ syntax binop =
    | `LAND`()
    | `LOR`()
 
-;; ../../../../spec/1a-syntax-el.watsup:90.14-90.37
+;; spec/1a-syntax-el.watsup:90.14-90.37
 syntax dir = 
    | `NO`()
    | `IN`()
    | `OUT`()
    | `INOUT`()
 
-;; ../../../../spec/1a-syntax-el.watsup:103.1-117.36
+;; spec/1a-syntax-el.watsup:103.1-117.36
 syntax type = 
    | `VoidT`()
    | `ErrT`()
@@ -259,36 +259,36 @@ syntax type =
    | `SpecT%%`(name, type*)
    | `AnyT`()
 
-;; ../../../../spec/1a-syntax-el.watsup:123.17-123.19
+;; spec/1a-syntax-el.watsup:123.17-123.19
 syntax tparam = id
 
-;; ../../../../spec/1a-syntax-el.watsup:129.16-129.33
+;; spec/1a-syntax-el.watsup:129.16-129.33
 syntax param = 
    | `%%%%`(id, dir, type, expr?)
 
-;; ../../../../spec/1a-syntax-el.watsup:135.17-135.22
+;; spec/1a-syntax-el.watsup:135.17-135.22
 syntax cparam = param
 
-;; ../../../../spec/1a-syntax-el.watsup:141.15-141.19
+;; spec/1a-syntax-el.watsup:141.15-141.19
 syntax targ = type
 
-;; ../../../../spec/1a-syntax-el.watsup:148.1-150.33
+;; spec/1a-syntax-el.watsup:148.1-150.33
 syntax arg = 
    | `ExprA%`(expr)
    | `NameA%%`(id, expr?)
    | `AnyA`()
 
-;; ../../../../spec/1a-syntax-el.watsup:157.1-159.29
+;; spec/1a-syntax-el.watsup:157.1-159.29
 syntax keyset = 
    | `ExprK%`(expr)
    | `DefaultK`()
    | `AnyK`()
 
-;; ../../../../spec/1a-syntax-el.watsup:165.21-165.39
+;; spec/1a-syntax-el.watsup:165.21-165.39
 syntax selectcase = 
    | `%%`(keyset*, statelabel)
 
-;; ../../../../spec/1a-syntax-el.watsup:173.1-198.108
+;; spec/1a-syntax-el.watsup:173.1-198.108
 syntax expr = 
    | `BoolE%`(bool)
    | `StrE%`(text)
@@ -317,11 +317,11 @@ syntax expr =
    | `CallTypeE%%%%`(name, member, targ*, arg*)
    | `InstE%%%`(name, targ*, arg*)
 
-;; ../../../../spec/1a-syntax-el.watsup:204.16-204.71
+;; spec/1a-syntax-el.watsup:204.16-204.71
 syntax block = 
    | `BlockB%`(stmt*)
 
-;; ../../../../spec/1a-syntax-el.watsup:211.1-222.55
+;; spec/1a-syntax-el.watsup:211.1-222.55
 syntax stmt = 
    | `EmptyS`()
    | `AssignS%%`(expr, expr)
@@ -336,54 +336,54 @@ syntax stmt =
    | `TransS%`(expr)
    | `DeclS%`(decl)
 
-;; ../../../../spec/1a-syntax-el.watsup:229.1-230.35
+;; spec/1a-syntax-el.watsup:229.1-230.35
 syntax switchlabel = 
    | `ExprL%`(expr)
    | `DefaultL`()
 
-;; ../../../../spec/1a-syntax-el.watsup:233.1-234.48
+;; spec/1a-syntax-el.watsup:233.1-234.48
 syntax switchcase = 
    | `MatchC%%`(switchlabel, block)
    | `FallC%`(switchlabel)
 
-;; ../../../../spec/1a-syntax-el.watsup:240.22-240.38
+;; spec/1a-syntax-el.watsup:240.22-240.38
 syntax parserstate = 
    | `%%`(statelabel, block)
 
-;; ../../../../spec/1a-syntax-el.watsup:246.14-246.22
+;; spec/1a-syntax-el.watsup:246.14-246.22
 syntax tbl = tblprop*
 
-;; ../../../../spec/1a-syntax-el.watsup:252.17-252.31
+;; spec/1a-syntax-el.watsup:252.17-252.31
 syntax tblkey = 
    | `%%`(expr, matchkind)
 
-;; ../../../../spec/1a-syntax-el.watsup:253.21-253.28
+;; spec/1a-syntax-el.watsup:253.21-253.28
 syntax tblkeyprop = tblkey*
 
-;; ../../../../spec/1a-syntax-el.watsup:259.20-259.29
+;; spec/1a-syntax-el.watsup:259.20-259.29
 syntax tblaction = 
    | `%%`(name, arg*)
 
-;; ../../../../spec/1a-syntax-el.watsup:260.24-260.34
+;; spec/1a-syntax-el.watsup:260.24-260.34
 syntax tblactionprop = tblaction*
 
-;; ../../../../spec/1a-syntax-el.watsup:266.19-266.47
+;; spec/1a-syntax-el.watsup:266.19-266.47
 syntax tblentry = 
    | `%%%%`(bool, keyset*, tblaction, expr?)
 
-;; ../../../../spec/1a-syntax-el.watsup:267.23-267.37
+;; spec/1a-syntax-el.watsup:267.23-267.37
 syntax tblentryprop = 
    | `%%`(bool, tblentry*)
 
-;; ../../../../spec/1a-syntax-el.watsup:273.25-273.39
+;; spec/1a-syntax-el.watsup:273.25-273.39
 syntax tbldefaultprop = 
    | `%%`(bool, tblaction)
 
-;; ../../../../spec/1a-syntax-el.watsup:279.24-279.40
+;; spec/1a-syntax-el.watsup:279.24-279.40
 syntax tblcustomprop = 
    | `%%%`(bool, member, expr)
 
-;; ../../../../spec/1a-syntax-el.watsup:286.1-290.78
+;; spec/1a-syntax-el.watsup:286.1-290.78
 syntax tblprop = 
    | `KeyP%`(tblkeyprop)
    | `ActionP%`(tblactionprop)
@@ -391,13 +391,13 @@ syntax tblprop =
    | `DefaultP%`(tbldefaultprop)
    | `CustomP%`(tblcustomprop)
 
-;; ../../../../spec/1a-syntax-el.watsup:297.1-299.120
+;; spec/1a-syntax-el.watsup:297.1-299.120
 syntax method = 
    | `ExternConsM%%`(id, cparam*)
    | `ExternAbstractM%%%%`(id, type, tparam*, param*)
    | `ExternM%%%%`(id, type, tparam*, param*)
 
-;; ../../../../spec/1a-syntax-el.watsup:308.1-330.136
+;; spec/1a-syntax-el.watsup:308.1-330.136
 syntax decl = 
    | `ConstD%%%`(id, type, expr)
    | `VarD%%%`(id, type, expr?)
@@ -423,15 +423,15 @@ syntax decl =
    | `ExternObjectD%%%`(id, tparam*, method*)
    | `PackageTypeD%%%`(id, tparam*, cparam*)
 
-;; ../../../../spec/1a-syntax-el.watsup:333.1-334.15
+;; spec/1a-syntax-el.watsup:333.1-334.15
 syntax typedef = 
    | `TypeD%`(type)
    | `DeclD%`(decl)
 
-;; ../../../../spec/1a-syntax-el.watsup:340.18-340.23
+;; spec/1a-syntax-el.watsup:340.18-340.23
 syntax program = decl*
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:5.1-6.27
+;; spec/1b-syntax-el-aux.watsup:5.1-6.27
 def $is_boole(expr')
 
 1. If (expr' matches pattern `BoolE%`), then
@@ -444,7 +444,7 @@ def $is_boole(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:11.1-12.26
+;; spec/1b-syntax-el-aux.watsup:11.1-12.26
 def $is_stre(expr')
 
 1. If (expr' matches pattern `StrE%`), then
@@ -457,7 +457,7 @@ def $is_stre(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:17.1-18.26
+;; spec/1b-syntax-el-aux.watsup:17.1-18.26
 def $is_nume(expr')
 
 1. If (expr' matches pattern `NumE%`), then
@@ -470,7 +470,7 @@ def $is_nume(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:23.1-24.27
+;; spec/1b-syntax-el-aux.watsup:23.1-24.27
 def $is_namee(expr')
 
 1. If (expr' matches pattern `NameE%`), then
@@ -483,7 +483,7 @@ def $is_namee(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:29.1-30.26
+;; spec/1b-syntax-el-aux.watsup:29.1-30.26
 def $is_seqe(expr')
 
 1. If (expr' matches pattern `SeqE%`), then
@@ -496,7 +496,7 @@ def $is_seqe(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:35.1-36.34
+;; spec/1b-syntax-el-aux.watsup:35.1-36.34
 def $is_seq_defaulte(expr')
 
 1. If (expr' matches pattern `SeqDefaultE%`), then
@@ -509,7 +509,7 @@ def $is_seq_defaulte(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:41.1-42.29
+;; spec/1b-syntax-el-aux.watsup:41.1-42.29
 def $is_recorde(expr')
 
 1. If (expr' matches pattern `RecordE%`), then
@@ -522,7 +522,7 @@ def $is_recorde(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:47.1-48.37
+;; spec/1b-syntax-el-aux.watsup:47.1-48.37
 def $is_record_defaulte(expr')
 
 1. If (expr' matches pattern `RecordDefaultE%`), then
@@ -535,7 +535,7 @@ def $is_record_defaulte(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:53.1-54.30
+;; spec/1b-syntax-el-aux.watsup:53.1-54.30
 def $is_defaulte(expr')
 
 1. If (expr' matches pattern `DefaultE`), then
@@ -546,7 +546,7 @@ def $is_defaulte(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:59.1-60.30
+;; spec/1b-syntax-el-aux.watsup:59.1-60.30
 def $is_invalide(expr')
 
 1. If (expr' matches pattern `InvalidE`), then
@@ -557,7 +557,7 @@ def $is_invalide(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:65.1-66.25
+;; spec/1b-syntax-el-aux.watsup:65.1-66.25
 def $is_une(expr')
 
 1. If (expr' matches pattern `UnE%%`), then
@@ -570,7 +570,7 @@ def $is_une(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:71.1-72.26
+;; spec/1b-syntax-el-aux.watsup:71.1-72.26
 def $is_bine(expr')
 
 1. If (expr' matches pattern `BinE%%%`), then
@@ -583,7 +583,7 @@ def $is_bine(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:77.1-78.27
+;; spec/1b-syntax-el-aux.watsup:77.1-78.27
 def $is_terne(expr')
 
 1. If (expr' matches pattern `TernE%%%`), then
@@ -596,7 +596,7 @@ def $is_terne(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:83.1-84.27
+;; spec/1b-syntax-el-aux.watsup:83.1-84.27
 def $is_caste(expr')
 
 1. If (expr' matches pattern `CastE%%`), then
@@ -609,7 +609,7 @@ def $is_caste(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:89.1-90.27
+;; spec/1b-syntax-el-aux.watsup:89.1-90.27
 def $is_maske(expr')
 
 1. If (expr' matches pattern `MaskE%%`), then
@@ -622,7 +622,7 @@ def $is_maske(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:95.1-96.28
+;; spec/1b-syntax-el-aux.watsup:95.1-96.28
 def $is_rangee(expr')
 
 1. If (expr' matches pattern `RangeE%%`), then
@@ -635,7 +635,7 @@ def $is_rangee(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:101.1-102.29
+;; spec/1b-syntax-el-aux.watsup:101.1-102.29
 def $is_selecte(expr')
 
 1. If (expr' matches pattern `SelectE%%`), then
@@ -648,7 +648,7 @@ def $is_selecte(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:107.1-108.29
+;; spec/1b-syntax-el-aux.watsup:107.1-108.29
 def $is_arracce(expr')
 
 1. If (expr' matches pattern `ArrAccE%%`), then
@@ -661,7 +661,7 @@ def $is_arracce(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:113.1-114.29
+;; spec/1b-syntax-el-aux.watsup:113.1-114.29
 def $is_bitacce(expr')
 
 1. If (expr' matches pattern `BitAccE%%%`), then
@@ -674,7 +674,7 @@ def $is_bitacce(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:119.1-120.29
+;; spec/1b-syntax-el-aux.watsup:119.1-120.29
 def $is_erracce(expr')
 
 1. If (expr' matches pattern `ErrAccE%`), then
@@ -687,7 +687,7 @@ def $is_erracce(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:125.1-126.30
+;; spec/1b-syntax-el-aux.watsup:125.1-126.30
 def $is_typacce(expr')
 
 1. If (expr' matches pattern `TypeAccE%%`), then
@@ -700,7 +700,7 @@ def $is_typacce(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:131.1-132.30
+;; spec/1b-syntax-el-aux.watsup:131.1-132.30
 def $is_expracce(expr')
 
 1. If (expr' matches pattern `ExprAccE%%`), then
@@ -713,7 +713,7 @@ def $is_expracce(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:137.1-138.31
+;; spec/1b-syntax-el-aux.watsup:137.1-138.31
 def $is_callfunce(expr')
 
 1. If (expr' matches pattern `CallFuncE%%%`), then
@@ -726,7 +726,7 @@ def $is_callfunce(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:143.1-144.33
+;; spec/1b-syntax-el-aux.watsup:143.1-144.33
 def $is_callmethode(expr')
 
 1. If (expr' matches pattern `CallMethodE%%%%`), then
@@ -739,7 +739,7 @@ def $is_callmethode(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:149.1-150.31
+;; spec/1b-syntax-el-aux.watsup:149.1-150.31
 def $is_calltype(expr')
 
 1. If (expr' matches pattern `CallTypeE%%%%`), then
@@ -752,7 +752,7 @@ def $is_calltype(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:155.1-156.27
+;; spec/1b-syntax-el-aux.watsup:155.1-156.27
 def $is_inste(expr')
 
 1. If (expr' matches pattern `InstE%%%`), then
@@ -765,7 +765,7 @@ def $is_inste(expr')
 
   1. Return false
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:165.1-166.17
+;; spec/1b-syntax-el-aux.watsup:165.1-166.17
 def $string_of_name(name)
 
 1. If (name matches pattern `TOP%`), then
@@ -780,7 +780,7 @@ def $string_of_name(name)
 
   2. Return id
 
-;; ../../../../spec/1b-syntax-el-aux.watsup:175.1-176.17
+;; spec/1b-syntax-el-aux.watsup:175.1-176.17
 def $id_of_name(name)
 
 1. If (name matches pattern `TOP%`), then
@@ -795,18 +795,18 @@ def $id_of_name(name)
 
   2. Return id
 
-;; ../../../../spec/2a-runtime-domain.watsup:10.14-10.16
+;; spec/2a-runtime-domain.watsup:10.14-10.16
 syntax tid = id
 
-;; ../../../../spec/2a-runtime-domain.watsup:11.51-11.59
+;; spec/2a-runtime-domain.watsup:11.51-11.59
 syntax tidset = set<tid>
 
-;; ../../../../spec/2a-runtime-domain.watsup:13.1-14.27
+;; spec/2a-runtime-domain.watsup:13.1-14.27
 def $fresh_tid
 
 
 
-;; ../../../../spec/2a-runtime-domain.watsup:16.1-17.28
+;; spec/2a-runtime-domain.watsup:16.1-17.28
 def $fresh_tids(nat')
 
 1. If (nat' = 0), then
@@ -817,19 +817,19 @@ def $fresh_tids(nat')
 
   1. Return $fresh_tid :: $fresh_tids((nat' - 1))
 
-;; ../../../../spec/2a-runtime-domain.watsup:29.14-29.28
+;; spec/2a-runtime-domain.watsup:29.14-29.28
 syntax fid = 
    | `%%`(id, (id, bool)*)
 
-;; ../../../../spec/2a-runtime-domain.watsup:30.14-30.17
+;; spec/2a-runtime-domain.watsup:30.14-30.17
 syntax cid = fid
 
-;; ../../../../spec/2a-runtime-domain.watsup:34.1-34.30
+;; spec/2a-runtime-domain.watsup:34.1-34.30
 def $to_fid(id, param*)
 
 1. Return (id $to_fid'(param*))
 
-;; ../../../../spec/2a-runtime-domain.watsup:35.1-35.35
+;; spec/2a-runtime-domain.watsup:35.1-35.35
 def $to_fid'(param*)
 
 1. If (param* matches pattern []), then
@@ -840,40 +840,50 @@ def $to_fid'(param*)
 
   1. Let param_h :: param_t* be param*
 
-  2. Let (id dir type expr?) be param_h
+  2. Let (id dir type expr'?) be param_h
 
-  3. If (expr? matches pattern (_)), then
+  3. If (expr'? matches pattern (_)), then
 
-    1. Let ?(expr) be expr?
+    1. Let ?(expr) be expr'?
 
     2. Return (id, true) :: $to_fid'(param_t*)
 
-  3. Else If (expr? matches pattern ()), then
+  3. Else
+
+    1. Phantom#0
+
+  4. Let (id dir type expr?) be param_h
+
+  5. If (expr? matches pattern ()), then
 
     1. Return (id, false) :: $to_fid'(param_t*)
 
-;; ../../../../spec/2a-runtime-domain.watsup:46.1-46.30
+  5. Else
+
+    1. Phantom#1
+
+;; spec/2a-runtime-domain.watsup:46.1-46.30
 def $to_cid(id, param*)
 
 1. Return $to_fid(id, param*)
 
-;; ../../../../spec/2a-runtime-domain.watsup:54.14-54.17
+;; spec/2a-runtime-domain.watsup:54.14-54.17
 syntax oid = id*
 
-;; ../../../../spec/2b1-runtime-bitstr.watsup:5.17-5.20
+;; spec/2b1-runtime-bitstr.watsup:5.17-5.20
 syntax bitstr = int
 
-;; ../../../../spec/2b1-runtime-bitstr.watsup:10.1-10.31
+;; spec/2b1-runtime-bitstr.watsup:10.1-10.31
 def $to_int
 
 
 
-;; ../../../../spec/2b1-runtime-bitstr.watsup:14.1-14.34
+;; spec/2b1-runtime-bitstr.watsup:14.1-14.34
 def $to_bitstr
 
 
 
-;; ../../../../spec/2b2-runtime-value.watsup:9.1-37.57
+;; spec/2b2-runtime-value.watsup:9.1-37.57
 syntax val = 
    | `ErrV%`(member)
    | `MatchKindV%`(member)
@@ -902,13 +912,13 @@ syntax val =
    | `InvalidV`()
    | `SetV%`(setval)
 
-;; ../../../../spec/2b2-runtime-value.watsup:40.1-42.83
+;; spec/2b2-runtime-value.watsup:40.1-42.83
 syntax setval = 
    | `SingletonSet%`(val)
    | `MaskSet%%`(val, val)
    | `RangeSet%%`(val, val)
 
-;; ../../../../spec/2b3-runtime-value-aux.watsup:3.1-3.24
+;; spec/2b3-runtime-value-aux.watsup:3.1-3.24
 def $get_num(val)
 
 1. If (val matches pattern `IntV%`), then
@@ -937,13 +947,13 @@ def $get_num(val)
 
 1. Else
 
-  1. Phantom#0
+  1. Phantom#2
 
-;; ../../../../spec/2c1-runtime-type.watsup:12.3-12.18
+;; spec/2c1-runtime-type.watsup:12.3-12.18
 syntax paramtyp = 
    | `%%%%`(id, dir, typ, val?)
 
-;; ../../../../spec/2c1-runtime-type.watsup:25.1-29.38
+;; spec/2c1-runtime-type.watsup:25.1-29.38
 syntax primtyp = 
    | `VoidT`()
    | `ErrT`()
@@ -951,14 +961,14 @@ syntax primtyp =
    | `StrT`()
    | `BoolT`()
 
-;; ../../../../spec/2c1-runtime-type.watsup:32.1-35.78
+;; spec/2c1-runtime-type.watsup:32.1-35.78
 syntax numtyp = 
    | `IntT`()
    | `FIntT%`(width)
    | `FBitT%`(width)
    | `VBitT%`(width)
 
-;; ../../../../spec/2c1-runtime-type.watsup:38.1-38.21
+;; spec/2c1-runtime-type.watsup:38.1-38.21
 syntax basetyp = 
    | `VoidT`()
    | `ErrT`()
@@ -970,16 +980,16 @@ syntax basetyp =
    | `FBitT%`(width)
    | `VBitT%`(width)
 
-;; ../../../../spec/2c1-runtime-type.watsup:45.1-46.98
+;; spec/2c1-runtime-type.watsup:45.1-46.98
 syntax abstyp = 
    | `VarT%`(id)
    | `SpecT%%`(polytypdef, typ*)
 
-;; ../../../../spec/2c1-runtime-type.watsup:53.1-53.57
+;; spec/2c1-runtime-type.watsup:53.1-53.57
 syntax aliastyp = 
    | `DefT%`(typ)
 
-;; ../../../../spec/2c1-runtime-type.watsup:56.1-64.89
+;; spec/2c1-runtime-type.watsup:56.1-64.89
 syntax datatyp = 
    | `NewT%%`(id, typ)
    | `EnumT%%`(id, member*)
@@ -991,7 +1001,7 @@ syntax datatyp =
    | `HeaderT%%`(id, (member, typ)*)
    | `UnionT%%`(id, (member, typ)*)
 
-;; ../../../../spec/2c1-runtime-type.watsup:67.1-71.59
+;; spec/2c1-runtime-type.watsup:67.1-71.59
 syntax objtyp = 
    | `ExternT%%`(id, map<fid, funcdef>)
    | `ParserT%`(paramtyp*)
@@ -999,7 +1009,7 @@ syntax objtyp =
    | `PackageT%`(typ*)
    | `TableT%%`(id, typ)
 
-;; ../../../../spec/2c1-runtime-type.watsup:74.1-74.32
+;; spec/2c1-runtime-type.watsup:74.1-74.32
 syntax deftyp = 
    | `DefT%`(typ)
    | `NewT%%`(id, typ)
@@ -1017,7 +1027,7 @@ syntax deftyp =
    | `PackageT%`(typ*)
    | `TableT%%`(id, typ)
 
-;; ../../../../spec/2c1-runtime-type.watsup:81.1-91.55
+;; spec/2c1-runtime-type.watsup:81.1-91.55
 syntax synthtyp = 
    | `DefaultT`()
    | `SeqT%`(typ*)
@@ -1031,7 +1041,7 @@ syntax synthtyp =
    | `TableStructT%%`(id, (member, typ)*)
    | `AnyT`()
 
-;; ../../../../spec/2c1-runtime-type.watsup:94.1-94.41
+;; spec/2c1-runtime-type.watsup:94.1-94.41
 syntax typ = 
    | `VoidT`()
    | `ErrT`()
@@ -1071,20 +1081,20 @@ syntax typ =
    | `TableStructT%%`(id, (member, typ)*)
    | `AnyT`()
 
-;; ../../../../spec/2c1-runtime-type.watsup:101.3-101.12
+;; spec/2c1-runtime-type.watsup:101.3-101.12
 syntax monotypdef = 
    | `MonoD%`(typ)
 
-;; ../../../../spec/2c1-runtime-type.watsup:103.3-103.34
+;; spec/2c1-runtime-type.watsup:103.3-103.34
 syntax polytypdef = 
    | `PolyD%->%`((tparam*, tparam*), typ)
 
-;; ../../../../spec/2c1-runtime-type.watsup:106.1-107.15
+;; spec/2c1-runtime-type.watsup:106.1-107.15
 syntax typdef = 
    | `MonoD%`(typ)
    | `PolyD%->%`((tparam*, tparam*), typ)
 
-;; ../../../../spec/2c1-runtime-type.watsup:118.1-126.82
+;; spec/2c1-runtime-type.watsup:118.1-126.82
 syntax functyp = 
    | `ActionT%`(paramtyp*)
    | `ExternFuncT%%`(paramtyp*, typ)
@@ -1096,28 +1106,28 @@ syntax functyp =
    | `ControlApplyMethodT%`(paramtyp*)
    | `TableApplyMethodT%`(typ)
 
-;; ../../../../spec/2c1-runtime-type.watsup:135.3-135.65
+;; spec/2c1-runtime-type.watsup:135.3-135.65
 syntax monofuncdef = 
    | `MonoFD%`(functyp)
 
-;; ../../../../spec/2c1-runtime-type.watsup:138.3-138.69
+;; spec/2c1-runtime-type.watsup:138.3-138.69
 syntax polyfuncdef = 
    | `PolyFD%->%`((tparam*, tparam*), functyp)
 
-;; ../../../../spec/2c1-runtime-type.watsup:141.1-142.16
+;; spec/2c1-runtime-type.watsup:141.1-142.16
 syntax funcdef = 
    | `MonoFD%`(functyp)
    | `PolyFD%->%`((tparam*, tparam*), functyp)
 
-;; ../../../../spec/2c1-runtime-type.watsup:155.3-155.52
+;; spec/2c1-runtime-type.watsup:155.3-155.52
 syntax constyp = 
    | `ConsT%%`(paramtyp*, typ)
 
-;; ../../../../spec/2c1-runtime-type.watsup:164.3-164.38
+;; spec/2c1-runtime-type.watsup:164.3-164.38
 syntax consdef = 
    | `ConsD%->%`((tparam*, tparam*), constyp)
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:7.1-8.30
+;; spec/2c2-runtime-type-aux.watsup:7.1-8.30
 def $is_base(typ)
 
 1. If (typ has type basetyp), then
@@ -1130,7 +1140,7 @@ def $is_base(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:13.1-14.35
+;; spec/2c2-runtime-type-aux.watsup:13.1-14.35
 def $is_prim(typ)
 
 1. If (typ has type primtyp), then
@@ -1143,7 +1153,7 @@ def $is_prim(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:19.1-20.27
+;; spec/2c2-runtime-type-aux.watsup:19.1-20.27
 def $is_voidt(typ)
 
 1. If (typ = ((VoidT) as typ)), then
@@ -1154,7 +1164,7 @@ def $is_voidt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:25.1-26.26
+;; spec/2c2-runtime-type-aux.watsup:25.1-26.26
 def $is_errt(typ)
 
 1. If (typ = ((ErrT) as typ)), then
@@ -1165,7 +1175,7 @@ def $is_errt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:31.1-32.33
+;; spec/2c2-runtime-type-aux.watsup:31.1-32.33
 def $is_matchkindt(typ)
 
 1. If (typ = ((MatchKindT) as typ)), then
@@ -1176,7 +1186,7 @@ def $is_matchkindt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:37.1-38.26
+;; spec/2c2-runtime-type-aux.watsup:37.1-38.26
 def $is_strt(typ)
 
 1. If (typ = ((StrT) as typ)), then
@@ -1187,7 +1197,7 @@ def $is_strt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:43.1-44.27
+;; spec/2c2-runtime-type-aux.watsup:43.1-44.27
 def $is_boolt(typ)
 
 1. If (typ = ((BoolT) as typ)), then
@@ -1198,7 +1208,7 @@ def $is_boolt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:49.1-50.33
+;; spec/2c2-runtime-type-aux.watsup:49.1-50.33
 def $is_num(typ)
 
 1. If (typ has type numtyp), then
@@ -1211,7 +1221,7 @@ def $is_num(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:55.1-56.24
+;; spec/2c2-runtime-type-aux.watsup:55.1-56.24
 def $is_intt(typ)
 
 1. If (typ = ((IntT) as typ)), then
@@ -1222,7 +1232,7 @@ def $is_intt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:61.1-62.25
+;; spec/2c2-runtime-type-aux.watsup:61.1-62.25
 def $is_fintt(typ)
 
 1. If (typ has type numtyp), then
@@ -1239,7 +1249,7 @@ def $is_fintt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:67.1-68.27
+;; spec/2c2-runtime-type-aux.watsup:67.1-68.27
 def $is_fbitt(typ)
 
 1. If (typ has type numtyp), then
@@ -1256,7 +1266,7 @@ def $is_fbitt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:73.1-74.27
+;; spec/2c2-runtime-type-aux.watsup:73.1-74.27
 def $is_vbitt(typ)
 
 1. If (typ has type numtyp), then
@@ -1273,7 +1283,7 @@ def $is_vbitt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:79.1-80.34
+;; spec/2c2-runtime-type-aux.watsup:79.1-80.34
 def $is_abstract(typ)
 
 1. If (typ has type abstyp), then
@@ -1286,7 +1296,7 @@ def $is_abstract(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:85.1-86.26
+;; spec/2c2-runtime-type-aux.watsup:85.1-86.26
 def $is_vart(typ)
 
 1. If (typ has type abstyp), then
@@ -1303,7 +1313,7 @@ def $is_vart(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:91.1-92.27
+;; spec/2c2-runtime-type-aux.watsup:91.1-92.27
 def $is_spect(typ)
 
 1. If (typ has type abstyp), then
@@ -1320,7 +1330,7 @@ def $is_spect(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:97.1-98.33
+;; spec/2c2-runtime-type-aux.watsup:97.1-98.33
 def $is_def(typ)
 
 1. If (typ has type deftyp), then
@@ -1333,7 +1343,7 @@ def $is_def(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:103.1-104.31
+;; spec/2c2-runtime-type-aux.watsup:103.1-104.31
 def $is_alias(typ)
 
 1. If (typ has type aliastyp), then
@@ -1346,7 +1356,7 @@ def $is_alias(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:109.1-110.26
+;; spec/2c2-runtime-type-aux.watsup:109.1-110.26
 def $is_deft(typ)
 
 1. If (typ has type aliastyp), then
@@ -1359,7 +1369,7 @@ def $is_deft(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:115.1-116.30
+;; spec/2c2-runtime-type-aux.watsup:115.1-116.30
 def $is_data(typ)
 
 1. If (typ has type datatyp), then
@@ -1372,7 +1382,7 @@ def $is_data(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:121.1-122.26
+;; spec/2c2-runtime-type-aux.watsup:121.1-122.26
 def $is_newt(typ)
 
 1. If (typ has type datatyp), then
@@ -1389,7 +1399,7 @@ def $is_newt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:127.1-128.27
+;; spec/2c2-runtime-type-aux.watsup:127.1-128.27
 def $is_enumt(typ)
 
 1. If (typ has type datatyp), then
@@ -1406,7 +1416,7 @@ def $is_enumt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:133.1-134.28
+;; spec/2c2-runtime-type-aux.watsup:133.1-134.28
 def $is_senumt(typ)
 
 1. If (typ has type datatyp), then
@@ -1423,7 +1433,7 @@ def $is_senumt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:139.1-140.27
+;; spec/2c2-runtime-type-aux.watsup:139.1-140.27
 def $is_listt(typ)
 
 1. If (typ has type datatyp), then
@@ -1440,7 +1450,7 @@ def $is_listt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:145.1-146.28
+;; spec/2c2-runtime-type-aux.watsup:145.1-146.28
 def $is_tuplet(typ)
 
 1. If (typ has type datatyp), then
@@ -1457,7 +1467,7 @@ def $is_tuplet(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:151.1-152.28
+;; spec/2c2-runtime-type-aux.watsup:151.1-152.28
 def $is_stackt(typ)
 
 1. If (typ has type datatyp), then
@@ -1474,7 +1484,7 @@ def $is_stackt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:157.1-158.29
+;; spec/2c2-runtime-type-aux.watsup:157.1-158.29
 def $is_structt(typ)
 
 1. If (typ has type datatyp), then
@@ -1491,7 +1501,7 @@ def $is_structt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:163.1-164.29
+;; spec/2c2-runtime-type-aux.watsup:163.1-164.29
 def $is_headert(typ)
 
 1. If (typ has type datatyp), then
@@ -1508,7 +1518,7 @@ def $is_headert(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:169.1-170.28
+;; spec/2c2-runtime-type-aux.watsup:169.1-170.28
 def $is_uniont(typ)
 
 1. If (typ has type datatyp), then
@@ -1525,7 +1535,7 @@ def $is_uniont(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:175.1-176.32
+;; spec/2c2-runtime-type-aux.watsup:175.1-176.32
 def $is_obj(typ)
 
 1. If (typ has type objtyp), then
@@ -1538,7 +1548,7 @@ def $is_obj(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:181.1-182.29
+;; spec/2c2-runtime-type-aux.watsup:181.1-182.29
 def $is_externt(typ)
 
 1. If (typ has type objtyp), then
@@ -1555,7 +1565,7 @@ def $is_externt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:187.1-188.29
+;; spec/2c2-runtime-type-aux.watsup:187.1-188.29
 def $is_parsert(typ)
 
 1. If (typ has type objtyp), then
@@ -1572,7 +1582,7 @@ def $is_parsert(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:193.1-194.30
+;; spec/2c2-runtime-type-aux.watsup:193.1-194.30
 def $is_controlt(typ)
 
 1. If (typ has type objtyp), then
@@ -1589,7 +1599,7 @@ def $is_controlt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:199.1-200.30
+;; spec/2c2-runtime-type-aux.watsup:199.1-200.30
 def $is_packaget(typ)
 
 1. If (typ has type objtyp), then
@@ -1606,7 +1616,7 @@ def $is_packaget(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:205.1-206.28
+;; spec/2c2-runtime-type-aux.watsup:205.1-206.28
 def $is_tablet(typ)
 
 1. If (typ has type objtyp), then
@@ -1623,7 +1633,7 @@ def $is_tablet(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:211.1-212.37
+;; spec/2c2-runtime-type-aux.watsup:211.1-212.37
 def $is_synth(typ)
 
 1. If (typ has type synthtyp), then
@@ -1636,7 +1646,7 @@ def $is_synth(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:217.1-218.26
+;; spec/2c2-runtime-type-aux.watsup:217.1-218.26
 def $is_seqt(typ)
 
 1. If (typ has type synthtyp), then
@@ -1653,7 +1663,7 @@ def $is_seqt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:223.1-224.29
+;; spec/2c2-runtime-type-aux.watsup:223.1-224.29
 def $is_recordt(typ)
 
 1. If (typ has type synthtyp), then
@@ -1670,7 +1680,7 @@ def $is_recordt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:229.1-230.26
+;; spec/2c2-runtime-type-aux.watsup:229.1-230.26
 def $is_sett(typ)
 
 1. If (typ has type synthtyp), then
@@ -1687,7 +1697,7 @@ def $is_sett(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:235.1-236.35
+;; spec/2c2-runtime-type-aux.watsup:235.1-236.35
 def $is_table_structt(typ)
 
 1. If (typ has type synthtyp), then
@@ -1704,7 +1714,7 @@ def $is_table_structt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:247.1-248.29
+;; spec/2c2-runtime-type-aux.watsup:247.1-248.29
 def $is_actiont(functyp)
 
 1. If (functyp matches pattern `ActionT%`), then
@@ -1717,7 +1727,7 @@ def $is_actiont(functyp)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:253.1-254.34
+;; spec/2c2-runtime-type-aux.watsup:253.1-254.34
 def $is_externfunct(functyp)
 
 1. If (functyp matches pattern `ExternFuncT%%`), then
@@ -1730,7 +1740,7 @@ def $is_externfunct(functyp)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:259.1-260.27
+;; spec/2c2-runtime-type-aux.watsup:259.1-260.27
 def $is_funct(functyp)
 
 1. If (functyp matches pattern `FuncT%%`), then
@@ -1743,7 +1753,7 @@ def $is_funct(functyp)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:265.1-266.37
+;; spec/2c2-runtime-type-aux.watsup:265.1-266.37
 def $is_builtinmethodt(functyp)
 
 1. If (functyp matches pattern `BuiltinMethodT%%`), then
@@ -1756,7 +1766,7 @@ def $is_builtinmethodt(functyp)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:271.1-272.36
+;; spec/2c2-runtime-type-aux.watsup:271.1-272.36
 def $is_externmethodt(functyp)
 
 1. If (functyp matches pattern `ExternMethodT%%`), then
@@ -1769,7 +1779,7 @@ def $is_externmethodt(functyp)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:277.1-278.45
+;; spec/2c2-runtime-type-aux.watsup:277.1-278.45
 def $is_externabstractmethodt(functyp)
 
 1. If (functyp matches pattern `ExternAbstractMethodT%%`), then
@@ -1782,7 +1792,7 @@ def $is_externabstractmethodt(functyp)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:283.1-284.42
+;; spec/2c2-runtime-type-aux.watsup:283.1-284.42
 def $is_parserapplymethodt(functyp)
 
 1. If (functyp matches pattern `ParserApplyMethodT%`), then
@@ -1795,7 +1805,7 @@ def $is_parserapplymethodt(functyp)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:289.1-290.43
+;; spec/2c2-runtime-type-aux.watsup:289.1-290.43
 def $is_controlapplymethodt(functyp)
 
 1. If (functyp matches pattern `ControlApplyMethodT%`), then
@@ -1808,7 +1818,7 @@ def $is_controlapplymethodt(functyp)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:295.1-296.41
+;; spec/2c2-runtime-type-aux.watsup:295.1-296.41
 def $is_tableapplymethodt(functyp)
 
 1. If (functyp matches pattern `TableApplyMethodT%`), then
@@ -1821,7 +1831,7 @@ def $is_tableapplymethodt(functyp)
 
   1. Return false
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:303.1-304.38
+;; spec/2c2-runtime-type-aux.watsup:303.1-304.38
 def $get_params_functyp(functyp)
 
 1. If (functyp matches pattern `ActionT%`), then
@@ -1878,7 +1888,7 @@ def $get_params_functyp(functyp)
 
   2. Return []
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:315.1-316.39
+;; spec/2c2-runtime-type-aux.watsup:315.1-316.39
 def $get_typ_ret_functyp(functyp)
 
 1. If (functyp matches pattern `ActionT%`), then
@@ -1935,7 +1945,7 @@ def $get_typ_ret_functyp(functyp)
 
   2. Return typ_r
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:333.1-334.38
+;; spec/2c2-runtime-type-aux.watsup:333.1-334.38
 def $get_params_funcdef(funcdef)
 
 1. If (funcdef has type monofuncdef), then
@@ -1950,7 +1960,7 @@ def $get_params_funcdef(funcdef)
 
   2. Return $get_params_functyp(ft)
 
-;; ../../../../spec/2c2-runtime-type-aux.watsup:338.1-339.39
+;; spec/2c2-runtime-type-aux.watsup:338.1-339.39
 def $get_typ_ret_funcdef(funcdef)
 
 1. If (funcdef has type monofuncdef), then
@@ -1965,10 +1975,10 @@ def $get_typ_ret_funcdef(funcdef)
 
   2. Return $get_typ_ret_functyp(ft)
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:5.45-5.57
+;; spec/2c3-runtime-type-subst.watsup:5.45-5.57
 syntax theta = map<id, typ>
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:7.1-8.44
+;; spec/2c3-runtime-type-subst.watsup:7.1-8.44
 def $free_typ(typ'')
 
 1. If (typ'' has type basetyp), then
@@ -2147,7 +2157,7 @@ def $free_typ(typ'')
 
   2. Else
 
-    1. Phantom#1
+    1. Phantom#3
 
 2. If (typ'' = ((DefaultT) as typ)), then
 
@@ -2155,7 +2165,7 @@ def $free_typ(typ'')
 
 2. Else
 
-  1. Phantom#2
+  1. Phantom#4
 
 3. If (typ'' = ((InvalidT) as typ)), then
 
@@ -2163,7 +2173,7 @@ def $free_typ(typ'')
 
 3. Else
 
-  1. Phantom#3
+  1. Phantom#5
 
 4. If (typ'' = ((StateT) as typ)), then
 
@@ -2171,7 +2181,7 @@ def $free_typ(typ'')
 
 4. Else
 
-  1. Phantom#4
+  1. Phantom#6
 
 5. If (typ'' = ((AnyT) as typ)), then
 
@@ -2179,9 +2189,9 @@ def $free_typ(typ'')
 
 5. Else
 
-  1. Phantom#5
+  1. Phantom#7
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:9.1-10.44
+;; spec/2c3-runtime-type-subst.watsup:9.1-10.44
 def $free_typdef_poly((PolyD (tparam*, tparam_hidden*) -> typ))
 
 1. Let tidset_typ be $free_typ(typ)
@@ -2190,7 +2200,7 @@ def $free_typdef_poly((PolyD (tparam*, tparam_hidden*) -> typ))
 
 3. Return $diff_set<tid>(tidset_typ, tidset_tparams)
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:11.1-12.44
+;; spec/2c3-runtime-type-subst.watsup:11.1-12.44
 def $free_functyp(functyp)
 
 1. If (functyp matches pattern `ActionT%`), then
@@ -2283,7 +2293,7 @@ def $free_functyp(functyp)
 
   2. Return $free_typ(typ)
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:13.1-14.44
+;; spec/2c3-runtime-type-subst.watsup:13.1-14.44
 def $free_funcdef(funcdef)
 
 1. If (funcdef has type monofuncdef), then
@@ -2302,7 +2312,7 @@ def $free_funcdef(funcdef)
 
   4. Return $diff_set<tid>(tidset_ft, tidset_tparams)
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:16.1-17.33
+;; spec/2c3-runtime-type-subst.watsup:16.1-17.33
 def $subst_typ(theta, typ''')
 
 1. If (typ''' has type abstyp), then
@@ -2315,11 +2325,11 @@ def $subst_typ(theta, typ''')
 
     2. If $in_set<id>(id, $dom_map<id, typ>(theta)), then
 
-      1. Let typ? be $find_map<id, typ>(theta, id)
+      1. Let typ''? be $find_map<id, typ>(theta, id)
 
-      2. If (typ? matches pattern (_)), then
+      2. If (typ''? matches pattern (_)), then
 
-        1. Let ?(typ) be typ?
+        1. Let ?(typ) be typ''?
 
         2. Return typ
 
@@ -2481,16 +2491,16 @@ def $subst_typ(theta, typ''')
 
   1. Return typ'''
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:18.1-19.33
+;; spec/2c3-runtime-type-subst.watsup:18.1-19.33
 def $subst_typdef_poly(theta, (PolyD (tparam*, tparam_hidden*) -> typ))
 
 1. Let ({ tid_free* }) be $diff_set<tid>($free_typ(typ), ({ tparam* ++ tparam_hidden* }))
 
-2. (Let typ? be $find_map<tid, typ>(theta, tid_free))*
+2. (Let typ''? be $find_map<tid, typ>(theta, tid_free))*
 
-3. If ((typ? matches pattern (_)))*, then
+3. If ((typ''? matches pattern (_)))*, then
 
-  1. (Let ?(typ_free) be typ?)*
+  1. (Let ?(typ_free) be typ''?)*
 
   2. Let tidset_capture be $unions_set<tid>($free_typ(typ_free)*)
 
@@ -2512,13 +2522,13 @@ def $subst_typdef_poly(theta, (PolyD (tparam*, tparam_hidden*) -> typ))
 
   4. Else
 
-    1. Phantom#6
+    1. Phantom#8
 
 3. Else
 
-  1. Phantom#7
+  1. Phantom#9
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:20.1-21.33
+;; spec/2c3-runtime-type-subst.watsup:20.1-21.33
 def $subst_funcdef(theta, funcdef)
 
 1. If (funcdef has type monofuncdef), then
@@ -2559,13 +2569,13 @@ def $subst_funcdef(theta, funcdef)
 
     4. Else
 
-      1. Phantom#8
+      1. Phantom#10
 
   4. Else
 
-    1. Phantom#9
+    1. Phantom#11
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:22.1-23.33
+;; spec/2c3-runtime-type-subst.watsup:22.1-23.33
 def $subst_functyp(theta, functyp)
 
 1. If (functyp matches pattern `BuiltinMethodT%%`), then
@@ -2654,7 +2664,7 @@ def $subst_functyp(theta, functyp)
 
   4. Return (ExternAbstractMethodT pt'* $subst_typ(theta, typ))
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:24.1-25.33
+;; spec/2c3-runtime-type-subst.watsup:24.1-25.33
 def $subst_constyp(theta, (ConsT pt* typ))
 
 1. (Let (id dir typ_p val?) be pt)*
@@ -2663,28 +2673,30 @@ def $subst_constyp(theta, (ConsT pt* typ))
 
 3. Return (ConsT pt'* $subst_typ(theta, typ))
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:317.1-318.57
-def $specialize_typdef(typdef, typ*')
+;; spec/2c3-runtime-type-subst.watsup:317.1-318.57
+def $specialize_typdef(typdef, typ''*)
 
-1. If (typdef has type monotypdef), then
+1. (Let typ' be typ'')*
+
+2. If (typdef has type monotypdef), then
 
   1. Let (MonoD typ) be (typdef as monotypdef)
 
-  2. If (typ*' matches pattern []), then
+  2. If (typ'* matches pattern []), then
 
     1. Return typ
 
   2. Else
 
-    1. Phantom#10
+    1. Phantom#12
 
-1. Else
+2. Else
 
-  1. Phantom#11
+  1. Phantom#13
 
-2. Let typ_a* be typ*'
+3. (Let typ_a be typ'')*
 
-3. If (typdef has type polytypdef), then
+4. If (typdef has type polytypdef), then
 
   1. Let (PolyD (tparam*, tparam_hidden*) -> typ) be (typdef as polytypdef)
 
@@ -2694,32 +2706,34 @@ def $specialize_typdef(typdef, typ*')
 
   4. Return $subst_typ(theta, typ)
 
-3. Else
+4. Else
+
+  1. Phantom#14
 
-  1. Phantom#12
+;; spec/2c3-runtime-type-subst.watsup:329.1-330.57
+def $specialize_funcdef(funcdef, typ'*)
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:329.1-330.57
-def $specialize_funcdef(funcdef, typ*')
+1. (Let typ be typ')*
 
-1. If (funcdef has type monofuncdef), then
+2. If (funcdef has type monofuncdef), then
 
   1. Let (MonoFD ft) be (funcdef as monofuncdef)
 
-  2. If (typ*' matches pattern []), then
+  2. If (typ* matches pattern []), then
 
     1. Return (ft, [])
 
   2. Else
 
-    1. Phantom#13
+    1. Phantom#15
 
-1. Else
+2. Else
 
-  1. Phantom#14
+  1. Phantom#16
 
-2. Let typ_a* be typ*'
+3. (Let typ_a be typ')*
 
-3. If (funcdef has type polyfuncdef), then
+4. If (funcdef has type polyfuncdef), then
 
   1. Let (PolyFD (tparam*, tparam_hidden*) -> ft) be (funcdef as polyfuncdef)
 
@@ -2731,7 +2745,7 @@ def $specialize_funcdef(funcdef, typ*')
 
   3. Else
 
-    1. Phantom#15
+    1. Phantom#17
 
   4. If ((|typ_a*| = 0) /\ (|tparam'*| > 0)), then
 
@@ -2741,7 +2755,7 @@ def $specialize_funcdef(funcdef, typ*')
 
   4. Else
 
-    1. Phantom#16
+    1. Phantom#18
 
   5. If (((|typ_a*| > 0) /\ (|tparam*| = |typ_a*|)) /\ (|tparam_hidden*| > 0)), then
 
@@ -2753,13 +2767,13 @@ def $specialize_funcdef(funcdef, typ*')
 
   5. Else
 
-    1. Phantom#17
+    1. Phantom#19
 
-3. Else
+4. Else
 
-  1. Phantom#18
+  1. Phantom#20
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:359.1-360.57
+;; spec/2c3-runtime-type-subst.watsup:359.1-360.57
 def $specialize_consdef((ConsD (tparam*, tparam_hidden*) -> ct), typ_a*)
 
 1. Let tparam'* be tparam* ++ tparam_hidden*
@@ -2770,7 +2784,7 @@ def $specialize_consdef((ConsD (tparam*, tparam_hidden*) -> ct), typ_a*)
 
 2. Else
 
-  1. Phantom#19
+  1. Phantom#21
 
 3. If ((|typ_a*| = 0) /\ (|tparam'*| > 0)), then
 
@@ -2780,7 +2794,7 @@ def $specialize_consdef((ConsD (tparam*, tparam_hidden*) -> ct), typ_a*)
 
 3. Else
 
-  1. Phantom#20
+  1. Phantom#22
 
 4. If (((|typ_a*| > 0) /\ (|tparam*| = |typ_a*|)) /\ (|tparam_hidden*| > 0)), then
 
@@ -2792,9 +2806,9 @@ def $specialize_consdef((ConsD (tparam*, tparam_hidden*) -> ct), typ_a*)
 
 4. Else
 
-  1. Phantom#21
+  1. Phantom#23
 
-;; ../../../../spec/2c3-runtime-type-subst.watsup:387.1-388.47
+;; spec/2c3-runtime-type-subst.watsup:387.1-388.47
 def $canon_typ(typ'')
 
 1. If (typ'' has type abstyp), then
@@ -2819,12 +2833,12 @@ def $canon_typ(typ'')
 
   1. Return typ''
 
-;; ../../../../spec/2c4-runtime-type-util.watsup:7.1-8.28
+;; spec/2c4-runtime-type-util.watsup:7.1-8.28
 def $is_nominal(typ)
 
 1. Return $is_nominal'($canon_typ(typ))
 
-;; ../../../../spec/2c4-runtime-type-util.watsup:9.1-9.29
+;; spec/2c4-runtime-type-util.watsup:9.1-9.29
 def $is_nominal'(typ)
 
 1. If (typ has type datatyp), then
@@ -2887,12 +2901,12 @@ def $is_nominal'(typ)
 
   1. Return false
 
-;; ../../../../spec/2c4-runtime-type-util.watsup:25.1-26.32
+;; spec/2c4-runtime-type-util.watsup:25.1-26.32
 def $is_deftable(typ)
 
 1. Return $is_deftable'($canon_typ(typ))
 
-;; ../../../../spec/2c4-runtime-type-util.watsup:27.1-27.30
+;; spec/2c4-runtime-type-util.watsup:27.1-27.30
 def $is_deftable'(typ'')
 
 1. If (typ'' = ((ErrT) as typ)), then
@@ -2997,12 +3011,12 @@ def $is_deftable'(typ'')
 
   1. Return false
 
-;; ../../../../spec/2c4-runtime-type-util.watsup:54.1-55.30
+;; spec/2c4-runtime-type-util.watsup:54.1-55.30
 def $is_equalable(typ)
 
 1. Return $is_equalable'($canon_typ(typ))
 
-;; ../../../../spec/2c4-runtime-type-util.watsup:56.1-56.31
+;; spec/2c4-runtime-type-util.watsup:56.1-56.31
 def $is_equalable'(typ)
 
 1. If (typ = ((VoidT) as typ)), then
@@ -3063,12 +3077,12 @@ def $is_equalable'(typ)
 
   1. Return true
 
-;; ../../../../spec/2c4-runtime-type-util.watsup:72.1-73.31
+;; spec/2c4-runtime-type-util.watsup:72.1-73.31
 def $is_assignable(typ)
 
 1. Return $is_assignable'($canon_typ(typ))
 
-;; ../../../../spec/2c4-runtime-type-util.watsup:74.1-74.32
+;; spec/2c4-runtime-type-util.watsup:74.1-74.32
 def $is_assignable'(typ)
 
 1. If (typ = ((VoidT) as typ)), then
@@ -3099,12 +3113,12 @@ def $is_assignable'(typ)
 
   1. Return true
 
-;; ../../../../spec/2c4-runtime-type-util.watsup:89.1-89.26
+;; spec/2c4-runtime-type-util.watsup:89.1-89.26
 def $get_width(typ)
 
 1. Return $get_width'($canon_typ(typ))
 
-;; ../../../../spec/2c4-runtime-type-util.watsup:90.1-90.27
+;; spec/2c4-runtime-type-util.watsup:90.1-90.27
 def $get_width'(typ'')
 
 1. If (typ'' has type numtyp), then
@@ -3131,7 +3145,7 @@ def $get_width'(typ'')
 
   2. Else
 
-    1. Phantom#24
+    1. Phantom#26
 
 1. Else If (typ'' has type datatyp), then
 
@@ -3145,13 +3159,13 @@ def $get_width'(typ'')
 
   2. Else
 
-    1. Phantom#22
+    1. Phantom#24
 
 1. Else
 
-  1. Phantom#23
+  1. Phantom#25
 
-;; ../../../../spec/2c5-runtime-type-alpha.watsup:5.1-7.20
+;; spec/2c5-runtime-type-alpha.watsup:5.1-7.20
 relation Type_alpha: typ'', typ'''
 
 1. If (typ'' has type basetyp), then
@@ -3168,11 +3182,11 @@ relation Type_alpha: typ'', typ'''
 
     2. Else
 
-      1. Phantom#123
+      1. Phantom#125
 
   2. Else
 
-    1. Phantom#124
+    1. Phantom#126
 
 1. Else If (typ'' has type abstyp), then
 
@@ -3196,15 +3210,15 @@ relation Type_alpha: typ'', typ'''
 
         2. Else
 
-          1. Phantom#120
+          1. Phantom#122
 
       2. Else
 
-        1. Phantom#121
+        1. Phantom#123
 
     2. Else
 
-      1. Phantom#122
+      1. Phantom#124
 
   2. Else If (abstyp matches pattern `SpecT%%`), then
 
@@ -3232,11 +3246,11 @@ relation Type_alpha: typ'', typ'''
 
             1. Else
 
-              1. Phantom#114
+              1. Phantom#116
 
           1. Else
 
-            1. Phantom#115
+            1. Phantom#117
 
           2. If (~$is_nominal(typ_a') /\ ~$is_nominal(typ_b')), then
 
@@ -3244,19 +3258,19 @@ relation Type_alpha: typ'', typ'''
 
           2. Else
 
-            1. Phantom#116
+            1. Phantom#118
 
         4. Else
 
-          1. Phantom#117
+          1. Phantom#119
 
       2. Else
 
-        1. Phantom#118
+        1. Phantom#120
 
     2. Else
 
-      1. Phantom#119
+      1. Phantom#121
 
 1. Else If (typ'' has type aliastyp), then
 
@@ -3268,7 +3282,7 @@ relation Type_alpha: typ'', typ'''
 
   2. Else
 
-    1. Phantom#113
+    1. Phantom#115
 
 1. Else If (typ'' has type datatyp), then
 
@@ -3294,19 +3308,19 @@ relation Type_alpha: typ'', typ'''
 
           1. Else
 
-            1. Phantom#109
+            1. Phantom#111
 
         2. Else
 
-          1. Phantom#110
+          1. Phantom#112
 
       2. Else
 
-        1. Phantom#111
+        1. Phantom#113
 
     2. Else
 
-      1. Phantom#112
+      1. Phantom#114
 
   2. Else If (datatyp matches pattern `EnumT%%`), then
 
@@ -3328,19 +3342,19 @@ relation Type_alpha: typ'', typ'''
 
           1. Else
 
-            1. Phantom#105
+            1. Phantom#107
 
         2. Else
 
-          1. Phantom#106
+          1. Phantom#108
 
       2. Else
 
-        1. Phantom#107
+        1. Phantom#109
 
     2. Else
 
-      1. Phantom#108
+      1. Phantom#110
 
   2. Else If (datatyp matches pattern `SEnumT%%%`), then
 
@@ -3366,27 +3380,27 @@ relation Type_alpha: typ'', typ'''
 
               1. Else
 
-                1. Phantom#99
+                1. Phantom#101
 
             1. Else
 
-              1. Phantom#100
+              1. Phantom#102
 
           1. Else
 
-            1. Phantom#101
+            1. Phantom#103
 
         2. Else
 
-          1. Phantom#102
+          1. Phantom#104
 
       2. Else
 
-        1. Phantom#103
+        1. Phantom#105
 
     2. Else
 
-      1. Phantom#104
+      1. Phantom#106
 
   2. Else If (datatyp matches pattern `ListT%`), then
 
@@ -3406,15 +3420,15 @@ relation Type_alpha: typ'', typ'''
 
         2. Else
 
-          1. Phantom#96
+          1. Phantom#98
 
       2. Else
 
-        1. Phantom#97
+        1. Phantom#99
 
     2. Else
 
-      1. Phantom#98
+      1. Phantom#100
 
   2. Else If (datatyp matches pattern `TupleT%`), then
 
@@ -3434,15 +3448,15 @@ relation Type_alpha: typ'', typ'''
 
         2. Else
 
-          1. Phantom#93
+          1. Phantom#95
 
       2. Else
 
-        1. Phantom#94
+        1. Phantom#96
 
     2. Else
 
-      1. Phantom#95
+      1. Phantom#97
 
   2. Else If (datatyp matches pattern `StackT%%`), then
 
@@ -3464,19 +3478,19 @@ relation Type_alpha: typ'', typ'''
 
           1. Else
 
-            1. Phantom#89
+            1. Phantom#91
 
         2. Else
 
-          1. Phantom#90
+          1. Phantom#92
 
       2. Else
 
-        1. Phantom#91
+        1. Phantom#93
 
     2. Else
 
-      1. Phantom#92
+      1. Phantom#94
 
   2. Else If (datatyp matches pattern `StructT%%`), then
 
@@ -3500,23 +3514,23 @@ relation Type_alpha: typ'', typ'''
 
             1. Else
 
-              1. Phantom#84
+              1. Phantom#86
 
           1. Else
 
-            1. Phantom#85
+            1. Phantom#87
 
         2. Else
 
-          1. Phantom#86
+          1. Phantom#88
 
       2. Else
 
-        1. Phantom#87
+        1. Phantom#89
 
     2. Else
 
-      1. Phantom#88
+      1. Phantom#90
 
   2. Else If (datatyp matches pattern `HeaderT%%`), then
 
@@ -3540,23 +3554,23 @@ relation Type_alpha: typ'', typ'''
 
             1. Else
 
-              1. Phantom#79
+              1. Phantom#81
 
           1. Else
 
-            1. Phantom#80
+            1. Phantom#82
 
         2. Else
 
-          1. Phantom#81
+          1. Phantom#83
 
       2. Else
 
-        1. Phantom#82
+        1. Phantom#84
 
     2. Else
 
-      1. Phantom#83
+      1. Phantom#85
 
   2. Else If (datatyp matches pattern `UnionT%%`), then
 
@@ -3580,23 +3594,23 @@ relation Type_alpha: typ'', typ'''
 
             1. Else
 
-              1. Phantom#74
+              1. Phantom#76
 
           1. Else
 
-            1. Phantom#75
+            1. Phantom#77
 
         2. Else
 
-          1. Phantom#76
+          1. Phantom#78
 
       2. Else
 
-        1. Phantom#77
+        1. Phantom#79
 
     2. Else
 
-      1. Phantom#78
+      1. Phantom#80
 
 1. Else If (typ'' has type objtyp), then
 
@@ -3628,11 +3642,11 @@ relation Type_alpha: typ'', typ'''
 
               1. (Let ?(fd_a') be funcdef?)*
 
-              2. (Let funcdef?' be $find_map<fid, funcdef>(fmap_b, fid_a))*
+              2. (Let funcdef'? be $find_map<fid, funcdef>(fmap_b, fid_a))*
 
-              3. If ((funcdef?' matches pattern (_)))*, then
+              3. If ((funcdef'? matches pattern (_)))*, then
 
-                1. (Let ?(fd_b') be funcdef?')*
+                1. (Let ?(fd_b') be funcdef'?)*
 
                 2. If ((FuncDef_alpha: fd_a' ~~ fd_b' holds))*, then
 
@@ -3640,31 +3654,31 @@ relation Type_alpha: typ'', typ'''
 
                 2. Else
 
-                  1. Phantom#67
+                  1. Phantom#69
 
               3. Else
 
-                1. Phantom#68
+                1. Phantom#70
 
             2. Else
 
-              1. Phantom#69
+              1. Phantom#71
 
           3. Else
 
-            1. Phantom#70
+            1. Phantom#72
 
         2. Else
 
-          1. Phantom#71
+          1. Phantom#73
 
       2. Else
 
-        1. Phantom#72
+        1. Phantom#74
 
     2. Else
 
-      1. Phantom#73
+      1. Phantom#75
 
   2. Else If (objtyp matches pattern `ParserT%`), then
 
@@ -3690,19 +3704,19 @@ relation Type_alpha: typ'', typ'''
 
           1. Else
 
-            1. Phantom#63
+            1. Phantom#65
 
         4. Else
 
-          1. Phantom#64
+          1. Phantom#66
 
       2. Else
 
-        1. Phantom#65
+        1. Phantom#67
 
     2. Else
 
-      1. Phantom#66
+      1. Phantom#68
 
   2. Else If (objtyp matches pattern `ControlT%`), then
 
@@ -3728,19 +3742,19 @@ relation Type_alpha: typ'', typ'''
 
           1. Else
 
-            1. Phantom#59
+            1. Phantom#61
 
         4. Else
 
-          1. Phantom#60
+          1. Phantom#62
 
       2. Else
 
-        1. Phantom#61
+        1. Phantom#63
 
     2. Else
 
-      1. Phantom#62
+      1. Phantom#64
 
   2. Else If (objtyp matches pattern `PackageT%`), then
 
@@ -3760,15 +3774,15 @@ relation Type_alpha: typ'', typ'''
 
         2. Else
 
-          1. Phantom#56
+          1. Phantom#58
 
       2. Else
 
-        1. Phantom#57
+        1. Phantom#59
 
     2. Else
 
-      1. Phantom#58
+      1. Phantom#60
 
   2. Else If (objtyp matches pattern `TableT%%`), then
 
@@ -3790,19 +3804,19 @@ relation Type_alpha: typ'', typ'''
 
           1. Else
 
-            1. Phantom#52
+            1. Phantom#54
 
         2. Else
 
-          1. Phantom#53
+          1. Phantom#55
 
       2. Else
 
-        1. Phantom#54
+        1. Phantom#56
 
     2. Else
 
-      1. Phantom#55
+      1. Phantom#57
 
 1. Else If (typ'' has type synthtyp), then
 
@@ -3826,15 +3840,15 @@ relation Type_alpha: typ'', typ'''
 
         2. Else
 
-          1. Phantom#49
+          1. Phantom#51
 
       2. Else
 
-        1. Phantom#50
+        1. Phantom#52
 
     2. Else
 
-      1. Phantom#51
+      1. Phantom#53
 
   2. Else If (synthtyp matches pattern `SeqDefaultT%`), then
 
@@ -3854,15 +3868,15 @@ relation Type_alpha: typ'', typ'''
 
         2. Else
 
-          1. Phantom#46
+          1. Phantom#48
 
       2. Else
 
-        1. Phantom#47
+        1. Phantom#49
 
     2. Else
 
-      1. Phantom#48
+      1. Phantom#50
 
   2. Else If (synthtyp matches pattern `RecordT%`), then
 
@@ -3884,19 +3898,19 @@ relation Type_alpha: typ'', typ'''
 
           1. Else
 
-            1. Phantom#42
+            1. Phantom#44
 
         2. Else
 
-          1. Phantom#43
+          1. Phantom#45
 
       2. Else
 
-        1. Phantom#44
+        1. Phantom#46
 
     2. Else
 
-      1. Phantom#45
+      1. Phantom#47
 
   2. Else If (synthtyp matches pattern `RecordDefaultT%`), then
 
@@ -3918,19 +3932,19 @@ relation Type_alpha: typ'', typ'''
 
           1. Else
 
-            1. Phantom#38
+            1. Phantom#40
 
         2. Else
 
-          1. Phantom#39
+          1. Phantom#41
 
       2. Else
 
-        1. Phantom#40
+        1. Phantom#42
 
     2. Else
 
-      1. Phantom#41
+      1. Phantom#43
 
   2. Else If (synthtyp matches pattern `SetT%`), then
 
@@ -3950,15 +3964,15 @@ relation Type_alpha: typ'', typ'''
 
         2. Else
 
-          1. Phantom#35
+          1. Phantom#37
 
       2. Else
 
-        1. Phantom#36
+        1. Phantom#38
 
     2. Else
 
-      1. Phantom#37
+      1. Phantom#39
 
   2. Else If (synthtyp matches pattern `TableEnumT%%`), then
 
@@ -3980,19 +3994,19 @@ relation Type_alpha: typ'', typ'''
 
           1. Else
 
-            1. Phantom#31
+            1. Phantom#33
 
         2. Else
 
-          1. Phantom#32
+          1. Phantom#34
 
       2. Else
 
-        1. Phantom#33
+        1. Phantom#35
 
     2. Else
 
-      1. Phantom#34
+      1. Phantom#36
 
   2. Else If (synthtyp matches pattern `TableStructT%%`), then
 
@@ -4016,27 +4030,27 @@ relation Type_alpha: typ'', typ'''
 
             1. Else
 
-              1. Phantom#25
+              1. Phantom#27
 
           1. Else
 
-            1. Phantom#26
+            1. Phantom#28
 
         2. Else
 
-          1. Phantom#27
+          1. Phantom#29
 
       2. Else
 
-        1. Phantom#28
+        1. Phantom#30
 
     2. Else
 
-      1. Phantom#29
+      1. Phantom#31
 
   2. Else
 
-    1. Phantom#30
+    1. Phantom#32
 
 2. If (typ''' has type aliastyp), then
 
@@ -4048,11 +4062,11 @@ relation Type_alpha: typ'', typ'''
 
   2. Else
 
-    1. Phantom#125
+    1. Phantom#127
 
 2. Else
 
-  1. Phantom#126
+  1. Phantom#128
 
 3. If (typ'' = ((DefaultT) as typ)), then
 
@@ -4062,11 +4076,11 @@ relation Type_alpha: typ'', typ'''
 
   1. Else
 
-    1. Phantom#127
+    1. Phantom#129
 
 3. Else
 
-  1. Phantom#128
+  1. Phantom#130
 
 4. If (typ'' = ((InvalidT) as typ)), then
 
@@ -4076,11 +4090,11 @@ relation Type_alpha: typ'', typ'''
 
   1. Else
 
-    1. Phantom#129
+    1. Phantom#131
 
 4. Else
 
-  1. Phantom#130
+  1. Phantom#132
 
 5. If (typ'' = ((StateT) as typ)), then
 
@@ -4090,11 +4104,11 @@ relation Type_alpha: typ'', typ'''
 
   1. Else
 
-    1. Phantom#131
+    1. Phantom#133
 
 5. Else
 
-  1. Phantom#132
+  1. Phantom#134
 
 6. If (typ'' = ((AnyT) as typ)), then
 
@@ -4104,13 +4118,13 @@ relation Type_alpha: typ'', typ'''
 
   1. Else
 
-    1. Phantom#133
+    1. Phantom#135
 
 6. Else
 
-  1. Phantom#134
+  1. Phantom#136
 
-;; ../../../../spec/2c5-runtime-type-alpha.watsup:9.1-11.20
+;; spec/2c5-runtime-type-alpha.watsup:9.1-11.20
 relation FuncType_alpha: functyp, functyp'
 
 1. If (functyp matches pattern `BuiltinMethodT%%`), then
@@ -4135,19 +4149,19 @@ relation FuncType_alpha: functyp, functyp'
 
         1. Else
 
-          1. Phantom#162
+          1. Phantom#164
 
       1. Else
 
-        1. Phantom#163
+        1. Phantom#165
 
     4. Else
 
-      1. Phantom#164
+      1. Phantom#166
 
   2. Else
 
-    1. Phantom#165
+    1. Phantom#167
 
 1. Else If (functyp matches pattern `ActionT%`), then
 
@@ -4169,15 +4183,15 @@ relation FuncType_alpha: functyp, functyp'
 
       1. Else
 
-        1. Phantom#159
+        1. Phantom#161
 
     4. Else
 
-      1. Phantom#160
+      1. Phantom#162
 
   2. Else
 
-    1. Phantom#161
+    1. Phantom#163
 
 1. Else If (functyp matches pattern `ParserApplyMethodT%`), then
 
@@ -4199,15 +4213,15 @@ relation FuncType_alpha: functyp, functyp'
 
       1. Else
 
-        1. Phantom#156
+        1. Phantom#158
 
     4. Else
 
-      1. Phantom#157
+      1. Phantom#159
 
   2. Else
 
-    1. Phantom#158
+    1. Phantom#160
 
 1. Else If (functyp matches pattern `ControlApplyMethodT%`), then
 
@@ -4229,15 +4243,15 @@ relation FuncType_alpha: functyp, functyp'
 
       1. Else
 
-        1. Phantom#153
+        1. Phantom#155
 
     4. Else
 
-      1. Phantom#154
+      1. Phantom#156
 
   2. Else
 
-    1. Phantom#155
+    1. Phantom#157
 
 1. Else If (functyp matches pattern `TableApplyMethodT%`), then
 
@@ -4253,11 +4267,11 @@ relation FuncType_alpha: functyp, functyp'
 
     2. Else
 
-      1. Phantom#151
+      1. Phantom#153
 
   2. Else
 
-    1. Phantom#152
+    1. Phantom#154
 
 1. Else If (functyp matches pattern `ExternFuncT%%`), then
 
@@ -4281,19 +4295,19 @@ relation FuncType_alpha: functyp, functyp'
 
         1. Else
 
-          1. Phantom#147
+          1. Phantom#149
 
       1. Else
 
-        1. Phantom#148
+        1. Phantom#150
 
     4. Else
 
-      1. Phantom#149
+      1. Phantom#151
 
   2. Else
 
-    1. Phantom#150
+    1. Phantom#152
 
 1. Else If (functyp matches pattern `FuncT%%`), then
 
@@ -4317,19 +4331,19 @@ relation FuncType_alpha: functyp, functyp'
 
         1. Else
 
-          1. Phantom#143
+          1. Phantom#145
 
       1. Else
 
-        1. Phantom#144
+        1. Phantom#146
 
     4. Else
 
-      1. Phantom#145
+      1. Phantom#147
 
   2. Else
 
-    1. Phantom#146
+    1. Phantom#148
 
 1. Else If (functyp matches pattern `ExternMethodT%%`), then
 
@@ -4353,19 +4367,19 @@ relation FuncType_alpha: functyp, functyp'
 
         1. Else
 
-          1. Phantom#139
+          1. Phantom#141
 
       1. Else
 
-        1. Phantom#140
+        1. Phantom#142
 
     4. Else
 
-      1. Phantom#141
+      1. Phantom#143
 
   2. Else
 
-    1. Phantom#142
+    1. Phantom#144
 
 1. Else If (functyp matches pattern `ExternAbstractMethodT%%`), then
 
@@ -4389,21 +4403,21 @@ relation FuncType_alpha: functyp, functyp'
 
         1. Else
 
-          1. Phantom#135
+          1. Phantom#137
 
       1. Else
 
-        1. Phantom#136
+        1. Phantom#138
 
     4. Else
 
-      1. Phantom#137
+      1. Phantom#139
 
   2. Else
 
-    1. Phantom#138
+    1. Phantom#140
 
-;; ../../../../spec/2c5-runtime-type-alpha.watsup:13.1-15.20
+;; spec/2c5-runtime-type-alpha.watsup:13.1-15.20
 relation FuncDef_alpha: funcdef, funcdef'
 
 1. If (funcdef has type monofuncdef), then
@@ -4420,11 +4434,11 @@ relation FuncDef_alpha: funcdef, funcdef'
 
     2. Else
 
-      1. Phantom#170
+      1. Phantom#172
 
   2. Else
 
-    1. Phantom#171
+    1. Phantom#173
 
 1. Else If (funcdef has type polyfuncdef), then
 
@@ -4454,32 +4468,32 @@ relation FuncDef_alpha: funcdef, funcdef'
 
         6. Else
 
-          1. Phantom#166
+          1. Phantom#168
 
       1. Else
 
-        1. Phantom#167
+        1. Phantom#169
 
     2. Else
 
-      1. Phantom#168
+      1. Phantom#170
 
   2. Else
 
-    1. Phantom#169
+    1. Phantom#171
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:5.1-5.39
-relation Type_wf: tidset, typ'''''
+;; spec/2c6-runtime-type-wellformed.watsup:5.1-5.39
+relation Type_wf: tidset, typ''''''
 
-1. If (typ''''' has type basetyp), then
+1. If (typ'''''' has type basetyp), then
 
-  1. Let basetyp be (typ''''' as basetyp)
+  1. Let basetyp be (typ'''''' as basetyp)
 
   2. The relation holds
 
-1. Else If (typ''''' has type abstyp), then
+1. Else If (typ'''''' has type abstyp), then
 
-  1. Let abstyp be (typ''''' as abstyp)
+  1. Let abstyp be (typ'''''' as abstyp)
 
   2. If (abstyp matches pattern `VarT%`), then
 
@@ -4491,61 +4505,61 @@ relation Type_wf: tidset, typ'''''
 
     2. Else
 
-      1. Phantom#220
+      1. Phantom#222
 
   2. Else If (abstyp matches pattern `SpecT%%`), then
 
     1. Let (SpecT ptd typ_a*) be abstyp
 
-    2. Let typ''''' be $specialize_typdef((ptd as typdef), typ_a*)
+    2. Let typ'''''' be $specialize_typdef((ptd as typdef), typ_a*)
 
-    3. If (Type_wf: tidset |- typ''''' holds), then
+    3. If (Type_wf: tidset |- typ'''''' holds), then
 
       1. The relation holds
 
     3. Else
 
-      1. Phantom#219
+      1. Phantom#221
 
-1. Else If (typ''''' has type aliastyp), then
+1. Else If (typ'''''' has type aliastyp), then
 
-  1. Let (DefT typ''''') be (typ''''' as aliastyp)
+  1. Let (DefT typ'''''') be (typ'''''' as aliastyp)
 
-  2. If $nestable_deft(typ'''''), then
+  2. If $nestable_deft(typ''''''), then
 
-    1. If (Type_wf: tidset |- typ''''' holds), then
+    1. If (Type_wf: tidset |- typ'''''' holds), then
 
       1. The relation holds
 
     1. Else
 
-      1. Phantom#217
+      1. Phantom#219
 
   2. Else
 
-    1. Phantom#218
+    1. Phantom#220
 
-1. Else If (typ''''' has type datatyp), then
+1. Else If (typ'''''' has type datatyp), then
 
-  1. Let datatyp be (typ''''' as datatyp)
+  1. Let datatyp be (typ'''''' as datatyp)
 
   2. If (datatyp matches pattern `NewT%%`), then
 
-    1. Let (NewT _id typ''''') be datatyp
+    1. Let (NewT _id typ'''''') be datatyp
 
-    2. If $nestable_newt(typ'''''), then
+    2. If $nestable_newt(typ''''''), then
 
-      1. If (Type_wf: tidset |- typ''''' holds), then
+      1. If (Type_wf: tidset |- typ'''''' holds), then
 
         1. The relation holds
 
       1. Else
 
-        1. Phantom#215
+        1. Phantom#217
 
     2. Else
 
-      1. Phantom#216
+      1. Phantom#218
 
   2. Else If (datatyp matches pattern `EnumT%%`), then
 
@@ -4557,167 +4571,167 @@ relation Type_wf: tidset, typ'''''
 
     2. Else
 
-      1. Phantom#214
+      1. Phantom#216
 
   2. Else If (datatyp matches pattern `SEnumT%%%`), then
 
-    1. Let (SEnumT _id typ''''' (member, val)*) be datatyp
+    1. Let (SEnumT _id typ'''''' (member, val)*) be datatyp
 
     2. If $distinct_<member>(member*), then
 
-      1. If $nestable_senumt(typ'''''), then
+      1. If $nestable_senumt(typ''''''), then
 
-        1. If (Type_wf: tidset |- typ''''' holds), then
+        1. If (Type_wf: tidset |- typ'''''' holds), then
 
           1. The relation holds
 
         1. Else
 
-          1. Phantom#211
+          1. Phantom#213
 
       1. Else
 
-        1. Phantom#212
+        1. Phantom#214
 
     2. Else
 
-      1. Phantom#213
+      1. Phantom#215
 
   2. Else If (datatyp matches pattern `ListT%`), then
 
-    1. Let (ListT typ''''') be datatyp
+    1. Let (ListT typ'''''') be datatyp
 
-    2. If $nestable_listt(typ'''''), then
+    2. If $nestable_listt(typ''''''), then
 
-      1. If (Type_wf: tidset |- typ''''' holds), then
+      1. If (Type_wf: tidset |- typ'''''' holds), then
 
         1. The relation holds
 
       1. Else
 
-        1. Phantom#209
+        1. Phantom#211
 
     2. Else
 
-      1. Phantom#210
+      1. Phantom#212
 
   2. Else If (datatyp matches pattern `TupleT%`), then
 
-    1. Let (TupleT typ'''''*) be datatyp
+    1. Let (TupleT typ''''''*) be datatyp
 
-    2. If ($nestable_tuplet(typ'''''))*, then
+    2. If ($nestable_tuplet(typ''''''))*, then
 
-      1. If ((Type_wf: tidset |- typ''''' holds))*, then
+      1. If ((Type_wf: tidset |- typ'''''' holds))*, then
 
         1. The relation holds
 
       1. Else
 
-        1. Phantom#207
+        1. Phantom#209
 
     2. Else
 
-      1. Phantom#208
+      1. Phantom#210
 
   2. Else If (datatyp matches pattern `StackT%%`), then
 
-    1. Let (StackT typ''''' i_size) be datatyp
+    1. Let (StackT typ'''''' i_size) be datatyp
 
     2. If (i_size >= (0 as int)), then
 
-      1. If $nestable_stackt(typ'''''), then
+      1. If $nestable_stackt(typ''''''), then
 
-        1. If (Type_wf: tidset |- typ''''' holds), then
+        1. If (Type_wf: tidset |- typ'''''' holds), then
 
           1. The relation holds
 
         1. Else
 
-          1. Phantom#204
+          1. Phantom#206
 
       1. Else
 
-        1. Phantom#205
+        1. Phantom#207
 
     2. Else
 
-      1. Phantom#206
+      1. Phantom#208
 
   2. Else If (datatyp matches pattern `StructT%%`), then
 
-    1. Let (StructT _id (member, typ''''')*) be datatyp
+    1. Let (StructT _id (member, typ'''''')*) be datatyp
 
     2. If $distinct_<member>(member*), then
 
-      1. If ($nestable_structt(typ'''''))*, then
+      1. If ($nestable_structt(typ''''''))*, then
 
-        1. If ((Type_wf: tidset |- typ''''' holds))*, then
+        1. If ((Type_wf: tidset |- typ'''''' holds))*, then
 
           1. The relation holds
 
         1. Else
 
-          1. Phantom#201
+          1. Phantom#203
 
       1. Else
 
-        1. Phantom#202
+        1. Phantom#204
 
     2. Else
 
-      1. Phantom#203
+      1. Phantom#205
 
   2. Else If (datatyp matches pattern `HeaderT%%`), then
 
-    1. Let (HeaderT _id (member, typ''''')*) be datatyp
+    1. Let (HeaderT _id (member, typ'''''')*) be datatyp
 
     2. If $distinct_<member>(member*), then
 
-      1. If ($nestable_headert(typ'''''))*, then
+      1. If ($nestable_headert(typ''''''))*, then
 
-        1. If ((Type_wf: tidset |- typ''''' holds))*, then
+        1. If ((Type_wf: tidset |- typ'''''' holds))*, then
 
           1. The relation holds
 
         1. Else
 
-          1. Phantom#198
+          1. Phantom#200
 
       1. Else
 
-        1. Phantom#199
+        1. Phantom#201
 
     2. Else
 
-      1. Phantom#200
+      1. Phantom#202
 
   2. Else If (datatyp matches pattern `UnionT%%`), then
 
-    1. Let (UnionT _id (member, typ''''')*) be datatyp
+    1. Let (UnionT _id (member, typ'''''')*) be datatyp
 
     2. If $distinct_<member>(member*), then
 
-      1. If ($nestable_uniont(typ'''''))*, then
+      1. If ($nestable_uniont(typ''''''))*, then
 
-        1. If ((Type_wf: tidset |- typ''''' holds))*, then
+        1. If ((Type_wf: tidset |- typ'''''' holds))*, then
 
           1. The relation holds
 
         1. Else
 
-          1. Phantom#195
+          1. Phantom#197
 
       1. Else
 
-        1. Phantom#196
+        1. Phantom#198
 
     2. Else
 
-      1. Phantom#197
+      1. Phantom#199
 
-1. Else If (typ''''' has type objtyp), then
+1. Else If (typ'''''' has type objtyp), then
 
-  1. Let objtyp be (typ''''' as objtyp)
+  1. Let objtyp be (typ'''''' as objtyp)
 
   2. If (objtyp matches pattern `ExternT%%`), then
 
@@ -4731,7 +4745,7 @@ relation Type_wf: tidset, typ'''''
 
     3. Else
 
-      1. Phantom#194
+      1. Phantom#196
 
   2. Else If (objtyp matches pattern `ParserT%`), then
 
@@ -4743,7 +4757,7 @@ relation Type_wf: tidset, typ'''''
 
     2. Else
 
-      1. Phantom#193
+      1. Phantom#195
 
   2. Else If (objtyp matches pattern `ControlT%`), then
 
@@ -4755,123 +4769,123 @@ relation Type_wf: tidset, typ'''''
 
     2. Else
 
-      1. Phantom#192
+      1. Phantom#194
 
   2. Else If (objtyp matches pattern `PackageT%`), then
 
-    1. Let (PackageT typ'''''*) be objtyp
+    1. Let (PackageT typ''''''*) be objtyp
 
-    2. If ((Type_wf: tidset |- typ''''' holds))*, then
+    2. If ((Type_wf: tidset |- typ'''''' holds))*, then
 
       1. The relation holds
 
     2. Else
 
-      1. Phantom#191
+      1. Phantom#193
 
   2. Else If (objtyp matches pattern `TableT%%`), then
 
-    1. Let (TableT _id typ''''') be objtyp
+    1. Let (TableT _id typ'''''') be objtyp
 
-    2. Let typ''''' be $canon_typ(typ''''')
+    2. Let typ'''''' be $canon_typ(typ'''''')
 
-    3. If $is_table_structt(typ'''''), then
+    3. If $is_table_structt(typ''''''), then
 
-      1. If (Type_wf: tidset |- typ''''' holds), then
+      1. If (Type_wf: tidset |- typ'''''' holds), then
 
         1. The relation holds
 
       1. Else
 
-        1. Phantom#189
+        1. Phantom#191
 
     3. Else
 
-      1. Phantom#190
+      1. Phantom#192
 
-1. Else If (typ''''' has type synthtyp), then
+1. Else If (typ'''''' has type synthtyp), then
 
-  1. Let synthtyp be (typ''''' as synthtyp)
+  1. Let synthtyp be (typ'''''' as synthtyp)
 
   2. If (synthtyp matches pattern `SeqT%`), then
 
-    1. Let (SeqT typ'''''*) be synthtyp
+    1. Let (SeqT typ''''''*) be synthtyp
 
-    2. If ((Type_wf: tidset |- typ''''' holds))*, then
+    2. If ((Type_wf: tidset |- typ'''''' holds))*, then
 
       1. The relation holds
 
     2. Else
 
-      1. Phantom#188
+      1. Phantom#190
 
   2. Else If (synthtyp matches pattern `SeqDefaultT%`), then
 
-    1. Let (SeqDefaultT typ'''''*) be synthtyp
+    1. Let (SeqDefaultT typ''''''*) be synthtyp
 
-    2. If ((Type_wf: tidset |- typ''''' holds))*, then
+    2. If ((Type_wf: tidset |- typ'''''' holds))*, then
 
       1. The relation holds
 
     2. Else
 
-      1. Phantom#187
+      1. Phantom#189
 
   2. Else If (synthtyp matches pattern `RecordT%`), then
 
-    1. Let (RecordT (member, typ''''')*) be synthtyp
+    1. Let (RecordT (member, typ'''''')*) be synthtyp
 
     2. If $distinct_<member>(member*), then
 
-      1. If ((Type_wf: tidset |- typ''''' holds))*, then
+      1. If ((Type_wf: tidset |- typ'''''' holds))*, then
 
         1. The relation holds
 
       1. Else
 
-        1. Phantom#185
+        1. Phantom#187
 
     2. Else
 
-      1. Phantom#186
+      1. Phantom#188
 
   2. Else If (synthtyp matches pattern `RecordDefaultT%`), then
 
-    1. Let (RecordDefaultT (member, typ''''')*) be synthtyp
+    1. Let (RecordDefaultT (member, typ'''''')*) be synthtyp
 
     2. If $distinct_<member>(member*), then
 
-      1. If ((Type_wf: tidset |- typ''''' holds))*, then
+      1. If ((Type_wf: tidset |- typ'''''' holds))*, then
 
         1. The relation holds
 
       1. Else
 
-        1. Phantom#183
+        1. Phantom#185
 
     2. Else
 
-      1. Phantom#184
+      1. Phantom#186
 
   2. Else If (synthtyp matches pattern `SetT%`), then
 
-    1. Let (SetT typ''''') be synthtyp
+    1. Let (SetT typ'''''') be synthtyp
 
-    2. Let typ''''' be $canon_typ(typ''''')
+    2. Let typ'''''' be $canon_typ(typ'''''')
 
-    3. If $nestable_sett(typ'''''), then
+    3. If $nestable_sett(typ''''''), then
 
-      1. If (Type_wf: tidset |- typ''''' holds), then
+      1. If (Type_wf: tidset |- typ'''''' holds), then
 
         1. The relation holds
 
       1. Else
 
-        1. Phantom#181
+        1. Phantom#183
 
     3. Else
 
-      1. Phantom#182
+      1. Phantom#184
 
   2. Else If (synthtyp matches pattern `TableEnumT%%`), then
 
@@ -4883,21 +4897,21 @@ relation Type_wf: tidset, typ'''''
 
     2. Else
 
-      1. Phantom#180
+      1. Phantom#182
 
   2. Else If (synthtyp matches pattern `TableStructT%%`), then
 
-    1. Let (TableStructT _id (member, typ''''')*) be synthtyp
+    1. Let (TableStructT _id (member, typ'''''')*) be synthtyp
 
     2. If (member* = ["hit", "miss", "action_run"]), then
 
-      1. Let typ* be typ'''''*
+      1. Let typ'''''* be typ''''''*
 
-      2. If (typ* matches pattern [ _/3 ]), then
+      2. If (typ'''''* matches pattern [ _/3 ]), then
 
-        1. Let [typ''''', typ''', typ''''] be typ*
+        1. Let [typ'''''', typ''', typ''''] be typ'''''*
 
-        2. If (typ''''' = ((BoolT) as typ)), then
+        2. If (typ'''''' = ((BoolT) as typ)), then
 
           1. If (typ''' = ((BoolT) as typ)), then
 
@@ -4915,69 +4929,69 @@ relation Type_wf: tidset, typ'''''
 
                 2. Else
 
-                  1. Phantom#172
+                  1. Phantom#174
 
               2. Else
 
-                1. Phantom#173
+                1. Phantom#175
 
             1. Else
 
-              1. Phantom#174
+              1. Phantom#176
 
           1. Else
 
-            1. Phantom#175
+            1. Phantom#177
 
         2. Else
 
-          1. Phantom#176
+          1. Phantom#178
 
       2. Else
 
-        1. Phantom#177
+        1. Phantom#179
 
     2. Else
 
-      1. Phantom#178
+      1. Phantom#180
 
   2. Else
 
-    1. Phantom#179
+    1. Phantom#181
 
-2. If (typ''''' = ((DefaultT) as typ)), then
+2. If (typ'''''' = ((DefaultT) as typ)), then
 
   1. The relation holds
 
 2. Else
 
-  1. Phantom#221
+  1. Phantom#223
 
-3. If (typ''''' = ((InvalidT) as typ)), then
+3. If (typ'''''' = ((InvalidT) as typ)), then
 
   1. The relation holds
 
 3. Else
 
-  1. Phantom#222
+  1. Phantom#224
 
-4. If (typ''''' = ((StateT) as typ)), then
+4. If (typ'''''' = ((StateT) as typ)), then
 
   1. The relation holds
 
 4. Else
 
-  1. Phantom#223
+  1. Phantom#225
 
-5. If (typ''''' = ((AnyT) as typ)), then
+5. If (typ'''''' = ((AnyT) as typ)), then
 
   1. The relation holds
 
 5. Else
 
-  1. Phantom#224
+  1. Phantom#226
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:6.1-6.42
+;; spec/2c6-runtime-type-wellformed.watsup:6.1-6.42
 relation TypeDef_wf: tidset, typdef
 
 1. If (typdef has type monotypdef), then
@@ -4992,11 +5006,11 @@ relation TypeDef_wf: tidset, typdef
 
     1. Else
 
-      1. Phantom#228
+      1. Phantom#230
 
   2. Else
 
-    1. Phantom#229
+    1. Phantom#231
 
 1. Else If (typdef has type polytypdef), then
 
@@ -5014,20 +5028,22 @@ relation TypeDef_wf: tidset, typdef
 
       2. Else
 
-        1. Phantom#225
+        1. Phantom#227
 
     1. Else
 
-      1. Phantom#226
+      1. Phantom#228
 
   2. Else
 
-    1. Phantom#227
+    1. Phantom#229
+
+;; spec/2c6-runtime-type-wellformed.watsup:8.1-8.44
+relation ParamType_wf: tidset, (_id dir typ val''?)
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:8.1-8.44
-relation ParamType_wf: tidset, (_id dir typ val?)
+1. (Let val be val'')?
 
-1. If (val? matches pattern ()), then
+2. If (val? matches pattern ()), then
 
   1. If (Type_wf: tidset |- typ holds), then
 
@@ -5037,15 +5053,21 @@ relation ParamType_wf: tidset, (_id dir typ val?)
 
     1. Else
 
-      1. Phantom#233
+      1. Phantom#232
 
   1. Else
 
-    1. Phantom#234
+    1. Phantom#233
+
+2. Else
+
+  1. Phantom#234
 
-1. Else If (val? matches pattern (_)), then
+3. (Let val' be val'')?
 
-  1. Let ?(val) be val?
+4. If (val'? matches pattern (_)), then
+
+  1. Let ?(val) be val'?
 
   2. If (Type_wf: tidset |- typ holds), then
 
@@ -5057,17 +5079,21 @@ relation ParamType_wf: tidset, (_id dir typ val?)
 
       1. Else
 
-        1. Phantom#230
+        1. Phantom#235
 
     1. Else
 
-      1. Phantom#231
+      1. Phantom#236
 
   2. Else
 
-    1. Phantom#232
+    1. Phantom#237
+
+4. Else
+
+  1. Phantom#238
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:9.1-9.45
+;; spec/2c6-runtime-type-wellformed.watsup:9.1-9.45
 relation ParamTypes_wf: tidset, pt*
 
 1. (Let (id _dir _typ _val?) be pt)*
@@ -5080,13 +5106,13 @@ relation ParamTypes_wf: tidset, pt*
 
   1. Else
 
-    1. Phantom#235
+    1. Phantom#239
 
 2. Else
 
-  1. Phantom#236
+  1. Phantom#240
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:11.1-11.43
+;; spec/2c6-runtime-type-wellformed.watsup:11.1-11.43
 relation FuncType_wf: tidset, functyp
 
 1. If (functyp matches pattern `BuiltinMethodT%%`), then
@@ -5101,11 +5127,11 @@ relation FuncType_wf: tidset, functyp
 
     1. Else
 
-      1. Phantom#257
+      1. Phantom#261
 
   2. Else
 
-    1. Phantom#258
+    1. Phantom#262
 
 1. Else If (functyp matches pattern `ActionT%`), then
 
@@ -5125,15 +5151,15 @@ relation FuncType_wf: tidset, functyp
 
       2. Else
 
-        1. Phantom#254
+        1. Phantom#258
 
     2. Else
 
-      1. Phantom#255
+      1. Phantom#259
 
   2. Else
 
-    1. Phantom#256
+    1. Phantom#260
 
 1. Else If (functyp matches pattern `ParserApplyMethodT%`), then
 
@@ -5151,11 +5177,11 @@ relation FuncType_wf: tidset, functyp
 
     3. Else
 
-      1. Phantom#252
+      1. Phantom#256
 
   2. Else
 
-    1. Phantom#253
+    1. Phantom#257
 
 1. Else If (functyp matches pattern `ControlApplyMethodT%`), then
 
@@ -5171,7 +5197,7 @@ relation FuncType_wf: tidset, functyp
 
   2. Else
 
-    1. Phantom#251
+    1. Phantom#255
 
 1. Else If (functyp matches pattern `TableApplyMethodT%`), then
 
@@ -5189,11 +5215,11 @@ relation FuncType_wf: tidset, functyp
 
     2. Else
 
-      1. Phantom#249
+      1. Phantom#253
 
   2. Else
 
-    1. Phantom#250
+    1. Phantom#254
 
 1. Else If (functyp matches pattern `ExternFuncT%%`), then
 
@@ -5213,15 +5239,15 @@ relation FuncType_wf: tidset, functyp
 
       1. Else
 
-        1. Phantom#246
+        1. Phantom#250
 
     3. Else
 
-      1. Phantom#247
+      1. Phantom#251
 
   2. Else
 
-    1. Phantom#248
+    1. Phantom#252
 
 1. Else If (functyp matches pattern `FuncT%%`), then
 
@@ -5241,15 +5267,15 @@ relation FuncType_wf: tidset, functyp
 
       1. Else
 
-        1. Phantom#243
+        1. Phantom#247
 
     3. Else
 
-      1. Phantom#244
+      1. Phantom#248
 
   2. Else
 
-    1. Phantom#245
+    1. Phantom#249
 
 1. Else If (functyp matches pattern `ExternMethodT%%`), then
 
@@ -5269,15 +5295,15 @@ relation FuncType_wf: tidset, functyp
 
       1. Else
 
-        1. Phantom#240
+        1. Phantom#244
 
     3. Else
 
-      1. Phantom#241
+      1. Phantom#245
 
   2. Else
 
-    1. Phantom#242
+    1. Phantom#246
 
 1. Else If (functyp matches pattern `ExternAbstractMethodT%%`), then
 
@@ -5297,17 +5323,17 @@ relation FuncType_wf: tidset, functyp
 
       1. Else
 
-        1. Phantom#237
+        1. Phantom#241
 
     3. Else
 
-      1. Phantom#238
+      1. Phantom#242
 
   2. Else
 
-    1. Phantom#239
+    1. Phantom#243
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:12.1-12.43
+;; spec/2c6-runtime-type-wellformed.watsup:12.1-12.43
 relation FuncDef_wf: tidset, funcdef
 
 1. If (funcdef has type monofuncdef), then
@@ -5322,11 +5348,11 @@ relation FuncDef_wf: tidset, funcdef
 
     1. Else
 
-      1. Phantom#262
+      1. Phantom#266
 
   2. Else
 
-    1. Phantom#263
+    1. Phantom#267
 
 1. Else If (funcdef has type polyfuncdef), then
 
@@ -5344,21 +5370,21 @@ relation FuncDef_wf: tidset, funcdef
 
       2. Else
 
-        1. Phantom#259
+        1. Phantom#263
 
     1. Else
 
-      1. Phantom#260
+      1. Phantom#264
 
   2. Else
 
-    1. Phantom#261
+    1. Phantom#265
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:14.52-14.60
+;; spec/2c6-runtime-type-wellformed.watsup:14.52-14.60
 syntax consctxt = 
    | `CONSCTXT`()
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:15.1-15.53
+;; spec/2c6-runtime-type-wellformed.watsup:15.1-15.53
 relation CParamType_wf: tidset, consctxt, (id dir typ val?)
 
 1. If (dir matches pattern `NO`), then
@@ -5369,13 +5395,13 @@ relation CParamType_wf: tidset, consctxt, (id dir typ val?)
 
   1. Else
 
-    1. Phantom#264
+    1. Phantom#268
 
 1. Else
 
-  1. Phantom#265
+  1. Phantom#269
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:16.1-16.54
+;; spec/2c6-runtime-type-wellformed.watsup:16.1-16.54
 relation CParamTypes_wf: tidset, consctxt, pt*
 
 1. (Let (id _dir _typ _val?) be pt)*
@@ -5388,13 +5414,13 @@ relation CParamTypes_wf: tidset, consctxt, pt*
 
   1. Else
 
-    1. Phantom#266
+    1. Phantom#270
 
 2. Else
 
-  1. Phantom#267
+  1. Phantom#271
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:18.1-18.43
+;; spec/2c6-runtime-type-wellformed.watsup:18.1-18.43
 relation ConsType_wf: tidset, (ConsT pt* typ)
 
 1. If (CParamTypes_wf: tidset (CONSCTXT) |- pt* holds), then
@@ -5421,15 +5447,15 @@ relation ConsType_wf: tidset, (ConsT pt* typ)
 
         4. Else
 
-          1. Phantom#268
+          1. Phantom#272
 
       2. Else
 
-        1. Phantom#269
+        1. Phantom#273
 
     2. Else
 
-      1. Phantom#270
+      1. Phantom#274
 
     3. Let typ' be $canon_typ(typ)
 
@@ -5451,7 +5477,7 @@ relation ConsType_wf: tidset, (ConsT pt* typ)
 
         4. Else
 
-          1. Phantom#274
+          1. Phantom#278
 
       2. Else If (objtyp matches pattern `ControlT%`), then
 
@@ -5467,7 +5493,7 @@ relation ConsType_wf: tidset, (ConsT pt* typ)
 
         4. Else
 
-          1. Phantom#273
+          1. Phantom#277
 
       2. Else If (objtyp matches pattern `PackageT%`), then
 
@@ -5483,25 +5509,25 @@ relation ConsType_wf: tidset, (ConsT pt* typ)
 
         4. Else
 
-          1. Phantom#271
+          1. Phantom#275
 
       2. Else
 
-        1. Phantom#272
+        1. Phantom#276
 
     4. Else
 
-      1. Phantom#275
+      1. Phantom#279
 
   1. Else
 
-    1. Phantom#276
+    1. Phantom#280
 
 1. Else
 
-  1. Phantom#277
+  1. Phantom#281
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:19.1-19.43
+;; spec/2c6-runtime-type-wellformed.watsup:19.1-19.43
 relation ConsDef_wf: tidset, (ConsD (tparam*, tparam_hidden*) -> constyp)
 
 1. Let (ConsT _paramtyp* typ_r) be constyp
@@ -5520,15 +5546,15 @@ relation ConsDef_wf: tidset, (ConsD (tparam*, tparam_hidden*) -> constyp)
 
     2. Else
 
-      1. Phantom#278
+      1. Phantom#282
 
   1. Else
 
-    1. Phantom#279
+    1. Phantom#283
 
 3. Else
 
-  1. Phantom#280
+  1. Phantom#284
 
 4. If $is_parsert(typ_r'), then
 
@@ -5542,15 +5568,15 @@ relation ConsDef_wf: tidset, (ConsD (tparam*, tparam_hidden*) -> constyp)
 
     2. Else
 
-      1. Phantom#281
+      1. Phantom#285
 
   1. Else
 
-    1. Phantom#282
+    1. Phantom#286
 
 4. Else
 
-  1. Phantom#283
+  1. Phantom#287
 
 5. If $is_controlt(typ_r'), then
 
@@ -5564,15 +5590,15 @@ relation ConsDef_wf: tidset, (ConsD (tparam*, tparam_hidden*) -> constyp)
 
     2. Else
 
-      1. Phantom#284
+      1. Phantom#288
 
   1. Else
 
-    1. Phantom#285
+    1. Phantom#289
 
 5. Else
 
-  1. Phantom#286
+  1. Phantom#290
 
 6. If $is_packaget(typ_r'), then
 
@@ -5586,22 +5612,22 @@ relation ConsDef_wf: tidset, (ConsD (tparam*, tparam_hidden*) -> constyp)
 
     2. Else
 
-      1. Phantom#287
+      1. Phantom#291
 
   1. Else
 
-    1. Phantom#288
+    1. Phantom#292
 
 6. Else
 
-  1. Phantom#289
+  1. Phantom#293
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:37.1-37.31
+;; spec/2c6-runtime-type-wellformed.watsup:37.1-37.31
 def $nestable_deft(typ)
 
 1. Return $nestable'_deft($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:38.1-38.32
+;; spec/2c6-runtime-type-wellformed.watsup:38.1-38.32
 def $nestable'_deft(typ)
 
 1. If (typ has type basetyp), then
@@ -5630,12 +5656,12 @@ def $nestable'_deft(typ)
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:52.1-52.31
+;; spec/2c6-runtime-type-wellformed.watsup:52.1-52.31
 def $nestable_newt(typ)
 
 1. Return $nestable'_newt($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:53.1-53.32
+;; spec/2c6-runtime-type-wellformed.watsup:53.1-53.32
 def $nestable'_newt(typ)
 
 1. If (typ = ((BoolT) as typ)), then
@@ -5682,12 +5708,12 @@ def $nestable'_newt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:73.1-73.33
+;; spec/2c6-runtime-type-wellformed.watsup:73.1-73.33
 def $nestable_senumt(typ)
 
 1. Return $nestable'_senumt($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:74.1-74.34
+;; spec/2c6-runtime-type-wellformed.watsup:74.1-74.34
 def $nestable'_senumt(typ'')
 
 1. If (typ'' has type numtyp), then
@@ -5730,12 +5756,12 @@ def $nestable'_senumt(typ'')
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:75.1-75.41
+;; spec/2c6-runtime-type-wellformed.watsup:75.1-75.41
 def $nestable_newt_in_senumt(typ)
 
 1. Return $nestable_newt_in_senumt'($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:76.1-76.42
+;; spec/2c6-runtime-type-wellformed.watsup:76.1-76.42
 def $nestable_newt_in_senumt'(typ)
 
 1. If (typ has type numtyp), then
@@ -5778,12 +5804,12 @@ def $nestable_newt_in_senumt'(typ)
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:100.1-100.32
+;; spec/2c6-runtime-type-wellformed.watsup:100.1-100.32
 def $nestable_listt(typ)
 
 1. Return $nestable'_listt($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:101.1-101.33
+;; spec/2c6-runtime-type-wellformed.watsup:101.1-101.33
 def $nestable'_listt(typ)
 
 1. If (typ has type basetyp), then
@@ -5812,12 +5838,12 @@ def $nestable'_listt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:114.1-114.33
+;; spec/2c6-runtime-type-wellformed.watsup:114.1-114.33
 def $nestable_tuplet(typ)
 
 1. Return $nestable'_tuplet($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:115.1-115.34
+;; spec/2c6-runtime-type-wellformed.watsup:115.1-115.34
 def $nestable'_tuplet(typ)
 
 1. If (typ = ((ErrT) as typ)), then
@@ -5854,12 +5880,12 @@ def $nestable'_tuplet(typ)
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:131.1-131.33
+;; spec/2c6-runtime-type-wellformed.watsup:131.1-131.33
 def $nestable_stackt(typ)
 
 1. Return $nestable'_stackt($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:132.1-132.34
+;; spec/2c6-runtime-type-wellformed.watsup:132.1-132.34
 def $nestable'_stackt(typ)
 
 1. If (typ has type abstyp), then
@@ -5892,12 +5918,12 @@ def $nestable'_stackt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:147.1-147.34
+;; spec/2c6-runtime-type-wellformed.watsup:147.1-147.34
 def $nestable_structt(typ)
 
 1. Return $nestable'_structt($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:148.1-148.35
+;; spec/2c6-runtime-type-wellformed.watsup:148.1-148.35
 def $nestable'_structt(typ)
 
 1. If (typ = ((ErrT) as typ)), then
@@ -5934,12 +5960,12 @@ def $nestable'_structt(typ)
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:165.1-165.34
+;; spec/2c6-runtime-type-wellformed.watsup:165.1-165.34
 def $nestable_headert(typ)
 
 1. Return $nestable'_headert($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:166.1-166.35
+;; spec/2c6-runtime-type-wellformed.watsup:166.1-166.35
 def $nestable'_headert(typ'')
 
 1. If (typ'' = ((BoolT) as typ)), then
@@ -5990,12 +6016,12 @@ def $nestable'_headert(typ'')
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:167.1-167.45
+;; spec/2c6-runtime-type-wellformed.watsup:167.1-167.45
 def $nestable_structt_in_headert(typ)
 
 1. Return $nestable'_structt_in_headert($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:168.1-168.46
+;; spec/2c6-runtime-type-wellformed.watsup:168.1-168.46
 def $nestable'_structt_in_headert(typ'')
 
 1. If (typ'' = ((BoolT) as typ)), then
@@ -6056,12 +6082,12 @@ def $nestable'_structt_in_headert(typ'')
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:199.1-199.33
+;; spec/2c6-runtime-type-wellformed.watsup:199.1-199.33
 def $nestable_uniont(typ)
 
 1. Return $nestable'_uniont($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:200.1-200.34
+;; spec/2c6-runtime-type-wellformed.watsup:200.1-200.34
 def $nestable'_uniont(typ)
 
 1. If (typ has type abstyp), then
@@ -6094,12 +6120,12 @@ def $nestable'_uniont(typ)
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:262.1-262.31
+;; spec/2c6-runtime-type-wellformed.watsup:262.1-262.31
 def $nestable_sett(typ)
 
 1. Return $nestable'_sett($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:263.1-263.32
+;; spec/2c6-runtime-type-wellformed.watsup:263.1-263.32
 def $nestable'_sett(typ'')
 
 1. If (typ'' = ((ErrT) as typ)), then
@@ -6182,12 +6208,12 @@ def $nestable'_sett(typ'')
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:264.1-264.41
+;; spec/2c6-runtime-type-wellformed.watsup:264.1-264.41
 def $nestable_tuplet_in_sett(typ)
 
 1. Return $nestable'_tuplet_in_sett($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:265.1-265.42
+;; spec/2c6-runtime-type-wellformed.watsup:265.1-265.42
 def $nestable'_tuplet_in_sett(typ'')
 
 1. If (typ'' = ((BoolT) as typ)), then
@@ -6254,12 +6280,12 @@ def $nestable'_tuplet_in_sett(typ'')
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:266.1-266.39
+;; spec/2c6-runtime-type-wellformed.watsup:266.1-266.39
 def $nestable_seqt_in_sett(typ)
 
 1. Return $nestable'_seqt_in_sett($canon_typ(typ))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:267.1-267.40
+;; spec/2c6-runtime-type-wellformed.watsup:267.1-267.40
 def $nestable'_seqt_in_sett(typ'')
 
 1. If (typ'' = ((BoolT) as typ)), then
@@ -6338,7 +6364,7 @@ def $nestable'_seqt_in_sett(typ'')
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:339.1-339.32
+;; spec/2c6-runtime-type-wellformed.watsup:339.1-339.32
 def $nestable_monod(typ)
 
 1. If (typ has type abstyp), then
@@ -6393,7 +6419,7 @@ def $nestable_monod(typ)
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:355.1-355.32
+;; spec/2c6-runtime-type-wellformed.watsup:355.1-355.32
 def $nestable_polyd(typ)
 
 1. If (typ has type datatyp), then
@@ -6462,35 +6488,31 @@ def $nestable_polyd(typ)
 
   1. Return false
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:406.1-407.38
+;; spec/2c6-runtime-type-wellformed.watsup:406.1-407.38
 def $is_trailing_action(dir*)
 
 1. Return $is_trailing_action'(true, $rev_<dir>(dir*))
 
-;; ../../../../spec/2c6-runtime-type-wellformed.watsup:408.1-408.44
-def $is_trailing_action'(_bool', dir*)
-
-1. If (dir* matches pattern []), then
+;; spec/2c6-runtime-type-wellformed.watsup:408.1-408.44
+def $is_trailing_action'(_bool', dir''*)
 
-  1. Return true
-
-1. Else If (dir* matches pattern _ :: _), then
+1. (Let dir be dir'')*
 
-  1. Let dir_h :: dir_t* be dir*
+2. If (dir* matches pattern []), then
 
-  2. If ~(dir_h matches pattern `NO`), then
+  1. Return true
 
-    1. Return $is_trailing_action'(false, dir_t*)
+2. Else
 
-  2. Else
+  1. Phantom#294
 
-    1. Phantom#290
+3. (Let dir' be dir'')*
 
-2. If (_bool' = true), then
+4. If (_bool' = true), then
 
-  1. If (dir* matches pattern _ :: _), then
+  1. If (dir'* matches pattern _ :: _), then
 
-    1. Let dir :: dir_t* be dir*
+    1. Let dir :: dir_t* be dir'*
 
     2. If (dir matches pattern `NO`), then
 
@@ -6498,17 +6520,17 @@ def $is_trailing_action'(_bool', dir*)
 
     2. Else
 
-      1. Phantom#294
+      1. Phantom#298
 
   1. Else
 
-    1. Phantom#295
+    1. Phantom#299
 
-2. Else If (_bool' = false), then
+4. Else If (_bool' = false), then
 
-  1. If (dir* matches pattern _ :: _), then
+  1. If (dir'* matches pattern _ :: _), then
 
-    1. Let dir :: dir_t* be dir*
+    1. Let dir :: dir_t* be dir'*
 
     2. If (dir matches pattern `NO`), then
 
@@ -6516,62 +6538,78 @@ def $is_trailing_action'(_bool', dir*)
 
     2. Else
 
-      1. Phantom#291
+      1. Phantom#295
 
   1. Else
 
-    1. Phantom#292
+    1. Phantom#296
 
-2. Else
+4. Else
 
-  1. Phantom#293
+  1. Phantom#297
+
+5. If (dir* matches pattern _ :: _), then
+
+  1. Let dir_h :: dir_t* be dir*
+
+  2. If ~(dir_h matches pattern `NO`), then
+
+    1. Return $is_trailing_action'(false, dir_t*)
+
+  2. Else
+
+    1. Phantom#300
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:5.1-5.21
+5. Else
+
+  1. Phantom#301
+
+;; spec/2d1-runtime-numerics.watsup:5.1-5.21
 def $pow2
 
 
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:7.1-7.25
+;; spec/2d1-runtime-numerics.watsup:7.1-7.25
 def $shl
 
 
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:8.1-8.25
+;; spec/2d1-runtime-numerics.watsup:8.1-8.25
 def $shr
 
 
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:9.1-9.36
+;; spec/2d1-runtime-numerics.watsup:9.1-9.36
 def $shr_arith
 
 
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:11.1-11.21
+;; spec/2d1-runtime-numerics.watsup:11.1-11.21
 def $bneg
 
 
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:12.1-12.26
+;; spec/2d1-runtime-numerics.watsup:12.1-12.26
 def $band
 
 
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:13.1-13.26
+;; spec/2d1-runtime-numerics.watsup:13.1-13.26
 def $bxor
 
 
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:14.1-14.25
+;; spec/2d1-runtime-numerics.watsup:14.1-14.25
 def $bor
 
 
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:16.1-16.33
+;; spec/2d1-runtime-numerics.watsup:16.1-16.33
 def $bitacc
 
 
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:22.1-23.32
+;; spec/2d1-runtime-numerics.watsup:22.1-23.32
 def $un_op(unop, val)
 
 1. If (unop matches pattern `BNOT`), then
@@ -6590,7 +6628,7 @@ def $un_op(unop, val)
 
   1. Return $un_minus(val)
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:27.1-27.24
+;; spec/2d1-runtime-numerics.watsup:27.1-27.24
 def $un_bnot(val)
 
 1. If (val matches pattern `FBitV%%`), then
@@ -6603,9 +6641,9 @@ def $un_bnot(val)
 
 1. Else
 
-  1. Phantom#296
+  1. Phantom#302
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:36.1-36.24
+;; spec/2d1-runtime-numerics.watsup:36.1-36.24
 def $un_lnot(val)
 
 1. If (val matches pattern `BoolV%`), then
@@ -6616,9 +6654,9 @@ def $un_lnot(val)
 
 1. Else
 
-  1. Phantom#297
+  1. Phantom#303
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:44.1-44.24
+;; spec/2d1-runtime-numerics.watsup:44.1-44.24
 def $un_plus(val)
 
 1. If (val matches pattern `IntV%`), then
@@ -6641,9 +6679,9 @@ def $un_plus(val)
 
 1. Else
 
-  1. Phantom#298
+  1. Phantom#304
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:54.1-54.25
+;; spec/2d1-runtime-numerics.watsup:54.1-54.25
 def $un_minus(val)
 
 1. If (val matches pattern `IntV%`), then
@@ -6670,9 +6708,9 @@ def $un_minus(val)
 
 1. Else
 
-  1. Phantom#299
+  1. Phantom#305
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:70.1-71.24
+;; spec/2d1-runtime-numerics.watsup:70.1-71.24
 def $bin_op(binop, val_l, val_r)
 
 1. If (binop matches pattern `PLUS`), then
@@ -6753,9 +6791,9 @@ def $bin_op(binop, val_l, val_r)
 
 1. Else
 
-  1. Phantom#300
+  1. Phantom#306
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:75.1-75.30
+;; spec/2d1-runtime-numerics.watsup:75.1-75.30
 def $bin_plus(val, val')
 
 1. If (val matches pattern `IntV%`), then
@@ -6770,7 +6808,7 @@ def $bin_plus(val, val')
 
   2. Else
 
-    1. Phantom#306
+    1. Phantom#312
 
 1. Else If (val matches pattern `FIntV%%`), then
 
@@ -6792,11 +6830,11 @@ def $bin_plus(val, val')
 
     2. Else
 
-      1. Phantom#304
+      1. Phantom#310
 
   2. Else
 
-    1. Phantom#305
+    1. Phantom#311
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -6818,17 +6856,17 @@ def $bin_plus(val, val')
 
     2. Else
 
-      1. Phantom#301
+      1. Phantom#307
 
   2. Else
 
-    1. Phantom#302
+    1. Phantom#308
 
 1. Else
 
-  1. Phantom#303
+  1. Phantom#309
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:93.1-93.31
+;; spec/2d1-runtime-numerics.watsup:93.1-93.31
 def $bin_minus(val, val')
 
 1. If (val matches pattern `IntV%`), then
@@ -6843,7 +6881,7 @@ def $bin_minus(val, val')
 
   2. Else
 
-    1. Phantom#312
+    1. Phantom#318
 
 1. Else If (val matches pattern `FIntV%%`), then
 
@@ -6865,11 +6903,11 @@ def $bin_minus(val, val')
 
     2. Else
 
-      1. Phantom#310
+      1. Phantom#316
 
   2. Else
 
-    1. Phantom#311
+    1. Phantom#317
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -6891,17 +6929,17 @@ def $bin_minus(val, val')
 
     2. Else
 
-      1. Phantom#307
+      1. Phantom#313
 
   2. Else
 
-    1. Phantom#308
+    1. Phantom#314
 
 1. Else
 
-  1. Phantom#309
+  1. Phantom#315
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:111.1-111.29
+;; spec/2d1-runtime-numerics.watsup:111.1-111.29
 def $bin_mul(val, val')
 
 1. If (val matches pattern `IntV%`), then
@@ -6916,7 +6954,7 @@ def $bin_mul(val, val')
 
   2. Else
 
-    1. Phantom#318
+    1. Phantom#324
 
 1. Else If (val matches pattern `FIntV%%`), then
 
@@ -6938,11 +6976,11 @@ def $bin_mul(val, val')
 
     2. Else
 
-      1. Phantom#316
+      1. Phantom#322
 
   2. Else
 
-    1. Phantom#317
+    1. Phantom#323
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -6964,17 +7002,17 @@ def $bin_mul(val, val')
 
     2. Else
 
-      1. Phantom#313
+      1. Phantom#319
 
   2. Else
 
-    1. Phantom#314
+    1. Phantom#320
 
 1. Else
 
-  1. Phantom#315
+  1. Phantom#321
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:127.1-127.29
+;; spec/2d1-runtime-numerics.watsup:127.1-127.29
 def $bin_div(val, val')
 
 1. If (val matches pattern `IntV%`), then
@@ -6989,13 +7027,13 @@ def $bin_div(val, val')
 
   2. Else
 
-    1. Phantom#319
+    1. Phantom#325
 
 1. Else
 
-  1. Phantom#320
+  1. Phantom#326
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:135.1-135.29
+;; spec/2d1-runtime-numerics.watsup:135.1-135.29
 def $bin_mod(val, val')
 
 1. If (val matches pattern `IntV%`), then
@@ -7010,13 +7048,13 @@ def $bin_mod(val, val')
 
   2. Else
 
-    1. Phantom#321
+    1. Phantom#327
 
 1. Else
 
-  1. Phantom#322
+  1. Phantom#328
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:143.1-143.29
+;; spec/2d1-runtime-numerics.watsup:143.1-143.29
 def $bin_shl(val, val')
 
 1. If (val matches pattern `IntV%`), then
@@ -7045,7 +7083,7 @@ def $bin_shl(val, val')
 
   2. Else
 
-    1. Phantom#326
+    1. Phantom#332
 
 1. Else If (val matches pattern `FIntV%%`), then
 
@@ -7083,7 +7121,7 @@ def $bin_shl(val, val')
 
   2. Else
 
-    1. Phantom#325
+    1. Phantom#331
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -7117,13 +7155,13 @@ def $bin_shl(val, val')
 
   2. Else
 
-    1. Phantom#323
+    1. Phantom#329
 
 1. Else
 
-  1. Phantom#324
+  1. Phantom#330
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:176.1-176.29
+;; spec/2d1-runtime-numerics.watsup:176.1-176.29
 def $bin_shr(val, val')
 
 1. If (val matches pattern `IntV%`), then
@@ -7152,7 +7190,7 @@ def $bin_shr(val, val')
 
   2. Else
 
-    1. Phantom#336
+    1. Phantom#342
 
 1. Else If (val matches pattern `FIntV%%`), then
 
@@ -7172,7 +7210,7 @@ def $bin_shr(val, val')
 
     3. Else
 
-      1. Phantom#334
+      1. Phantom#340
 
     4. If (i_l >= (0 as int)), then
 
@@ -7182,7 +7220,7 @@ def $bin_shr(val, val')
 
     4. Else
 
-      1. Phantom#335
+      1. Phantom#341
 
   2. Else If (val' matches pattern `FIntV%%`), then
 
@@ -7200,7 +7238,7 @@ def $bin_shr(val, val')
 
     4. Else
 
-      1. Phantom#332
+      1. Phantom#338
 
     5. If (i_l >= (0 as int)), then
 
@@ -7210,7 +7248,7 @@ def $bin_shr(val, val')
 
     5. Else
 
-      1. Phantom#333
+      1. Phantom#339
 
   2. Else If (val' matches pattern `FBitV%%`), then
 
@@ -7226,7 +7264,7 @@ def $bin_shr(val, val')
 
     3. Else
 
-      1. Phantom#329
+      1. Phantom#335
 
     4. If (i_l >= (0 as int)), then
 
@@ -7236,11 +7274,11 @@ def $bin_shr(val, val')
 
     4. Else
 
-      1. Phantom#330
+      1. Phantom#336
 
   2. Else
 
-    1. Phantom#331
+    1. Phantom#337
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -7274,13 +7312,13 @@ def $bin_shr(val, val')
 
   2. Else
 
-    1. Phantom#327
+    1. Phantom#333
 
 1. Else
 
-  1. Phantom#328
+  1. Phantom#334
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:229.1-229.29
+;; spec/2d1-runtime-numerics.watsup:229.1-229.29
 def $bin_le(val, val')
 
 1. If (val matches pattern `IntV%`), then
@@ -7295,7 +7333,7 @@ def $bin_le(val, val')
 
   2. Else
 
-    1. Phantom#342
+    1. Phantom#348
 
 1. Else If (val matches pattern `FIntV%%`), then
 
@@ -7315,11 +7353,11 @@ def $bin_le(val, val')
 
     2. Else
 
-      1. Phantom#340
+      1. Phantom#346
 
   2. Else
 
-    1. Phantom#341
+    1. Phantom#347
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -7335,17 +7373,17 @@ def $bin_le(val, val')
 
     2. Else
 
-      1. Phantom#337
+      1. Phantom#343
 
   2. Else
 
-    1. Phantom#338
+    1. Phantom#344
 
 1. Else
 
-  1. Phantom#339
+  1. Phantom#345
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:241.1-241.29
+;; spec/2d1-runtime-numerics.watsup:241.1-241.29
 def $bin_ge(val, val')
 
 1. If (val matches pattern `IntV%`), then
@@ -7360,7 +7398,7 @@ def $bin_ge(val, val')
 
   2. Else
 
-    1. Phantom#348
+    1. Phantom#354
 
 1. Else If (val matches pattern `FIntV%%`), then
 
@@ -7380,11 +7418,11 @@ def $bin_ge(val, val')
 
     2. Else
 
-      1. Phantom#346
+      1. Phantom#352
 
   2. Else
 
-    1. Phantom#347
+    1. Phantom#353
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -7400,17 +7438,17 @@ def $bin_ge(val, val')
 
     2. Else
 
-      1. Phantom#343
+      1. Phantom#349
 
   2. Else
 
-    1. Phantom#344
+    1. Phantom#350
 
 1. Else
 
-  1. Phantom#345
+  1. Phantom#351
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:253.1-253.29
+;; spec/2d1-runtime-numerics.watsup:253.1-253.29
 def $bin_lt(val, val')
 
 1. If (val matches pattern `IntV%`), then
@@ -7425,7 +7463,7 @@ def $bin_lt(val, val')
 
   2. Else
 
-    1. Phantom#354
+    1. Phantom#360
 
 1. Else If (val matches pattern `FIntV%%`), then
 
@@ -7445,11 +7483,11 @@ def $bin_lt(val, val')
 
     2. Else
 
-      1. Phantom#352
+      1. Phantom#358
 
   2. Else
 
-    1. Phantom#353
+    1. Phantom#359
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -7465,17 +7503,17 @@ def $bin_lt(val, val')
 
     2. Else
 
-      1. Phantom#349
+      1. Phantom#355
 
   2. Else
 
-    1. Phantom#350
+    1. Phantom#356
 
 1. Else
 
-  1. Phantom#351
+  1. Phantom#357
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:265.1-265.29
+;; spec/2d1-runtime-numerics.watsup:265.1-265.29
 def $bin_gt(val, val')
 
 1. If (val matches pattern `IntV%`), then
@@ -7490,7 +7528,7 @@ def $bin_gt(val, val')
 
   2. Else
 
-    1. Phantom#360
+    1. Phantom#366
 
 1. Else If (val matches pattern `FIntV%%`), then
 
@@ -7510,11 +7548,11 @@ def $bin_gt(val, val')
 
     2. Else
 
-      1. Phantom#358
+      1. Phantom#364
 
   2. Else
 
-    1. Phantom#359
+    1. Phantom#365
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -7530,17 +7568,17 @@ def $bin_gt(val, val')
 
     2. Else
 
-      1. Phantom#355
+      1. Phantom#361
 
   2. Else
 
-    1. Phantom#356
+    1. Phantom#362
 
 1. Else
 
-  1. Phantom#357
+  1. Phantom#363
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:277.1-277.29
+;; spec/2d1-runtime-numerics.watsup:277.1-277.29
 def $bin_eq(val, val')
 
 1. If (val matches pattern `ErrV%`), then
@@ -7555,7 +7593,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#381
+    1. Phantom#387
 
 1. Else If (val matches pattern `MatchKindV%`), then
 
@@ -7569,7 +7607,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#380
+    1. Phantom#386
 
 1. Else If (val matches pattern `StrV%`), then
 
@@ -7583,7 +7621,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#379
+    1. Phantom#385
 
 1. Else If (val matches pattern `BoolV%`), then
 
@@ -7597,7 +7635,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#378
+    1. Phantom#384
 
 1. Else If (val matches pattern `IntV%`), then
 
@@ -7611,7 +7649,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#377
+    1. Phantom#383
 
 1. Else If (val matches pattern `FIntV%%`), then
 
@@ -7627,11 +7665,11 @@ def $bin_eq(val, val')
 
     2. Else
 
-      1. Phantom#375
+      1. Phantom#381
 
   2. Else
 
-    1. Phantom#376
+    1. Phantom#382
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -7647,11 +7685,11 @@ def $bin_eq(val, val')
 
     2. Else
 
-      1. Phantom#373
+      1. Phantom#379
 
   2. Else
 
-    1. Phantom#374
+    1. Phantom#380
 
 1. Else If (val matches pattern `VBitV%%%`), then
 
@@ -7667,11 +7705,11 @@ def $bin_eq(val, val')
 
     2. Else
 
-      1. Phantom#371
+      1. Phantom#377
 
   2. Else
 
-    1. Phantom#372
+    1. Phantom#378
 
 1. Else If (val matches pattern `EnumFieldV%%`), then
 
@@ -7685,7 +7723,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#370
+    1. Phantom#376
 
 1. Else If (val matches pattern `SEnumFieldV%%%`), then
 
@@ -7699,7 +7737,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#369
+    1. Phantom#375
 
 1. Else If (val matches pattern `ListV%`), then
 
@@ -7713,7 +7751,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#368
+    1. Phantom#374
 
 1. Else If (val matches pattern `TupleV%`), then
 
@@ -7727,7 +7765,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#367
+    1. Phantom#373
 
 1. Else If (val matches pattern `StackV%%%`), then
 
@@ -7741,7 +7779,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#366
+    1. Phantom#372
 
 1. Else If (val matches pattern `StructV%%`), then
 
@@ -7755,7 +7793,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#365
+    1. Phantom#371
 
 1. Else If (val matches pattern `HeaderV%%`), then
 
@@ -7769,7 +7807,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#364
+    1. Phantom#370
 
 1. Else If (val matches pattern `UnionV%%`), then
 
@@ -7783,7 +7821,7 @@ def $bin_eq(val, val')
 
   2. Else
 
-    1. Phantom#363
+    1. Phantom#369
 
 1. Else If (val matches pattern `InvalidV`), then
 
@@ -7793,24 +7831,24 @@ def $bin_eq(val, val')
 
   1. Else
 
-    1. Phantom#361
+    1. Phantom#367
 
 1. Else
 
-  1. Phantom#362
+  1. Phantom#368
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:278.1-278.32
-def $bin_eqs(val*, val*')
+;; spec/2d1-runtime-numerics.watsup:278.1-278.32
+def $bin_eqs(val*, val'*)
 
 1. If (val* matches pattern []), then
 
-  1. If (val*' matches pattern []), then
+  1. If (val'* matches pattern []), then
 
     1. Return true
 
-  1. Else If (val*' matches pattern _ :: _), then
+  1. Else If (val'* matches pattern _ :: _), then
 
-    1. Let _val :: _val* be val*'
+    1. Let _val :: _val* be val'*
 
     2. Return false
 
@@ -7818,38 +7856,38 @@ def $bin_eqs(val*, val*')
 
   1. Let _val :: _val* be val*
 
-  2. If (val*' matches pattern []), then
+  2. If (val'* matches pattern []), then
 
     1. Return false
 
   2. Else
 
-    1. Phantom#382
+    1. Phantom#388
 
   3. Let val_ah :: val_at* be val*
 
-  4. If (val*' matches pattern _ :: _), then
+  4. If (val'* matches pattern _ :: _), then
 
-    1. Let val_bh :: val_bt* be val*'
+    1. Let val_bh :: val_bt* be val'*
 
     2. Return ($bin_eq(val_ah, val_bh) /\ $bin_eqs(val_at*, val_bt*))
 
   4. Else
 
-    1. Phantom#383
+    1. Phantom#389
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:279.1-279.53
-def $bin_eqs_((member, val)*, (member, val)*')
+;; spec/2d1-runtime-numerics.watsup:279.1-279.53
+def $bin_eqs_((member, val)*, (member, val)'*)
 
 1. If ((member, val)* matches pattern []), then
 
-  1. If ((member, val)*' matches pattern []), then
+  1. If ((member, val)'* matches pattern []), then
 
     1. Return true
 
-  1. Else If ((member, val)*' matches pattern _ :: _), then
+  1. Else If ((member, val)'* matches pattern _ :: _), then
 
-    1. Let _(member, val) :: _(member, val)* be (member, val)*'
+    1. Let _(member, val) :: _(member, val)* be (member, val)'*
 
     2. Return false
 
@@ -7857,19 +7895,19 @@ def $bin_eqs_((member, val)*, (member, val)*')
 
   1. Let _(member, val) :: _(member, val)* be (member, val)*
 
-  2. If ((member, val)*' matches pattern []), then
+  2. If ((member, val)'* matches pattern []), then
 
     1. Return false
 
   2. Else
 
-    1. Phantom#384
+    1. Phantom#390
 
   3. Let (member, val_a) :: (member_at, val_at)* be (member, val)*
 
-  4. If ((member, val)*' matches pattern _ :: _), then
+  4. If ((member, val)'* matches pattern _ :: _), then
 
-    1. Let (member', val_b) :: (member_bt, val_bt)* be (member, val)*'
+    1. Let (member', val_b) :: (member_bt, val_bt)* be (member, val)'*
 
     2. If (member = member'), then
 
@@ -7877,13 +7915,13 @@ def $bin_eqs_((member, val)*, (member, val)*')
 
     2. Else
 
-      1. Phantom#385
+      1. Phantom#391
 
   4. Else
 
-    1. Phantom#386
+    1. Phantom#392
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:325.1-325.30
+;; spec/2d1-runtime-numerics.watsup:325.1-325.30
 def $bin_band(val, val')
 
 1. If (val matches pattern `FIntV%%`), then
@@ -7906,11 +7944,11 @@ def $bin_band(val, val')
 
     2. Else
 
-      1. Phantom#390
+      1. Phantom#396
 
   2. Else
 
-    1. Phantom#391
+    1. Phantom#397
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -7928,17 +7966,17 @@ def $bin_band(val, val')
 
     2. Else
 
-      1. Phantom#387
+      1. Phantom#393
 
   2. Else
 
-    1. Phantom#388
+    1. Phantom#394
 
 1. Else
 
-  1. Phantom#389
+  1. Phantom#395
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:341.1-341.30
+;; spec/2d1-runtime-numerics.watsup:341.1-341.30
 def $bin_bxor(val, val')
 
 1. If (val matches pattern `FIntV%%`), then
@@ -7961,11 +7999,11 @@ def $bin_bxor(val, val')
 
     2. Else
 
-      1. Phantom#395
+      1. Phantom#401
 
   2. Else
 
-    1. Phantom#396
+    1. Phantom#402
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -7983,17 +8021,17 @@ def $bin_bxor(val, val')
 
     2. Else
 
-      1. Phantom#392
+      1. Phantom#398
 
   2. Else
 
-    1. Phantom#393
+    1. Phantom#399
 
 1. Else
 
-  1. Phantom#394
+  1. Phantom#400
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:357.1-357.29
+;; spec/2d1-runtime-numerics.watsup:357.1-357.29
 def $bin_bor(val, val')
 
 1. If (val matches pattern `FIntV%%`), then
@@ -8016,11 +8054,11 @@ def $bin_bor(val, val')
 
     2. Else
 
-      1. Phantom#400
+      1. Phantom#406
 
   2. Else
 
-    1. Phantom#401
+    1. Phantom#407
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -8038,17 +8076,17 @@ def $bin_bor(val, val')
 
     2. Else
 
-      1. Phantom#397
+      1. Phantom#403
 
   2. Else
 
-    1. Phantom#398
+    1. Phantom#404
 
 1. Else
 
-  1. Phantom#399
+  1. Phantom#405
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:373.1-373.32
+;; spec/2d1-runtime-numerics.watsup:373.1-373.32
 def $bin_concat(val, val')
 
 1. If (val matches pattern `FIntV%%`), then
@@ -8085,7 +8123,7 @@ def $bin_concat(val, val')
 
   2. Else
 
-    1. Phantom#404
+    1. Phantom#410
 
 1. Else If (val matches pattern `FBitV%%`), then
 
@@ -8117,13 +8155,13 @@ def $bin_concat(val, val')
 
   2. Else
 
-    1. Phantom#402
+    1. Phantom#408
 
 1. Else
 
-  1. Phantom#403
+  1. Phantom#409
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:402.1-402.30
+;; spec/2d1-runtime-numerics.watsup:402.1-402.30
 def $bin_land(val, val')
 
 1. If (val matches pattern `BoolV%`), then
@@ -8138,13 +8176,13 @@ def $bin_land(val, val')
 
   2. Else
 
-    1. Phantom#405
+    1. Phantom#411
 
 1. Else
 
-  1. Phantom#406
+  1. Phantom#412
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:410.1-410.29
+;; spec/2d1-runtime-numerics.watsup:410.1-410.29
 def $bin_lor(val, val')
 
 1. If (val matches pattern `BoolV%`), then
@@ -8159,13 +8197,13 @@ def $bin_lor(val, val')
 
   2. Else
 
-    1. Phantom#407
+    1. Phantom#413
 
 1. Else
 
-  1. Phantom#408
+  1. Phantom#414
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:420.1-421.21
+;; spec/2d1-runtime-numerics.watsup:420.1-421.21
 def $cast_op(typ, val'')
 
 1. If (val'' matches pattern `BoolV%`), then
@@ -8250,14 +8288,14 @@ def $cast_op(typ, val'')
 
 1. Else
 
-  1. Phantom#409
+  1. Phantom#415
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:423.1-423.24
+;; spec/2d1-runtime-numerics.watsup:423.1-423.24
 def $default(typ)
 
 1. Return $default'($canon_typ(typ))
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:424.1-424.25
+;; spec/2d1-runtime-numerics.watsup:424.1-424.25
 def $default'(typ'')
 
 1. If (typ'' = ((ErrT) as typ)), then
@@ -8266,7 +8304,7 @@ def $default'(typ'')
 
 1. Else
 
-  1. Phantom#410
+  1. Phantom#416
 
 2. If (typ'' = ((StrT) as typ)), then
 
@@ -8274,7 +8312,7 @@ def $default'(typ'')
 
 2. Else
 
-  1. Phantom#411
+  1. Phantom#417
 
 3. If (typ'' = ((BoolT) as typ)), then
 
@@ -8282,7 +8320,7 @@ def $default'(typ'')
 
 3. Else
 
-  1. Phantom#412
+  1. Phantom#418
 
 4. If (typ'' = ((IntT) as typ)), then
 
@@ -8290,7 +8328,7 @@ def $default'(typ'')
 
 4. Else
 
-  1. Phantom#413
+  1. Phantom#419
 
 5. If (typ'' has type numtyp), then
 
@@ -8316,7 +8354,7 @@ def $default'(typ'')
 
   2. Else
 
-    1. Phantom#420
+    1. Phantom#426
 
 5. Else If (typ'' has type datatyp), then
 
@@ -8334,7 +8372,7 @@ def $default'(typ'')
 
     2. Else
 
-      1. Phantom#418
+      1. Phantom#424
 
   2. Else If (datatyp matches pattern `SEnumT%%%`), then
 
@@ -8342,17 +8380,17 @@ def $default'(typ'')
 
     2. Let val_zero be $cast_int(typ'', (0 as int))
 
-    3. Let member? be $assoc_<val, member>(val_zero, (val, member)*)
+    3. Let member'? be $assoc_<val, member>(val_zero, (val, member)*)
 
-    4. If (member? matches pattern (_)), then
+    4. If (member'? matches pattern (_)), then
 
-      1. Let ?(member_zero) be member?
+      1. Let ?(member_zero) be member'?
 
       2. Return (SEnumFieldV id member_zero val_zero)
 
     4. Else
 
-      1. Phantom#416
+      1. Phantom#422
 
     5. If (?() = $assoc_<val, member>(val_zero, (val, member)*)), then
 
@@ -8360,7 +8398,7 @@ def $default'(typ'')
 
     5. Else
 
-      1. Phantom#417
+      1. Phantom#423
 
   2. Else If (datatyp matches pattern `TupleT%`), then
 
@@ -8382,7 +8420,7 @@ def $default'(typ'')
 
     2. Else
 
-      1. Phantom#415
+      1. Phantom#421
 
   2. Else If (datatyp matches pattern `StructT%%`), then
 
@@ -8404,18 +8442,18 @@ def $default'(typ'')
 
   2. Else
 
-    1. Phantom#414
+    1. Phantom#420
 
 5. Else
 
-  1. Phantom#419
+  1. Phantom#425
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:428.1-428.32
+;; spec/2d1-runtime-numerics.watsup:428.1-428.32
 def $cast_bool(typ, b)
 
 1. Return $cast_bool'($canon_typ(typ), b)
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:429.1-429.33
+;; spec/2d1-runtime-numerics.watsup:429.1-429.33
 def $cast_bool'(typ'', b')
 
 1. If (typ'' = ((BoolT) as typ)), then
@@ -8424,7 +8462,7 @@ def $cast_bool'(typ'', b')
 
 1. Else
 
-  1. Phantom#421
+  1. Phantom#427
 
 2. If (typ'' has type numtyp), then
 
@@ -8444,11 +8482,11 @@ def $cast_bool'(typ'', b')
 
     2. Else
 
-      1. Phantom#424
+      1. Phantom#430
 
   2. Else
 
-    1. Phantom#425
+    1. Phantom#431
 
 2. Else If (typ'' has type datatyp), then
 
@@ -8462,18 +8500,18 @@ def $cast_bool'(typ'', b')
 
   2. Else
 
-    1. Phantom#422
+    1. Phantom#428
 
 2. Else
 
-  1. Phantom#423
+  1. Phantom#429
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:442.1-442.30
+;; spec/2d1-runtime-numerics.watsup:442.1-442.30
 def $cast_int(typ, i)
 
 1. Return $cast_int'($canon_typ(typ), i)
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:443.1-443.31
+;; spec/2d1-runtime-numerics.watsup:443.1-443.31
 def $cast_int'(typ'', i)
 
 1. If (typ'' = ((BoolT) as typ)), then
@@ -8482,7 +8520,7 @@ def $cast_int'(typ'', i)
 
 1. Else
 
-  1. Phantom#426
+  1. Phantom#432
 
 2. If (typ'' = ((IntT) as typ)), then
 
@@ -8490,7 +8528,7 @@ def $cast_int'(typ'', i)
 
 2. Else
 
-  1. Phantom#427
+  1. Phantom#433
 
 3. If (typ'' has type numtyp), then
 
@@ -8510,7 +8548,7 @@ def $cast_int'(typ'', i)
 
   2. Else
 
-    1. Phantom#431
+    1. Phantom#437
 
 3. Else If (typ'' has type datatyp), then
 
@@ -8524,7 +8562,7 @@ def $cast_int'(typ'', i)
 
   2. Else
 
-    1. Phantom#430
+    1. Phantom#436
 
 3. Else If (typ'' has type synthtyp), then
 
@@ -8540,18 +8578,18 @@ def $cast_int'(typ'', i)
 
   2. Else
 
-    1. Phantom#428
+    1. Phantom#434
 
 3. Else
 
-  1. Phantom#429
+  1. Phantom#435
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:459.1-459.41
+;; spec/2d1-runtime-numerics.watsup:459.1-459.41
 def $cast_fint(typ, w, bs)
 
 1. Return $cast_fint'($canon_typ(typ), w, bs)
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:460.1-460.42
+;; spec/2d1-runtime-numerics.watsup:460.1-460.42
 def $cast_fint'(typ'', w', bs)
 
 1. If (typ'' = ((IntT) as typ)), then
@@ -8560,7 +8598,7 @@ def $cast_fint'(typ'', w', bs)
 
 1. Else
 
-  1. Phantom#432
+  1. Phantom#438
 
 2. If (typ'' has type numtyp), then
 
@@ -8584,7 +8622,7 @@ def $cast_fint'(typ'', w', bs)
 
   2. Else
 
-    1. Phantom#436
+    1. Phantom#442
 
 2. Else If (typ'' has type datatyp), then
 
@@ -8598,7 +8636,7 @@ def $cast_fint'(typ'', w', bs)
 
   2. Else
 
-    1. Phantom#435
+    1. Phantom#441
 
 2. Else If (typ'' has type synthtyp), then
 
@@ -8614,18 +8652,18 @@ def $cast_fint'(typ'', w', bs)
 
   2. Else
 
-    1. Phantom#433
+    1. Phantom#439
 
 2. Else
 
-  1. Phantom#434
+  1. Phantom#440
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:477.1-477.41
+;; spec/2d1-runtime-numerics.watsup:477.1-477.41
 def $cast_fbit(typ, w, bs)
 
 1. Return $cast_fbit'($canon_typ(typ), w, bs)
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:478.1-478.42
+;; spec/2d1-runtime-numerics.watsup:478.1-478.42
 def $cast_fbit'(typ'', w', bs)
 
 1. If (typ'' = ((BoolT) as typ)), then
@@ -8634,7 +8672,7 @@ def $cast_fbit'(typ'', w', bs)
 
 1. Else
 
-  1. Phantom#437
+  1. Phantom#443
 
 2. If (typ'' = ((IntT) as typ)), then
 
@@ -8642,7 +8680,7 @@ def $cast_fbit'(typ'', w', bs)
 
 2. Else
 
-  1. Phantom#438
+  1. Phantom#444
 
 3. If (typ'' has type numtyp), then
 
@@ -8666,7 +8704,7 @@ def $cast_fbit'(typ'', w', bs)
 
   2. Else
 
-    1. Phantom#442
+    1. Phantom#448
 
 3. Else If (typ'' has type datatyp), then
 
@@ -8680,7 +8718,7 @@ def $cast_fbit'(typ'', w', bs)
 
   2. Else
 
-    1. Phantom#441
+    1. Phantom#447
 
 3. Else If (typ'' has type synthtyp), then
 
@@ -8696,18 +8734,18 @@ def $cast_fbit'(typ'', w', bs)
 
   2. Else
 
-    1. Phantom#439
+    1. Phantom#445
 
 3. Else
 
-  1. Phantom#440
+  1. Phantom#446
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:500.1-500.48
+;; spec/2d1-runtime-numerics.watsup:500.1-500.48
 def $cast_struct(typ, id, (member, val)*)
 
 1. Return $cast_struct'($canon_typ(typ), id, (member, val)*)
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:501.1-501.49
+;; spec/2d1-runtime-numerics.watsup:501.1-501.49
 def $cast_struct'(typ, id', (member, val)*)
 
 1. If (typ has type datatyp), then
@@ -8724,22 +8762,22 @@ def $cast_struct'(typ, id', (member, val)*)
 
     2. Else
 
-      1. Phantom#443
+      1. Phantom#449
 
   2. Else
 
-    1. Phantom#444
+    1. Phantom#450
 
 1. Else
 
-  1. Phantom#445
+  1. Phantom#451
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:513.1-513.48
+;; spec/2d1-runtime-numerics.watsup:513.1-513.48
 def $cast_header(typ, id, (member, val)*)
 
 1. Return $cast_header'($canon_typ(typ), id, (member, val)*)
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:514.1-514.49
+;; spec/2d1-runtime-numerics.watsup:514.1-514.49
 def $cast_header'(typ, id', (member, val)*)
 
 1. If (typ has type datatyp), then
@@ -8756,22 +8794,22 @@ def $cast_header'(typ, id', (member, val)*)
 
     2. Else
 
-      1. Phantom#446
+      1. Phantom#452
 
   2. Else
 
-    1. Phantom#447
+    1. Phantom#453
 
 1. Else
 
-  1. Phantom#448
+  1. Phantom#454
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:526.1-526.31
+;; spec/2d1-runtime-numerics.watsup:526.1-526.31
 def $cast_seq(typ, val*)
 
 1. Return $cast_seq'($canon_typ(typ), val*)
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:527.1-527.32
+;; spec/2d1-runtime-numerics.watsup:527.1-527.32
 def $cast_seq'(typ', val*)
 
 1. If (typ' has type datatyp), then
@@ -8822,18 +8860,18 @@ def $cast_seq'(typ', val*)
 
   2. Else
 
-    1. Phantom#449
+    1. Phantom#455
 
 1. Else
 
-  1. Phantom#450
+  1. Phantom#456
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:553.1-553.44
+;; spec/2d1-runtime-numerics.watsup:553.1-553.44
 def $cast_record(typ, (member, val)*)
 
 1. Return $cast_record'($canon_typ(typ), (member, val)*)
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:554.1-554.45
+;; spec/2d1-runtime-numerics.watsup:554.1-554.45
 def $cast_record'(typ', (member, val)*)
 
 1. If (typ' has type datatyp), then
@@ -8844,11 +8882,11 @@ def $cast_record'(typ', (member, val)*)
 
     1. Let (StructT id (member_t, typ)*) be datatyp
 
-    2. (Let val? be $find_map<member, val>(({ (member -> val)* }), member_t))*
+    2. (Let val'''? be $find_map<member, val>(({ (member -> val)* }), member_t))*
 
-    3. If ((val? matches pattern (_)))*, then
+    3. If ((val'''? matches pattern (_)))*, then
 
-      1. (Let ?(val') be val?)*
+      1. (Let ?(val') be val'''?)*
 
       2. (Let val'' be $cast_op(typ, val'))*
 
@@ -8856,17 +8894,17 @@ def $cast_record'(typ', (member, val)*)
 
     3. Else
 
-      1. Phantom#453
+      1. Phantom#459
 
   2. Else If (datatyp matches pattern `HeaderT%%`), then
 
     1. Let (HeaderT id (member_t, typ)*) be datatyp
 
-    2. (Let val? be $find_map<member, val>(({ (member -> val)* }), member_t))*
+    2. (Let val'''? be $find_map<member, val>(({ (member -> val)* }), member_t))*
 
-    3. If ((val? matches pattern (_)))*, then
+    3. If ((val'''? matches pattern (_)))*, then
 
-      1. (Let ?(val') be val?)*
+      1. (Let ?(val') be val'''?)*
 
       2. (Let val'' be $cast_op(typ, val'))*
 
@@ -8874,22 +8912,22 @@ def $cast_record'(typ', (member, val)*)
 
     3. Else
 
-      1. Phantom#451
+      1. Phantom#457
 
   2. Else
 
-    1. Phantom#452
+    1. Phantom#458
 
 1. Else
 
-  1. Phantom#454
+  1. Phantom#460
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:581.1-581.40
+;; spec/2d1-runtime-numerics.watsup:581.1-581.40
 def $cast_set_singleton(typ, val)
 
 1. Return $cast_set_singleton'($canon_typ(typ), val)
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:582.1-582.41
+;; spec/2d1-runtime-numerics.watsup:582.1-582.41
 def $cast_set_singleton'(typ', val)
 
 1. If (typ' has type synthtyp), then
@@ -8906,18 +8944,18 @@ def $cast_set_singleton'(typ', val)
 
   2. Else
 
-    1. Phantom#455
+    1. Phantom#461
 
 1. Else
 
-  1. Phantom#456
+  1. Phantom#462
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:589.1-589.40
+;; spec/2d1-runtime-numerics.watsup:589.1-589.40
 def $cast_set_mask(typ, val_b, val_m)
 
 1. Return $cast_set_mask'($canon_typ(typ), val_b, val_m)
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:590.1-590.41
+;; spec/2d1-runtime-numerics.watsup:590.1-590.41
 def $cast_set_mask'(typ', val_b, val_m)
 
 1. If (typ' has type synthtyp), then
@@ -8936,18 +8974,18 @@ def $cast_set_mask'(typ', val_b, val_m)
 
   2. Else
 
-    1. Phantom#457
+    1. Phantom#463
 
 1. Else
 
-  1. Phantom#458
+  1. Phantom#464
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:598.1-598.41
+;; spec/2d1-runtime-numerics.watsup:598.1-598.41
 def $cast_set_range(typ, val_l, val_u)
 
 1. Return $cast_set_range'($canon_typ(typ), val_l, val_u)
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:599.1-599.42
+;; spec/2d1-runtime-numerics.watsup:599.1-599.42
 def $cast_set_range'(typ', val_l, val_u)
 
 1. If (typ' has type synthtyp), then
@@ -8966,13 +9004,13 @@ def $cast_set_range'(typ', val_l, val_u)
 
   2. Else
 
-    1. Phantom#459
+    1. Phantom#465
 
 1. Else
 
-  1. Phantom#460
+  1. Phantom#466
 
-;; ../../../../spec/2d1-runtime-numerics.watsup:650.1-650.58
+;; spec/2d1-runtime-numerics.watsup:650.1-650.58
 def $bitacc_op(val_b, val_h, val_l)
 
 1. Let i_b be $get_num(val_b)
@@ -8993,9 +9031,9 @@ def $bitacc_op(val_b, val_h, val_l)
 
 5. Else
 
-  1. Phantom#461
+  1. Phantom#467
 
-;; ../../../../spec/2d2-runtime-builtins.watsup:5.1-6.34
+;; spec/2d2-runtime-builtins.watsup:5.1-6.34
 def $size(typ, text)
 
 1. If (text = "minSizeInBits"), then
@@ -9016,19 +9054,19 @@ def $size(typ, text)
 
 1. Else
 
-  1. Phantom#462
+  1. Phantom#468
 
-;; ../../../../spec/2d2-runtime-builtins.watsup:8.1-8.35
+;; spec/2d2-runtime-builtins.watsup:8.1-8.35
 def $size_minSizeInBits(typ)
 
 1. Return (IntV ($size_minSizeInBits'(typ) as int))
 
-;; ../../../../spec/2d2-runtime-builtins.watsup:9.1-9.36
+;; spec/2d2-runtime-builtins.watsup:9.1-9.36
 def $size_minSizeInBits'(typ)
 
 1. Return $size_minSizeInBits''($canon_typ(typ))
 
-;; ../../../../spec/2d2-runtime-builtins.watsup:10.1-10.37
+;; spec/2d2-runtime-builtins.watsup:10.1-10.37
 def $size_minSizeInBits''(typ'')
 
 1. If (typ'' = ((BoolT) as typ)), then
@@ -9037,7 +9075,7 @@ def $size_minSizeInBits''(typ'')
 
 1. Else
 
-  1. Phantom#463
+  1. Phantom#469
 
 2. If (typ'' has type numtyp), then
 
@@ -9063,7 +9101,7 @@ def $size_minSizeInBits''(typ'')
 
   2. Else
 
-    1. Phantom#467
+    1. Phantom#473
 
 2. Else If (typ'' has type datatyp), then
 
@@ -9099,7 +9137,7 @@ def $size_minSizeInBits''(typ'')
 
     2. Else
 
-      1. Phantom#465
+      1. Phantom#471
 
   2. Else If (datatyp matches pattern `StructT%%`), then
 
@@ -9121,30 +9159,30 @@ def $size_minSizeInBits''(typ'')
 
   2. Else
 
-    1. Phantom#464
+    1. Phantom#470
 
 2. Else
 
-  1. Phantom#466
+  1. Phantom#472
 
-;; ../../../../spec/2d2-runtime-builtins.watsup:12.1-12.36
+;; spec/2d2-runtime-builtins.watsup:12.1-12.36
 def $size_minSizeInBytes(typ)
 
 1. Let n be $size_minSizeInBits'(typ)
 
 2. Return (IntV ((n / 8) as int))
 
-;; ../../../../spec/2d2-runtime-builtins.watsup:14.1-14.35
+;; spec/2d2-runtime-builtins.watsup:14.1-14.35
 def $size_maxSizeInBits(typ)
 
 1. Return (IntV ($size_maxSizeInBits'(typ) as int))
 
-;; ../../../../spec/2d2-runtime-builtins.watsup:15.1-15.36
+;; spec/2d2-runtime-builtins.watsup:15.1-15.36
 def $size_maxSizeInBits'(typ)
 
 1. Return $size_maxSizeInBits''($canon_typ(typ))
 
-;; ../../../../spec/2d2-runtime-builtins.watsup:16.1-16.37
+;; spec/2d2-runtime-builtins.watsup:16.1-16.37
 def $size_maxSizeInBits''(typ'')
 
 1. If (typ'' = ((BoolT) as typ)), then
@@ -9153,7 +9191,7 @@ def $size_maxSizeInBits''(typ'')
 
 1. Else
 
-  1. Phantom#468
+  1. Phantom#474
 
 2. If (typ'' has type numtyp), then
 
@@ -9179,7 +9217,7 @@ def $size_maxSizeInBits''(typ'')
 
   2. Else
 
-    1. Phantom#472
+    1. Phantom#478
 
 2. Else If (typ'' has type datatyp), then
 
@@ -9215,7 +9253,7 @@ def $size_maxSizeInBits''(typ'')
 
     2. Else
 
-      1. Phantom#470
+      1. Phantom#476
 
   2. Else If (datatyp matches pattern `StructT%%`), then
 
@@ -9237,76 +9275,76 @@ def $size_maxSizeInBits''(typ'')
 
   2. Else
 
-    1. Phantom#469
+    1. Phantom#475
 
 2. Else
 
-  1. Phantom#471
+  1. Phantom#477
 
-;; ../../../../spec/2d2-runtime-builtins.watsup:18.1-18.36
+;; spec/2d2-runtime-builtins.watsup:18.1-18.36
 def $size_maxSizeInBytes(typ)
 
 1. Let n be $size_maxSizeInBits'(typ)
 
 2. Return (IntV ((n / 8) as int))
 
-;; ../../../../spec/2e-runtime-env.watsup:11.15-11.31
+;; spec/2e-runtime-env.watsup:11.15-11.31
 syntax styp = 
    | `%%%%`(typ, dir, ctk, val?)
 
-;; ../../../../spec/2e-runtime-env.watsup:18.45-18.58
+;; spec/2e-runtime-env.watsup:18.45-18.58
 syntax frame = map<id, styp>
 
-;; ../../../../spec/2e-runtime-env.watsup:20.1-20.27
+;; spec/2e-runtime-env.watsup:20.1-20.27
 def $empty_frame
 
 1. Return $empty_map<id, styp>
 
-;; ../../../../spec/2e-runtime-env.watsup:24.57-24.73
+;; spec/2e-runtime-env.watsup:24.57-24.73
 syntax tdenv = map<tid, typdef>
 
-;; ../../../../spec/2e-runtime-env.watsup:26.1-26.27
+;; spec/2e-runtime-env.watsup:26.1-26.27
 def $empty_tdenv
 
 1. Return $empty_map<tid, typdef>
 
-;; ../../../../spec/2e-runtime-env.watsup:30.57-30.74
+;; spec/2e-runtime-env.watsup:30.57-30.74
 syntax fdenv = map<fid, funcdef>
 
-;; ../../../../spec/2e-runtime-env.watsup:32.1-32.27
+;; spec/2e-runtime-env.watsup:32.1-32.27
 def $empty_fdenv
 
 1. Return $empty_map<fid, funcdef>
 
-;; ../../../../spec/2e-runtime-env.watsup:36.57-36.74
+;; spec/2e-runtime-env.watsup:36.57-36.74
 syntax cdenv = map<fid, consdef>
 
-;; ../../../../spec/2e-runtime-env.watsup:38.1-38.27
+;; spec/2e-runtime-env.watsup:38.1-38.27
 def $empty_cdenv
 
 1. Return $empty_map<cid, consdef>
 
-;; ../../../../spec/2e-runtime-env.watsup:45.1-45.36
+;; spec/2e-runtime-env.watsup:45.1-45.36
 def $check_func_name(id_l, id_r)
 
 1. Return (id_l = id_r)
 
-;; ../../../../spec/2e-runtime-env.watsup:49.1-49.42
+;; spec/2e-runtime-env.watsup:49.1-49.42
 def $check_arity_more(id_a?*, id_p*)
 
 1. Return (|id_a?*| > |id_p*|)
 
-;; ../../../../spec/2e-runtime-env.watsup:53.1-53.37
+;; spec/2e-runtime-env.watsup:53.1-53.37
 def $check_arity(id_a?*, id_p*)
 
 1. Return (|id_a?*| = |id_p*|)
 
-;; ../../../../spec/2e-runtime-env.watsup:57.1-57.42
+;; spec/2e-runtime-env.watsup:57.1-57.42
 def $check_arity_less(id_a?*, id_p*)
 
 1. Return (|id_a?*| < |id_p*|)
 
-;; ../../../../spec/2e-runtime-env.watsup:61.1-61.46
+;; spec/2e-runtime-env.watsup:61.1-61.46
 def $get_params_missing_names(id*, id_a*)
 
 1. If (id* matches pattern []), then
@@ -9323,13 +9361,13 @@ def $get_params_missing_names(id*, id_a*)
 
   2. Else
 
-    1. Phantom#473
+    1. Phantom#479
 
   3. Otherwise
 
     1. Return $get_params_missing_names(id_p_t*, id_a*)
 
-;; ../../../../spec/2e-runtime-env.watsup:73.1-73.68
+;; spec/2e-runtime-env.watsup:73.1-73.68
 def $find_match_named<V>(fid, V, id_a*, (id_p, bool_p)*)
 
 1. If $eq_set<id>(({ id_a* }), ({ id_p* })), then
@@ -9340,7 +9378,7 @@ def $find_match_named<V>(fid, V, id_a*, (id_p, bool_p)*)
 
   1. Return ?()
 
-;; ../../../../spec/2e-runtime-env.watsup:83.1-84.59
+;; spec/2e-runtime-env.watsup:83.1-84.59
 def $find_match_named_default<V>(fid, V, id_a*, (id_p, bool_p)*)
 
 1. Let id_deft* be $get_params_missing_names(id_p*, id_a*)
@@ -9353,7 +9391,7 @@ def $find_match_named_default<V>(fid, V, id_a*, (id_p, bool_p)*)
 
   1. Return ?()
 
-;; ../../../../spec/2e-runtime-env.watsup:94.1-95.61
+;; spec/2e-runtime-env.watsup:94.1-95.61
 def $find_match_unnamed_default<V>(fid, V, id_a?*, (id_p, bool_p)*)
 
 1. Let ((id, bool)*, (id_deft, bool')*) be $partition_<(id, bool)>((id_p, bool_p)*, |id_a?*|)
@@ -9366,10 +9404,10 @@ def $find_match_unnamed_default<V>(fid, V, id_a?*, (id_p, bool_p)*)
 
   1. Return ?()
 
-;; ../../../../spec/2e-runtime-env.watsup:104.1-105.57
-def $find_matching_func<V>(id_f, id_a?*, id*', (id_f' (id_p, bool_p)*), V)
+;; spec/2e-runtime-env.watsup:104.1-105.57
+def $find_matching_func<V>(id_f, id_a?*, id_a''*, (id_f' (id_p, bool_p)*), V)
 
-1. Let id_a'* be id*'
+1. (Let id_a' be id_a'')*
 
 2. If ~$check_func_name(id_f, id_f'), then
 
@@ -9383,7 +9421,7 @@ def $find_matching_func<V>(id_f, id_a?*, id*', (id_f' (id_p, bool_p)*), V)
 
   1. Else
 
-    1. Phantom#474
+    1. Phantom#480
 
 3. If (|id_a'*| > 0), then
 
@@ -9395,25 +9433,19 @@ def $find_matching_func<V>(id_f, id_a?*, id*', (id_f' (id_p, bool_p)*), V)
 
     1. Else
 
-      1. Phantom#475
-
-    2. If $check_arity_less(id_a?*, id_p*), then
-
-      1. Return $find_match_named_default<V>((id_f' (id_p, bool_p)*), V, id_a'*, (id_p, bool_p)*)
-
-    2. Else
-
-      1. Phantom#476
+      1. Phantom#481
 
   1. Else
 
-    1. Phantom#477
+    1. Phantom#482
 
 3. Else
 
-  1. Phantom#478
+  1. Phantom#483
 
-4. If (id*' matches pattern []), then
+4. (Let id be id_a'')*
+
+5. If (id* matches pattern []), then
 
   1. If $check_func_name(id_f, id_f'), then
 
@@ -9423,7 +9455,7 @@ def $find_matching_func<V>(id_f, id_a?*, id*', (id_f' (id_p, bool_p)*), V)
 
     1. Else
 
-      1. Phantom#479
+      1. Phantom#484
 
     2. If $check_arity_less(id_a?*, id_p*), then
 
@@ -9431,20 +9463,44 @@ def $find_matching_func<V>(id_f, id_a?*, id*', (id_f' (id_p, bool_p)*), V)
 
     2. Else
 
-      1. Phantom#480
+      1. Phantom#485
 
   1. Else
 
-    1. Phantom#481
+    1. Phantom#486
 
-4. Else
+5. Else
 
-  1. Phantom#482
+  1. Phantom#487
 
-;; ../../../../spec/2e-runtime-env.watsup:142.1-143.58
-def $find_matching_funcs<V>(id_f, id_a?*, id_a'*, fid*, V*)
+6. If (|id_a'*| > 0), then
 
-1. If (fid* matches pattern []), then
+  1. If $check_func_name(id_f, id_f'), then
+
+    1. If $check_arity_less(id_a?*, id_p*), then
+
+      1. Return $find_match_named_default<V>((id_f' (id_p, bool_p)*), V, id_a'*, (id_p, bool_p)*)
+
+    1. Else
+
+      1. Phantom#488
+
+  1. Else
+
+    1. Phantom#489
+
+6. Else
+
+  1. Phantom#490
+
+;; spec/2e-runtime-env.watsup:142.1-143.58
+def $find_matching_funcs<V>(id_f, id_a?*, id_a'*, fid''*, V''*)
+
+1. (Let fid be fid'')*
+
+2. (Let V be V'')*
+
+3. If (fid* matches pattern []), then
 
   1. If (V* matches pattern []), then
 
@@ -9452,9 +9508,9 @@ def $find_matching_funcs<V>(id_f, id_a?*, id_a'*, fid*, V*)
 
   1. Else
 
-    1. Phantom#486
+    1. Phantom#493
 
-1. Else If (fid* matches pattern _ :: _), then
+3. Else If (fid* matches pattern _ :: _), then
 
   1. Let fid_h :: fid_t* be fid*
 
@@ -9468,25 +9524,45 @@ def $find_matching_funcs<V>(id_f, id_a?*, id_a'*, fid*, V*)
 
     2. Else
 
-      1. Phantom#483
+      1. Phantom#491
 
-    3. Let (fid, V, id*)? be $find_matching_func<V>(id_f, id_a?*, id_a'*, fid_h, V_h)
+  2. Else
+
+    1. Phantom#492
+
+4. (Let fid' be fid'')*
+
+5. (Let V' be V'')*
+
+6. If (fid'* matches pattern _ :: _), then
+
+  1. Let fid_h :: fid_t* be fid'*
 
-    4. If ((fid, V, id*)? matches pattern (_)), then
+  2. If (V'* matches pattern _ :: _), then
+
+    1. Let V_h :: V_t* be V'*
+
+    2. Let (fid, V, id*)? be $find_matching_func<V>(id_f, id_a?*, id_a'*, fid_h, V_h)
+
+    3. If ((fid, V, id*)? matches pattern (_)), then
 
       1. Let ?((fid, V, id_deft*)) be (fid, V, id*)?
 
       2. Return (fid, V, id_deft*) :: $find_matching_funcs<V>(id_f, id_a?*, id_a'*, fid_t*, V_t*)
 
-    4. Else
+    3. Else
 
-      1. Phantom#484
+      1. Phantom#494
 
   2. Else
 
-    1. Phantom#485
+    1. Phantom#495
+
+6. Else
+
+  1. Phantom#496
 
-;; ../../../../spec/2e-runtime-env.watsup:156.1-157.41
+;; spec/2e-runtime-env.watsup:156.1-157.41
 def $find_func<V>(id_f, id_a?*, ({ (fid -> V)* }))
 
 1. If (|id_a?*| > 0), then
@@ -9503,7 +9579,7 @@ def $find_func<V>(id_f, id_a?*, ({ (fid -> V)* }))
 
     2. Else
 
-      1. Phantom#487
+      1. Phantom#497
 
     3. Let (fid, V, id*)* be $find_matching_funcs<V>(id_f, id_a?*, id_a'*, fid*, V*)
 
@@ -9515,15 +9591,15 @@ def $find_func<V>(id_f, id_a?*, ({ (fid -> V)* }))
 
     4. Else
 
-      1. Phantom#488
+      1. Phantom#498
 
   2. Else
 
-    1. Phantom#489
+    1. Phantom#499
 
 1. Else
 
-  1. Phantom#490
+  1. Phantom#500
 
 2. If ((id_a? = ?()))*, then
 
@@ -9533,7 +9609,7 @@ def $find_func<V>(id_f, id_a?*, ({ (fid -> V)* }))
 
   1. Else
 
-    1. Phantom#491
+    1. Phantom#501
 
   2. Let (fid, V, id*)* be $find_matching_funcs<V>(id_f, id_a?*, [], fid*, V*)
 
@@ -9545,13 +9621,13 @@ def $find_func<V>(id_f, id_a?*, ({ (fid -> V)* }))
 
   3. Else
 
-    1. Phantom#492
+    1. Phantom#502
 
 2. Else
 
-  1. Phantom#493
+  1. Phantom#503
 
-;; ../../../../spec/2e-runtime-env.watsup:180.1-180.55
+;; spec/2e-runtime-env.watsup:180.1-180.55
 def $find_funcs_by_name(id_f, fid*, funcdef*)
 
 1. If (fid* matches pattern []), then
@@ -9562,7 +9638,7 @@ def $find_funcs_by_name(id_f, fid*, funcdef*)
 
   1. Else
 
-    1. Phantom#497
+    1. Phantom#507
 
 1. Else If (fid* matches pattern _ :: _), then
 
@@ -9578,11 +9654,11 @@ def $find_funcs_by_name(id_f, fid*, funcdef*)
 
     2. Else
 
-      1. Phantom#494
+      1. Phantom#504
 
   2. Else
 
-    1. Phantom#495
+    1. Phantom#505
 
   3. Let _fid :: fid_t* be fid*
 
@@ -9596,9 +9672,9 @@ def $find_funcs_by_name(id_f, fid*, funcdef*)
 
   4. Else
 
-    1. Phantom#496
+    1. Phantom#506
 
-;; ../../../../spec/2e-runtime-env.watsup:192.1-193.23
+;; spec/2e-runtime-env.watsup:192.1-193.23
 def $find_func_by_name(id_f, ({ (fid -> fd)* }))
 
 1. If ([] = $find_funcs_by_name(id_f, fid*, fd*)), then
@@ -9607,7 +9683,7 @@ def $find_func_by_name(id_f, ({ (fid -> fd)* }))
 
 1. Else
 
-  1. Phantom#498
+  1. Phantom#508
 
 2. Let funcdef* be $find_funcs_by_name(id_f, fid*, fd*)
 
@@ -9619,15 +9695,15 @@ def $find_func_by_name(id_f, ({ (fid -> fd)* }))
 
 3. Else
 
-  1. Phantom#499
+  1. Phantom#509
 
-;; ../../../../spec/2f-runtime-ctk.watsup:5.14-5.30
+;; spec/2f-runtime-ctk.watsup:5.14-5.30
 syntax ctk = 
    | `LCTK`()
    | `CTK`()
    | `DYN`()
 
-;; ../../../../spec/2f-runtime-ctk.watsup:7.1-7.81
+;; spec/2f-runtime-ctk.watsup:7.1-7.81
 def $join_ctk(ctk'', ctk''')
 
 1. If (ctk'' matches pattern `LCTK`), then
@@ -9654,32 +9730,40 @@ def $join_ctk(ctk'', ctk''')
 
   1. Return (DYN)
 
-;; ../../../../spec/2f-runtime-ctk.watsup:16.1-16.75
-def $joins_ctk(ctk*'')
+;; spec/2f-runtime-ctk.watsup:16.1-16.75
+def $joins_ctk(ctk''*)
+
+1. (Let ctk be ctk'')*
 
-1. If (ctk*'' matches pattern []), then
+2. If (ctk* matches pattern []), then
 
   1. Return (DYN)
 
-1. Else If (ctk*'' matches pattern [ _/1 ]), then
+2. Else
 
-  1. Let [ctk] be ctk*''
+  1. Phantom#510
+
+3. (Let ctk' be ctk'')*
+
+4. If (ctk'* matches pattern [ _/1 ]), then
+
+  1. Let [ctk] be ctk'*
 
   2. Return ctk
 
-1. Else If (ctk*'' matches pattern _ :: _), then
+4. Else If (ctk'* matches pattern _ :: _), then
 
-  1. Let ctk_a :: ctk*'' be ctk*''
+  1. Let ctk_a :: ctk* be ctk'*
 
-  2. If (ctk*'' matches pattern [ _/1 ]), then
+  2. If (ctk* matches pattern [ _/1 ]), then
 
-    1. Let [ctk_b] be ctk*''
+    1. Let [ctk_b] be ctk*
 
     2. Return $join_ctk(ctk_a, ctk_b)
 
-  2. Else If (ctk*'' matches pattern _ :: _), then
+  2. Else If (ctk* matches pattern _ :: _), then
 
-    1. Let ctk_b :: ctk_c* be ctk*''
+    1. Let ctk_b :: ctk_c* be ctk*
 
     2. Let ctk_d be $join_ctk(ctk_a, ctk_b)
 
@@ -9687,18 +9771,18 @@ def $joins_ctk(ctk*'')
 
   2. Else
 
-    1. Phantom#500
+    1. Phantom#511
 
-1. Else
+4. Else
 
-  1. Phantom#501
+  1. Phantom#512
 
-;; ../../../../spec/2g-runtime-flow.watsup:5.15-5.25
+;; spec/2g-runtime-flow.watsup:5.15-5.25
 syntax flow = 
    | `CONT`()
    | `RET`()
 
-;; ../../../../spec/2g-runtime-flow.watsup:9.1-9.85
+;; spec/2g-runtime-flow.watsup:9.1-9.85
 def $join_flow(flow'', flow''')
 
 1. If (flow'' matches pattern `RET`), then
@@ -9709,78 +9793,78 @@ def $join_flow(flow'', flow''')
 
   1. Else
 
-    1. Phantom#502
+    1. Phantom#513
 
 1. Else
 
-  1. Phantom#503
+  1. Phantom#514
 
 2. Return (CONT)
 
-;; ../../../../spec/3-syntax-il.watsup:5.16-5.19
+;; spec/3-syntax-il.watsup:5.16-5.19
 syntax numIL = num
 
-;; ../../../../spec/3-syntax-il.watsup:15.15-15.17
+;; spec/3-syntax-il.watsup:15.15-15.17
 syntax idIL = id
 
-;; ../../../../spec/3-syntax-il.watsup:21.17-21.21
+;; spec/3-syntax-il.watsup:21.17-21.21
 syntax nameIL = name
 
-;; ../../../../spec/3-syntax-il.watsup:27.19-27.23
+;; spec/3-syntax-il.watsup:27.19-27.23
 syntax memberIL = idIL
 
-;; ../../../../spec/3-syntax-il.watsup:33.22-33.26
+;; spec/3-syntax-il.watsup:33.22-33.26
 syntax matchkindIL = idIL
 
-;; ../../../../spec/3-syntax-il.watsup:39.23-39.27
+;; spec/3-syntax-il.watsup:39.23-39.27
 syntax statelabelIL = idIL
 
-;; ../../../../spec/3-syntax-il.watsup:45.17-45.21
+;; spec/3-syntax-il.watsup:45.17-45.21
 syntax unopIL = unop
 
-;; ../../../../spec/3-syntax-il.watsup:51.18-51.23
+;; spec/3-syntax-il.watsup:51.18-51.23
 syntax binopIL = binop
 
-;; ../../../../spec/3-syntax-il.watsup:57.16-57.19
+;; spec/3-syntax-il.watsup:57.16-57.19
 syntax dirIL = dir
 
-;; ../../../../spec/3-syntax-il.watsup:69.17-69.20
+;; spec/3-syntax-il.watsup:69.17-69.20
 syntax typeIL = typ
 
-;; ../../../../spec/3-syntax-il.watsup:75.19-75.21
+;; spec/3-syntax-il.watsup:75.19-75.21
 syntax tparamIL = id
 
-;; ../../../../spec/3-syntax-il.watsup:81.18-81.40
+;; spec/3-syntax-il.watsup:81.18-81.40
 syntax paramIL = 
    | `%%%%`(idIL, dirIL, typeIL, val?)
 
-;; ../../../../spec/3-syntax-il.watsup:87.19-87.26
+;; spec/3-syntax-il.watsup:87.19-87.26
 syntax cparamIL = paramIL
 
-;; ../../../../spec/3-syntax-il.watsup:93.17-93.23
+;; spec/3-syntax-il.watsup:93.17-93.23
 syntax targIL = typeIL
 
-;; ../../../../spec/3-syntax-il.watsup:100.1-102.39
+;; spec/3-syntax-il.watsup:100.1-102.39
 syntax argIL = 
    | `ExprA%`(exprIL)
    | `NameA%%`(idIL, exprIL?)
    | `AnyA`()
 
-;; ../../../../spec/3-syntax-il.watsup:109.1-111.33
+;; spec/3-syntax-il.watsup:109.1-111.33
 syntax keysetIL = 
    | `ExprK%`(exprIL)
    | `DefaultK`()
    | `AnyK`()
 
-;; ../../../../spec/3-syntax-il.watsup:117.23-117.45
+;; spec/3-syntax-il.watsup:117.23-117.45
 syntax selectcaseIL = 
    | `%%`(keysetIL*, statelabelIL)
 
-;; ../../../../spec/3-syntax-il.watsup:123.18-123.29
+;; spec/3-syntax-il.watsup:123.18-123.29
 syntax annotIL = 
    | `(%;%)`(typ, ctk)
 
-;; ../../../../spec/3-syntax-il.watsup:125.1-145.128
+;; spec/3-syntax-il.watsup:125.1-145.128
 syntax exprIL = 
    | `ValueE%%`(val, annotIL)
    | `NameE%%`(nameIL, annotIL)
@@ -9804,11 +9888,11 @@ syntax exprIL =
    | `CallTypeE%%%%%`(nameIL, memberIL, targIL*, argIL*, annotIL)
    | `InstE%%%%`(nameIL, targIL*, argIL*, annotIL)
 
-;; ../../../../spec/3-syntax-il.watsup:151.18-151.75
+;; spec/3-syntax-il.watsup:151.18-151.75
 syntax blockIL = 
    | `BlockB%`(stmtIL*)
 
-;; ../../../../spec/3-syntax-il.watsup:158.1-169.67
+;; spec/3-syntax-il.watsup:158.1-169.67
 syntax stmtIL = 
    | `EmptyS`()
    | `AssignS%%`(exprIL, exprIL)
@@ -9823,54 +9907,54 @@ syntax stmtIL =
    | `TransS%`(exprIL)
    | `DeclS%`(declIL)
 
-;; ../../../../spec/3-syntax-il.watsup:176.1-177.39
+;; spec/3-syntax-il.watsup:176.1-177.39
 syntax switchlabelIL = 
    | `ExprL%`(exprIL)
    | `DefaultL`()
 
-;; ../../../../spec/3-syntax-il.watsup:180.1-181.56
+;; spec/3-syntax-il.watsup:180.1-181.56
 syntax switchcaseIL = 
    | `MatchC%%`(switchlabelIL, blockIL)
    | `FallC%`(switchlabelIL)
 
-;; ../../../../spec/3-syntax-il.watsup:187.24-187.44
+;; spec/3-syntax-il.watsup:187.24-187.44
 syntax parserstateIL = 
    | `%%`(statelabelIL, blockIL)
 
-;; ../../../../spec/3-syntax-il.watsup:193.16-193.26
+;; spec/3-syntax-il.watsup:193.16-193.26
 syntax tblIL = tblpropIL*
 
-;; ../../../../spec/3-syntax-il.watsup:199.19-199.37
+;; spec/3-syntax-il.watsup:199.19-199.37
 syntax tblkeyIL = 
    | `%%`(exprIL, matchkindIL)
 
-;; ../../../../spec/3-syntax-il.watsup:200.23-200.32
+;; spec/3-syntax-il.watsup:200.23-200.32
 syntax tblkeypropIL = tblkeyIL*
 
-;; ../../../../spec/3-syntax-il.watsup:206.22-206.53
+;; spec/3-syntax-il.watsup:206.22-206.53
 syntax tblactionIL = 
    | `%%%%`(nameIL, argIL*, paramIL*, paramIL*)
 
-;; ../../../../spec/3-syntax-il.watsup:207.26-207.38
+;; spec/3-syntax-il.watsup:207.26-207.38
 syntax tblactionpropIL = tblactionIL*
 
-;; ../../../../spec/3-syntax-il.watsup:213.21-213.52
+;; spec/3-syntax-il.watsup:213.21-213.52
 syntax tblentryIL = 
    | `%%%%`(bool, keysetIL*, tblactionIL, val?)
 
-;; ../../../../spec/3-syntax-il.watsup:214.25-214.41
+;; spec/3-syntax-il.watsup:214.25-214.41
 syntax tblentrypropIL = 
    | `%%`(bool, tblentryIL*)
 
-;; ../../../../spec/3-syntax-il.watsup:220.27-220.43
+;; spec/3-syntax-il.watsup:220.27-220.43
 syntax tbldefaultpropIL = 
    | `%%`(bool, tblactionIL)
 
-;; ../../../../spec/3-syntax-il.watsup:226.26-226.46
+;; spec/3-syntax-il.watsup:226.26-226.46
 syntax tblcustompropIL = 
    | `%%%`(bool, memberIL, exprIL)
 
-;; ../../../../spec/3-syntax-il.watsup:233.1-237.80
+;; spec/3-syntax-il.watsup:233.1-237.80
 syntax tblpropIL = 
    | `KeyP%`(tblkeypropIL)
    | `ActionP%`(tblactionpropIL)
@@ -9878,13 +9962,13 @@ syntax tblpropIL =
    | `DefaultP%`(tbldefaultpropIL)
    | `CustomP%`(tblcustompropIL)
 
-;; ../../../../spec/3-syntax-il.watsup:244.1-246.53
+;; spec/3-syntax-il.watsup:244.1-246.53
 syntax methodIL = 
    | `ExternConsM%%%`(idIL, tparamIL*, cparamIL*)
    | `ExternAbstractM%%%%%`(idIL, typeIL, tparamIL*, tparamIL*, paramIL*)
    | `ExternM%%%%%`(idIL, typeIL, tparamIL*, tparamIL*, paramIL*)
 
-;; ../../../../spec/3-syntax-il.watsup:255.1-277.52
+;; spec/3-syntax-il.watsup:255.1-277.52
 syntax declIL = 
    | `ConstD%%%`(idIL, typeIL, val)
    | `VarD%%%`(idIL, typeIL, exprIL?)
@@ -9910,24 +9994,24 @@ syntax declIL =
    | `ExternObjectD%%%`(idIL, tparamIL*, methodIL*)
    | `PackageTypeD%%%%`(idIL, tparamIL*, tparamIL*, cparamIL*)
 
-;; ../../../../spec/3-syntax-il.watsup:280.1-281.17
+;; spec/3-syntax-il.watsup:280.1-281.17
 syntax typedefIL = 
    | `TypeD%`(typeIL)
    | `DeclD%`(declIL)
 
-;; ../../../../spec/3-syntax-il.watsup:287.20-287.27
+;; spec/3-syntax-il.watsup:287.20-287.27
 syntax programIL = declIL*
 
-;; ../../../../spec/4a1-typing-context.watsup:5.17-5.39
+;; spec/4a1-typing-context.watsup:5.17-5.39
 syntax cursor = 
    | `GLOBAL`()
    | `BLOCK`()
    | `LOCAL`()
 
-;; ../../../../spec/4a1-typing-context.watsup:16.3-19.18
+;; spec/4a1-typing-context.watsup:16.3-19.18
 syntax glayer = {`CDENV%`(cdenv), `TDENV%`(tdenv), `FDENV%`(fdenv), `FRAME%`(frame)}
 
-;; ../../../../spec/4a1-typing-context.watsup:23.16-23.59
+;; spec/4a1-typing-context.watsup:23.16-23.59
 syntax bkind = 
    | `EMPTY`()
    | `EXTERN`()
@@ -9935,10 +10019,10 @@ syntax bkind =
    | `CONTROL`()
    | `PACKAGE`()
 
-;; ../../../../spec/4a1-typing-context.watsup:26.3-30.18
+;; spec/4a1-typing-context.watsup:26.3-30.18
 syntax blayer = {`ID%`(id), `KIND%`(bkind), `TDENV%`(tdenv), `FDENV%`(fdenv), `FRAME%`(frame)}
 
-;; ../../../../spec/4a1-typing-context.watsup:35.1-43.21
+;; spec/4a1-typing-context.watsup:35.1-43.21
 syntax lkind = 
    | `EMPTY`()
    | `EXTERNFUNC`()
@@ -9950,13 +10034,13 @@ syntax lkind =
    | `CONTROLAPPLYMETHOD`()
    | `TABLEAPPLYMETHOD`()
 
-;; ../../../../spec/4a1-typing-context.watsup:46.3-49.20
+;; spec/4a1-typing-context.watsup:46.3-49.20
 syntax llayer = {`ID%`(id), `KIND%`(lkind), `TDENV%`(tdenv), `FRAMES%`(frame*)}
 
-;; ../../../../spec/4a1-typing-context.watsup:56.3-58.19
+;; spec/4a1-typing-context.watsup:56.3-58.19
 syntax context = {`GLOBAL%`(glayer), `BLOCK%`(blayer), `LOCAL%`(llayer)}
 
-;; ../../../../spec/4a1-typing-context.watsup:66.1-66.29
+;; spec/4a1-typing-context.watsup:66.1-66.29
 def $empty_context
 
 1. Let glayer be {CDENV $empty_map<cid, consdef>, TDENV $empty_map<tid, typdef>, FDENV $empty_map<fid, funcdef>, FRAME $empty_map<id, styp>}
@@ -9969,12 +10053,12 @@ def $empty_context
 
 5. Return C
 
-;; ../../../../spec/4a1-typing-context.watsup:91.1-92.23
+;; spec/4a1-typing-context.watsup:91.1-92.23
 def $enter(C)
 
 1. Return C[LOCAL.FRAMES = $empty_map<id, styp> :: C.LOCAL.FRAMES]
 
-;; ../../../../spec/4a1-typing-context.watsup:96.1-97.22
+;; spec/4a1-typing-context.watsup:96.1-97.22
 def $exit(C)
 
 1. Let frame* be C.LOCAL.FRAMES
@@ -9987,24 +10071,24 @@ def $exit(C)
 
 2. Else
 
-  1. Phantom#504
+  1. Phantom#515
 
-;; ../../../../spec/4a1-typing-context.watsup:106.1-107.34
+;; spec/4a1-typing-context.watsup:106.1-107.34
 def $set_blockkind(C, bkind)
 
 1. Return C[BLOCK.KIND = bkind]
 
-;; ../../../../spec/4a1-typing-context.watsup:111.1-112.35
+;; spec/4a1-typing-context.watsup:111.1-112.35
 def $set_localkind(C, lkind)
 
 1. Return C[LOCAL.KIND = lkind]
 
-;; ../../../../spec/4a1-typing-context.watsup:116.1-117.63
+;; spec/4a1-typing-context.watsup:116.1-117.63
 def $set_blockframe
 
 
 
-;; ../../../../spec/4a1-typing-context.watsup:123.1-124.32
+;; spec/4a1-typing-context.watsup:123.1-124.32
 def $get_typ_ret_lkind(lkind)
 
 1. If (lkind matches pattern `FUNC%`), then
@@ -10029,9 +10113,9 @@ def $get_typ_ret_lkind(lkind)
 
 1. Else
 
-  1. Phantom#505
+  1. Phantom#516
 
-;; ../../../../spec/4a1-typing-context.watsup:135.1-135.42
+;; spec/4a1-typing-context.watsup:135.1-135.42
 def $bound_tids(cursor, C)
 
 1. If (cursor matches pattern `GLOBAL`), then
@@ -10046,7 +10130,7 @@ def $bound_tids(cursor, C)
 
   1. Return $union_set<tid>($dom_map<tid, typdef>(C.LOCAL.TDENV), $bound_tids((BLOCK), C))
 
-;; ../../../../spec/4a1-typing-context.watsup:147.1-148.84
+;; spec/4a1-typing-context.watsup:147.1-148.84
 def $add_styp(cursor, C, id, styp)
 
 1. If (cursor matches pattern `GLOBAL`), then
@@ -10059,7 +10143,7 @@ def $add_styp(cursor, C, id, styp)
 
   1. Else
 
-    1. Phantom#509
+    1. Phantom#520
 
 1. Else If (cursor matches pattern `BLOCK`), then
 
@@ -10071,15 +10155,15 @@ def $add_styp(cursor, C, id, styp)
 
   1. Else
 
-    1. Phantom#508
+    1. Phantom#519
 
 1. Else If (cursor matches pattern `LOCAL`), then
 
-  1. Let frame* be C.LOCAL.FRAMES
+  1. Let frame'* be C.LOCAL.FRAMES
 
-  2. If (frame* matches pattern _ :: _), then
+  2. If (frame'* matches pattern _ :: _), then
 
-    1. Let frame_h :: frame_t* be frame*
+    1. Let frame_h :: frame_t* be frame'*
 
     2. If ~$in_set<id>(id, $dom_map<id, styp>(frame_h)), then
 
@@ -10091,13 +10175,13 @@ def $add_styp(cursor, C, id, styp)
 
     2. Else
 
-      1. Phantom#506
+      1. Phantom#517
 
   2. Else
 
-    1. Phantom#507
+    1. Phantom#518
 
-;; ../../../../spec/4a1-typing-context.watsup:162.1-163.88
+;; spec/4a1-typing-context.watsup:162.1-163.88
 def $add_styps(cursor, C, id*, styp*)
 
 1. If (id* matches pattern []), then
@@ -10108,7 +10192,7 @@ def $add_styps(cursor, C, id*, styp*)
 
   1. Else
 
-    1. Phantom#511
+    1. Phantom#522
 
 1. Else If (id* matches pattern _ :: _), then
 
@@ -10126,9 +10210,9 @@ def $add_styps(cursor, C, id*, styp*)
 
   2. Else
 
-    1. Phantom#510
+    1. Phantom#521
 
-;; ../../../../spec/4a1-typing-context.watsup:172.1-172.52
+;; spec/4a1-typing-context.watsup:172.1-172.52
 def $add_param(p, C, pt)
 
 1. Let (id dir typ val?) be pt
@@ -10157,7 +10241,7 @@ def $add_param(p, C, pt)
 
   2. Return C'
 
-;; ../../../../spec/4a1-typing-context.watsup:182.1-182.54
+;; spec/4a1-typing-context.watsup:182.1-182.54
 def $add_params(p, C, paramtyp*)
 
 1. If (paramtyp* matches pattern []), then
@@ -10174,7 +10258,7 @@ def $add_params(p, C, paramtyp*)
 
   4. Return C''
 
-;; ../../../../spec/4a1-typing-context.watsup:191.1-192.80
+;; spec/4a1-typing-context.watsup:191.1-192.80
 def $add_typdef(cursor, C, tid, td)
 
 1. If (cursor matches pattern `GLOBAL`), then
@@ -10187,7 +10271,7 @@ def $add_typdef(cursor, C, tid, td)
 
   1. Else
 
-    1. Phantom#514
+    1. Phantom#525
 
 1. Else If (cursor matches pattern `BLOCK`), then
 
@@ -10199,7 +10283,7 @@ def $add_typdef(cursor, C, tid, td)
 
   1. Else
 
-    1. Phantom#513
+    1. Phantom#524
 
 1. Else If (cursor matches pattern `LOCAL`), then
 
@@ -10211,9 +10295,9 @@ def $add_typdef(cursor, C, tid, td)
 
   1. Else
 
-    1. Phantom#512
+    1. Phantom#523
 
-;; ../../../../spec/4a1-typing-context.watsup:204.1-205.84
+;; spec/4a1-typing-context.watsup:204.1-205.84
 def $add_typdefs(p, C, tid*, typdef*)
 
 1. If (tid* matches pattern []), then
@@ -10224,7 +10308,7 @@ def $add_typdefs(p, C, tid*, typdef*)
 
   1. Else
 
-    1. Phantom#516
+    1. Phantom#527
 
 1. Else If (tid* matches pattern _ :: _), then
 
@@ -10242,9 +10326,9 @@ def $add_typdefs(p, C, tid*, typdef*)
 
   2. Else
 
-    1. Phantom#515
+    1. Phantom#526
 
-;; ../../../../spec/4a1-typing-context.watsup:214.1-214.51
+;; spec/4a1-typing-context.watsup:214.1-214.51
 def $add_tparam(cursor, C, tparam)
 
 1. If (cursor matches pattern `BLOCK`), then
@@ -10259,7 +10343,7 @@ def $add_tparam(cursor, C, tparam)
 
   2. Else
 
-    1. Phantom#519
+    1. Phantom#530
 
 1. Else If (cursor matches pattern `LOCAL`), then
 
@@ -10273,13 +10357,13 @@ def $add_tparam(cursor, C, tparam)
 
   2. Else
 
-    1. Phantom#517
+    1. Phantom#528
 
 1. Else
 
-  1. Phantom#518
+  1. Phantom#529
 
-;; ../../../../spec/4a1-typing-context.watsup:225.1-225.53
+;; spec/4a1-typing-context.watsup:225.1-225.53
 def $add_tparams(p, C, tparam*)
 
 1. If (tparam* matches pattern []), then
@@ -10296,7 +10380,7 @@ def $add_tparams(p, C, tparam*)
 
   4. Return C''
 
-;; ../../../../spec/4a1-typing-context.watsup:234.1-235.80
+;; spec/4a1-typing-context.watsup:234.1-235.80
 def $add_funcdef(cursor, C, fid, fd)
 
 1. If (cursor matches pattern `GLOBAL`), then
@@ -10309,7 +10393,7 @@ def $add_funcdef(cursor, C, fid, fd)
 
   1. Else
 
-    1. Phantom#522
+    1. Phantom#533
 
 1. Else If (cursor matches pattern `BLOCK`), then
 
@@ -10321,13 +10405,13 @@ def $add_funcdef(cursor, C, fid, fd)
 
   1. Else
 
-    1. Phantom#520
+    1. Phantom#531
 
 1. Else
 
-  1. Phantom#521
+  1. Phantom#532
 
-;; ../../../../spec/4a1-typing-context.watsup:244.1-245.80
+;; spec/4a1-typing-context.watsup:244.1-245.80
 def $add_funcdef_non_overload(cursor, C, fid, fd)
 
 1. If (cursor matches pattern `GLOBAL`), then
@@ -10344,7 +10428,7 @@ def $add_funcdef_non_overload(cursor, C, fid, fd)
 
   3. Else
 
-    1. Phantom#525
+    1. Phantom#536
 
 1. Else If (cursor matches pattern `BLOCK`), then
 
@@ -10360,13 +10444,13 @@ def $add_funcdef_non_overload(cursor, C, fid, fd)
 
   3. Else
 
-    1. Phantom#523
+    1. Phantom#534
 
 1. Else
 
-  1. Phantom#524
+  1. Phantom#535
 
-;; ../../../../spec/4a1-typing-context.watsup:260.1-261.80
+;; spec/4a1-typing-context.watsup:260.1-261.80
 def $add_consdef(cursor, C, cid, cd)
 
 1. If (cursor matches pattern `GLOBAL`), then
@@ -10379,13 +10463,13 @@ def $add_consdef(cursor, C, cid, cd)
 
   1. Else
 
-    1. Phantom#526
+    1. Phantom#537
 
 1. Else
 
-  1. Phantom#527
+  1. Phantom#538
 
-;; ../../../../spec/4a1-typing-context.watsup:273.1-274.57
+;; spec/4a1-typing-context.watsup:273.1-274.57
 def $find_styp(p', C, name)
 
 1. If (name matches pattern `TOP%`), then
@@ -10396,7 +10480,7 @@ def $find_styp(p', C, name)
 
 1. Else
 
-  1. Phantom#528
+  1. Phantom#539
 
 2. If (p' matches pattern `GLOBAL`), then
 
@@ -10408,7 +10492,7 @@ def $find_styp(p', C, name)
 
   1. Else
 
-    1. Phantom#535
+    1. Phantom#546
 
 2. Else If (p' matches pattern `BLOCK`), then
 
@@ -10416,17 +10500,17 @@ def $find_styp(p', C, name)
 
     1. Let (CURRENT id) be name
 
-    2. Let styp? be $find_map<id, styp>(C.BLOCK.FRAME, id)
+    2. Let styp'? be $find_map<id, styp>(C.BLOCK.FRAME, id)
 
-    3. If (styp? matches pattern (_)), then
+    3. If (styp'? matches pattern (_)), then
 
-      1. Let ?(styp) be styp?
+      1. Let ?(styp) be styp'?
 
       2. Return ?(styp)
 
     3. Else
 
-      1. Phantom#532
+      1. Phantom#543
 
     4. If (?() = $find_map<id, styp>(C.BLOCK.FRAME, id)), then
 
@@ -10434,11 +10518,11 @@ def $find_styp(p', C, name)
 
     4. Else
 
-      1. Phantom#533
+      1. Phantom#544
 
   1. Else
 
-    1. Phantom#534
+    1. Phantom#545
 
 2. Else If (p' matches pattern `LOCAL`), then
 
@@ -10446,17 +10530,17 @@ def $find_styp(p', C, name)
 
     1. Let (CURRENT id) be name
 
-    2. Let styp? be $find_maps<id, styp>(C.LOCAL.FRAMES, id)
+    2. Let styp'? be $find_maps<id, styp>(C.LOCAL.FRAMES, id)
 
-    3. If (styp? matches pattern (_)), then
+    3. If (styp'? matches pattern (_)), then
 
-      1. Let ?(styp) be styp?
+      1. Let ?(styp) be styp'?
 
       2. Return ?(styp)
 
     3. Else
 
-      1. Phantom#529
+      1. Phantom#540
 
     4. If (?() = $find_maps<id, styp>(C.LOCAL.FRAMES, id)), then
 
@@ -10464,36 +10548,36 @@ def $find_styp(p', C, name)
 
     4. Else
 
-      1. Phantom#530
+      1. Phantom#541
 
   1. Else
 
-    1. Phantom#531
+    1. Phantom#542
 
-;; ../../../../spec/4a1-typing-context.watsup:289.1-290.44
+;; spec/4a1-typing-context.watsup:289.1-290.44
 def $find_val(p, C, name)
 
 1. Let styp? be $find_styp(p, C, name)
 
 2. If (styp? matches pattern (_)), then
 
-  1. Let ?((typ dir ctk val?)) be styp?
+  1. Let ?((typ dir ctk val'?)) be styp?
 
-  2. If (val? matches pattern (_)), then
+  2. If (val'? matches pattern (_)), then
 
-    1. Let ?(val) be val?
+    1. Let ?(val) be val'?
 
     2. Return ?(val)
 
   2. Else
 
-    1. Phantom#536
+    1. Phantom#547
 
 2. Else
 
-  1. Phantom#537
+  1. Phantom#548
 
-;; ../../../../spec/4a1-typing-context.watsup:297.1-298.44
+;; spec/4a1-typing-context.watsup:297.1-298.44
 def $find_typdef(p', C, name)
 
 1. If (name matches pattern `TOP%`), then
@@ -10504,7 +10588,7 @@ def $find_typdef(p', C, name)
 
 1. Else
 
-  1. Phantom#538
+  1. Phantom#549
 
 2. If (p' matches pattern `GLOBAL`), then
 
@@ -10516,7 +10600,7 @@ def $find_typdef(p', C, name)
 
   1. Else
 
-    1. Phantom#545
+    1. Phantom#556
 
 2. Else If (p' matches pattern `BLOCK`), then
 
@@ -10534,7 +10618,7 @@ def $find_typdef(p', C, name)
 
     3. Else
 
-      1. Phantom#542
+      1. Phantom#553
 
     4. If (?() = $find_map<tid, typdef>(C.BLOCK.TDENV, id)), then
 
@@ -10542,11 +10626,11 @@ def $find_typdef(p', C, name)
 
     4. Else
 
-      1. Phantom#543
+      1. Phantom#554
 
   1. Else
 
-    1. Phantom#544
+    1. Phantom#555
 
 2. Else If (p' matches pattern `LOCAL`), then
 
@@ -10564,7 +10648,7 @@ def $find_typdef(p', C, name)
 
     3. Else
 
-      1. Phantom#539
+      1. Phantom#550
 
     4. If (?() = $find_map<tid, typdef>(C.LOCAL.TDENV, id)), then
 
@@ -10572,13 +10656,13 @@ def $find_typdef(p', C, name)
 
     4. Else
 
-      1. Phantom#540
+      1. Phantom#551
 
   1. Else
 
-    1. Phantom#541
+    1. Phantom#552
 
-;; ../../../../spec/4a1-typing-context.watsup:313.1-313.28
+;; spec/4a1-typing-context.watsup:313.1-313.28
 def $to_fkey(arg*)
 
 1. If (arg* matches pattern []), then
@@ -10589,23 +10673,23 @@ def $to_fkey(arg*)
 
   1. Let arg_h :: arg_t* be arg*
 
-  2. Let arg be arg_h
+  2. Let arg' be arg_h
 
-  3. If (arg matches pattern `NameA%%`), then
+  3. If (arg' matches pattern `NameA%%`), then
 
-    1. Let (NameA id _expr?) be arg
+    1. Let (NameA id _expr?) be arg'
 
     2. Return ?(id) :: $to_fkey(arg_t*)
 
   3. Else
 
-    1. Phantom#546
+    1. Phantom#557
 
   4. Otherwise
 
     1. Return ?() :: $to_fkey(arg_t*)
 
-;; ../../../../spec/4a1-typing-context.watsup:321.1-322.58
+;; spec/4a1-typing-context.watsup:321.1-322.58
 def $find_funcdef(p', C, name, arg*)
 
 1. If (name matches pattern `TOP%`), then
@@ -10616,7 +10700,7 @@ def $find_funcdef(p', C, name, arg*)
 
 1. Else
 
-  1. Phantom#547
+  1. Phantom#558
 
 2. If (p' matches pattern `GLOBAL`), then
 
@@ -10628,7 +10712,7 @@ def $find_funcdef(p', C, name, arg*)
 
   1. Else
 
-    1. Phantom#552
+    1. Phantom#563
 
 2. Else If (p' matches pattern `BLOCK`), then
 
@@ -10646,7 +10730,7 @@ def $find_funcdef(p', C, name, arg*)
 
     3. Else
 
-      1. Phantom#549
+      1. Phantom#560
 
     4. If (?() = $find_func<funcdef>(id, $to_fkey(arg*), C.BLOCK.FDENV)), then
 
@@ -10654,11 +10738,11 @@ def $find_funcdef(p', C, name, arg*)
 
     4. Else
 
-      1. Phantom#550
+      1. Phantom#561
 
   1. Else
 
-    1. Phantom#551
+    1. Phantom#562
 
 2. Else If (p' matches pattern `LOCAL`), then
 
@@ -10670,9 +10754,9 @@ def $find_funcdef(p', C, name, arg*)
 
   1. Else
 
-    1. Phantom#548
+    1. Phantom#559
 
-;; ../../../../spec/4a1-typing-context.watsup:332.1-333.44
+;; spec/4a1-typing-context.watsup:332.1-333.44
 def $find_funcdef_by_name(p', C, name)
 
 1. If (name matches pattern `TOP%`), then
@@ -10683,7 +10767,7 @@ def $find_funcdef_by_name(p', C, name)
 
 1. Else
 
-  1. Phantom#553
+  1. Phantom#564
 
 2. If (p' matches pattern `GLOBAL`), then
 
@@ -10695,7 +10779,7 @@ def $find_funcdef_by_name(p', C, name)
 
   1. Else
 
-    1. Phantom#558
+    1. Phantom#569
 
 2. Else If (p' matches pattern `BLOCK`), then
 
@@ -10713,7 +10797,7 @@ def $find_funcdef_by_name(p', C, name)
 
     3. Else
 
-      1. Phantom#555
+      1. Phantom#566
 
     4. If (?() = $find_func_by_name(id, C.BLOCK.FDENV)), then
 
@@ -10721,11 +10805,11 @@ def $find_funcdef_by_name(p', C, name)
 
     4. Else
 
-      1. Phantom#556
+      1. Phantom#567
 
   1. Else
 
-    1. Phantom#557
+    1. Phantom#568
 
 2. Else If (p' matches pattern `LOCAL`), then
 
@@ -10737,9 +10821,9 @@ def $find_funcdef_by_name(p', C, name)
 
   1. Else
 
-    1. Phantom#554
+    1. Phantom#565
 
-;; ../../../../spec/4a1-typing-context.watsup:345.1-346.58
+;; spec/4a1-typing-context.watsup:345.1-346.58
 def $find_consdef(p', C, name, arg*)
 
 1. If (name matches pattern `TOP%`), then
@@ -10750,7 +10834,7 @@ def $find_consdef(p', C, name, arg*)
 
 1. Else
 
-  1. Phantom#559
+  1. Phantom#570
 
 2. If (p' matches pattern `GLOBAL`), then
 
@@ -10762,7 +10846,7 @@ def $find_consdef(p', C, name, arg*)
 
   1. Else
 
-    1. Phantom#562
+    1. Phantom#573
 
 2. Else If (p' matches pattern `BLOCK`), then
 
@@ -10774,7 +10858,7 @@ def $find_consdef(p', C, name, arg*)
 
   1. Else
 
-    1. Phantom#561
+    1. Phantom#572
 
 2. Else If (p' matches pattern `LOCAL`), then
 
@@ -10786,71 +10870,71 @@ def $find_consdef(p', C, name, arg*)
 
   1. Else
 
-    1. Phantom#560
+    1. Phantom#571
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:6.1-9.11
+;; spec/4a2-typing-tblctx.watsup:6.1-9.11
 syntax mode = 
    | `NOPRI`()
    | `NOPRILPM%`(nat)
    | `PRI`()
    | `PRILPM`()
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:12.3-15.24
+;; spec/4a2-typing-tblctx.watsup:12.3-15.24
 syntax priority = {`VALUES%`(int*), `INIT%`(bool), `DELTA%`(int), `LARGEST_WINS%`(bool)}
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:18.3-19.17
+;; spec/4a2-typing-tblctx.watsup:18.3-19.17
 syntax entry = {`SIZE%`(int), `CONST%`(bool)}
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:24.14-24.30
+;; spec/4a2-typing-tblctx.watsup:24.14-24.30
 syntax key = (typ, matchkind)
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:25.17-25.42
+;; spec/4a2-typing-tblctx.watsup:25.17-25.42
 syntax action = (name, paramtyp*, argIL*)
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:28.3-32.16
+;; spec/4a2-typing-tblctx.watsup:28.3-32.16
 syntax tblctx = {`KEYS%`(key*), `ACTIONS%`(action*), `PRIORITIES%`(priority), `ENTRIES%`(entry), `MODE%`(mode)}
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:39.1-40.10
+;; spec/4a2-typing-tblctx.watsup:39.1-40.10
 syntax tblstate = 
    | `LPM%`(nat)
    | `NOLPM`()
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:46.1-46.26
+;; spec/4a2-typing-tblctx.watsup:46.1-46.26
 def $empty_pt
 
 1. Return {VALUES [], INIT false, DELTA (1 as int), LARGEST_WINS true}
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:53.1-53.23
+;; spec/4a2-typing-tblctx.watsup:53.1-53.23
 def $empty_et
 
 1. Return {SIZE (0 as int), CONST true}
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:58.1-58.28
+;; spec/4a2-typing-tblctx.watsup:58.1-58.28
 def $empty_tblctx
 
 1. Return {KEYS [], ACTIONS [], PRIORITIES $empty_pt, ENTRIES $empty_et, MODE (NOPRI)}
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:70.1-70.35
+;; spec/4a2-typing-tblctx.watsup:70.1-70.35
 def $add_key(key, tblctx)
 
 1. Return tblctx[KEYS = tblctx.KEYS ++ [key]]
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:74.1-74.41
+;; spec/4a2-typing-tblctx.watsup:74.1-74.41
 def $add_action(action, tblctx)
 
 1. Return tblctx[ACTIONS = tblctx.ACTIONS ++ [action]]
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:78.1-78.40
+;; spec/4a2-typing-tblctx.watsup:78.1-78.40
 def $add_priority(i, tblctx)
 
 1. Return tblctx[PRIORITIES.VALUES = tblctx.PRIORITIES.VALUES ++ [i]]
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:87.1-87.36
+;; spec/4a2-typing-tblctx.watsup:87.1-87.36
 def $get_lpm_prefix(val)
 
 1. Return (LPM $get_lpm_prefix'(val, 0))
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:88.1-88.37
+;; spec/4a2-typing-tblctx.watsup:88.1-88.37
 def $get_lpm_prefix'(val, n_prefix')
 
 1. If (val matches pattern `FBitV%%`), then
@@ -10863,7 +10947,7 @@ def $get_lpm_prefix'(val, n_prefix')
 
   2. Else
 
-    1. Phantom#563
+    1. Phantom#574
 
   3. Let (FBitV w bitstr) be val
 
@@ -10881,11 +10965,11 @@ def $get_lpm_prefix'(val, n_prefix')
 
       1. Else
 
-        1. Phantom#564
+        1. Phantom#575
 
     2. Else
 
-      1. Phantom#565
+      1. Phantom#576
 
     3. If (n_prefix' = 0), then
 
@@ -10899,25 +10983,25 @@ def $get_lpm_prefix'(val, n_prefix')
 
         1. Else
 
-          1. Phantom#566
+          1. Phantom#577
 
       1. Else
 
-        1. Phantom#567
+        1. Phantom#578
 
     3. Else
 
-      1. Phantom#568
+      1. Phantom#579
 
   4. Else
 
-    1. Phantom#569
+    1. Phantom#580
 
 1. Else
 
-  1. Phantom#570
+  1. Phantom#581
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:107.1-107.45
+;; spec/4a2-typing-tblctx.watsup:107.1-107.45
 def $update_mode(text', typ', tblctx)
 
 1. If (text' = "lpm"), then
@@ -10978,7 +11062,7 @@ def $update_mode(text', typ', tblctx)
 
   1. Return tblctx
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:129.1-129.49
+;; spec/4a2-typing-tblctx.watsup:129.1-129.49
 def $update_state(tblstate, tblstate')
 
 1. If (tblstate matches pattern `NOLPM`), then
@@ -11003,32 +11087,40 @@ def $update_state(tblstate, tblstate')
 
   2. Else
 
-    1. Phantom#571
+    1. Phantom#582
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:139.1-139.54
+;; spec/4a2-typing-tblctx.watsup:139.1-139.54
 def $find_action(tblctx, name)
 
 1. Let (name_a, pt_a*, argIL_a*)* be tblctx.ACTIONS
 
 2. Return $assoc_<name, (paramtyp*, argIL*)>(name, (name_a, (pt_a*, argIL_a*))*)
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:145.1-145.38
+;; spec/4a2-typing-tblctx.watsup:145.1-145.38
 def $find_last_priority(tblctx)
 
 1. Let i_pri* be tblctx.PRIORITIES.VALUES
 
 2. Return i_pri*[(|i_pri*| - 1)]
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:154.1-154.38
-def $keys_of_table(tblprop*)
+;; spec/4a2-typing-tblctx.watsup:154.1-154.38
+def $keys_of_table(tblprop''*)
 
-1. If (tblprop* matches pattern []), then
+1. (Let tblprop be tblprop'')*
+
+2. If (tblprop* matches pattern []), then
 
   1. Return []
 
-1. Else If (tblprop* matches pattern _ :: _), then
+2. Else
+
+  1. Phantom#583
+
+3. (Let tblprop' be tblprop'')*
 
-  1. Let tblprop :: tblprop_t* be tblprop*
+4. If (tblprop'* matches pattern _ :: _), then
+
+  1. Let tblprop :: tblprop_t* be tblprop'*
 
   2. If (tblprop matches pattern `KeyP%`), then
 
@@ -11038,24 +11130,42 @@ def $keys_of_table(tblprop*)
 
   2. Else
 
-    1. Phantom#572
+    1. Phantom#584
 
-  3. Let tblprop_h :: tblprop_t* be tblprop*
+4. Else
 
-  4. Otherwise
+  1. Phantom#585
+
+5. If (tblprop* matches pattern _ :: _), then
+
+  1. Let tblprop_h :: tblprop_t* be tblprop*
+
+  2. Otherwise
 
     1. Return $keys_of_table(tblprop_t*)
 
-;; ../../../../spec/4a2-typing-tblctx.watsup:161.1-161.44
-def $actions_of_table(tblprop*)
+5. Else
 
-1. If (tblprop* matches pattern []), then
+  1. Phantom#586
+
+;; spec/4a2-typing-tblctx.watsup:161.1-161.44
+def $actions_of_table(tblprop''*)
+
+1. (Let tblprop be tblprop'')*
+
+2. If (tblprop* matches pattern []), then
 
   1. Return []
 
-1. Else If (tblprop* matches pattern _ :: _), then
+2. Else
+
+  1. Phantom#587
+
+3. (Let tblprop' be tblprop'')*
 
-  1. Let tblprop :: tblprop_t* be tblprop*
+4. If (tblprop'* matches pattern _ :: _), then
+
+  1. Let tblprop :: tblprop_t* be tblprop'*
 
   2. If (tblprop matches pattern `ActionP%`), then
 
@@ -11065,15 +11175,25 @@ def $actions_of_table(tblprop*)
 
   2. Else
 
-    1. Phantom#573
+    1. Phantom#588
+
+4. Else
 
-  3. Let tblprop_h :: tblprop_t* be tblprop*
+  1. Phantom#589
 
-  4. Otherwise
+5. If (tblprop* matches pattern _ :: _), then
+
+  1. Let tblprop_h :: tblprop_t* be tblprop*
+
+  2. Otherwise
 
     1. Return $actions_of_table(tblprop_t*)
 
-;; ../../../../spec/4b-typing-relation.watsup:5.1-5.29
+5. Else
+
+  1. Phantom#590
+
+;; spec/4b-typing-relation.watsup:5.1-5.29
 def $annot(exprIL)
 
 1. If (exprIL matches pattern `ValueE%%`), then
@@ -11202,7 +11322,7 @@ def $annot(exprIL)
 
   2. Return annotIL
 
-;; ../../../../spec/4b-typing-relation.watsup:34.1-36.23
+;; spec/4b-typing-relation.watsup:34.1-36.23
 relation Eval_static: p, C, exprIL''
 
 1. If (exprIL'' matches pattern `ValueE%%`), then
@@ -11215,17 +11335,17 @@ relation Eval_static: p, C, exprIL''
 
   1. Let (NameE name _annotIL) be exprIL''
 
-  2. Let val? be $find_val(p, C, name)
+  2. Let val'? be $find_val(p, C, name)
 
-  3. If (val? matches pattern (_)), then
+  3. If (val'? matches pattern (_)), then
 
-    1. Let ?(val) be val?
+    1. Let ?(val) be val'?
 
     2. Result in val
 
   3. Else
 
-    1. Phantom#587
+    1. Phantom#604
 
 1. Else If (exprIL'' matches pattern `SeqE%%`), then
 
@@ -11297,7 +11417,7 @@ relation Eval_static: p, C, exprIL''
 
   3. Else
 
-    1. Phantom#585
+    1. Phantom#602
 
   4. If (val' = (BoolV false)), then
 
@@ -11307,7 +11427,7 @@ relation Eval_static: p, C, exprIL''
 
   4. Else
 
-    1. Phantom#586
+    1. Phantom#603
 
 1. Else If (exprIL'' matches pattern `CastE%%%`), then
 
@@ -11345,11 +11465,11 @@ relation Eval_static: p, C, exprIL''
 
     2. Else
 
-      1. Phantom#583
+      1. Phantom#600
 
   2. Else
 
-    1. Phantom#584
+    1. Phantom#601
 
 1. Else If (exprIL'' matches pattern `CallMethodE%%%%%`), then
 
@@ -11369,15 +11489,15 @@ relation Eval_static: p, C, exprIL''
 
       1. Else
 
-        1. Phantom#580
+        1. Phantom#597
 
     1. Else
 
-      1. Phantom#581
+      1. Phantom#598
 
   2. Else
 
-    1. Phantom#582
+    1. Phantom#599
 
 1. Else If (exprIL'' matches pattern `CallTypeE%%%%%`), then
 
@@ -11389,11 +11509,11 @@ relation Eval_static: p, C, exprIL''
 
       1. If ((((member = "minSizeInBits") \/ (member = "minSizeInBytes")) \/ (member = "maxSizeInBits")) \/ (member = "maxSizeInBytes")), then
 
-        1. Let typdef? be $find_typdef(p, C, name)
+        1. Let typdef'? be $find_typdef(p, C, name)
 
-        2. If (typdef? matches pattern (_)), then
+        2. If (typdef'? matches pattern (_)), then
 
-          1. Let ?(typdef) be typdef?
+          1. Let ?(typdef) be typdef'?
 
           2. If (typdef has type monotypdef), then
 
@@ -11403,29 +11523,29 @@ relation Eval_static: p, C, exprIL''
 
           2. Else
 
-            1. Phantom#574
+            1. Phantom#591
 
         2. Else
 
-          1. Phantom#575
+          1. Phantom#592
 
       1. Else
 
-        1. Phantom#576
+        1. Phantom#593
 
     1. Else
 
-      1. Phantom#577
+      1. Phantom#594
 
   2. Else
 
-    1. Phantom#578
+    1. Phantom#595
 
 1. Else
 
-  1. Phantom#579
+  1. Phantom#596
 
-;; ../../../../spec/4b-typing-relation.watsup:43.1-45.23
+;; spec/4b-typing-relation.watsup:43.1-45.23
 relation Type_ok: p, C, type''
 
 1. If (type'' matches pattern `VoidT`), then
@@ -11474,11 +11594,11 @@ relation Type_ok: p, C, type''
 
     3. Else
 
-      1. Phantom#599
+      1. Phantom#616
 
   4. Else
 
-    1. Phantom#600
+    1. Phantom#617
 
 1. Else If (type'' matches pattern `FBitT%`), then
 
@@ -11502,11 +11622,11 @@ relation Type_ok: p, C, type''
 
     3. Else
 
-      1. Phantom#597
+      1. Phantom#614
 
   4. Else
 
-    1. Phantom#598
+    1. Phantom#615
 
 1. Else If (type'' matches pattern `VBitT%`), then
 
@@ -11530,11 +11650,11 @@ relation Type_ok: p, C, type''
 
     3. Else
 
-      1. Phantom#595
+      1. Phantom#612
 
   4. Else
 
-    1. Phantom#596
+    1. Phantom#613
 
 1. Else If (type'' matches pattern `StackT%%`), then
 
@@ -11558,7 +11678,7 @@ relation Type_ok: p, C, type''
 
   5. Else
 
-    1. Phantom#594
+    1. Phantom#611
 
 1. Else If (type'' matches pattern `ListT%`), then
 
@@ -11590,11 +11710,11 @@ relation Type_ok: p, C, type''
 
   1. Let (NameT name) be type''
 
-  2. Let typdef? be $find_typdef(p, C, name)
+  2. Let typdef'? be $find_typdef(p, C, name)
 
-  3. If (typdef? matches pattern (_)), then
+  3. If (typdef'? matches pattern (_)), then
 
-    1. Let ?(typdef) be typdef?
+    1. Let ?(typdef) be typdef'?
 
     2. If (typdef has type monotypdef), then
 
@@ -11612,19 +11732,19 @@ relation Type_ok: p, C, type''
 
   3. Else
 
-    1. Phantom#593
+    1. Phantom#610
 
 1. Else If (type'' matches pattern `SpecT%%`), then
 
-  1. Let (SpecT name type*) be type''
+  1. Let (SpecT name type''*) be type''
 
-  2. If (type* matches pattern []), then
+  2. If (type''* matches pattern []), then
 
-    1. Let typdef? be $find_typdef(p, C, name)
+    1. Let typdef'? be $find_typdef(p, C, name)
 
-    2. If (typdef? matches pattern (_)), then
+    2. If (typdef'? matches pattern (_)), then
 
-      1. Let ?(typdef) be typdef?
+      1. Let ?(typdef) be typdef'?
 
       2. If (typdef has type monotypdef), then
 
@@ -11634,23 +11754,21 @@ relation Type_ok: p, C, type''
 
       2. Else
 
-        1. Phantom#588
+        1. Phantom#605
 
     2. Else
 
-      1. Phantom#589
+      1. Phantom#606
 
   2. Else
 
-    1. Phantom#590
-
-  3. Let (SpecT name type''*) be type''
+    1. Phantom#607
 
-  4. Let typdef? be $find_typdef(p, C, name)
+  3. Let typdef'? be $find_typdef(p, C, name)
 
-  5. If (typdef? matches pattern (_)), then
+  4. If (typdef'? matches pattern (_)), then
 
-    1. Let ?(typdef) be typdef?
+    1. Let ?(typdef) be typdef'?
 
     2. If (typdef has type polytypdef), then
 
@@ -11666,11 +11784,11 @@ relation Type_ok: p, C, type''
 
     2. Else
 
-      1. Phantom#591
+      1. Phantom#608
 
-  5. Else
+  4. Else
 
-    1. Phantom#592
+    1. Phantom#609
 
 1. Else If (type'' matches pattern `AnyT`), then
 
@@ -11678,7 +11796,7 @@ relation Type_ok: p, C, type''
 
   2. Result in ((VarT tid) as typ), [tid]
 
-;; ../../../../spec/4b-typing-relation.watsup:48.1-50.20
+;; spec/4b-typing-relation.watsup:48.1-50.20
 relation Sub_expl: typ_a, typ_b
 
 1. If (Sub_expl_canon: $canon_typ(typ_a) <: $canon_typ(typ_b) holds), then
@@ -11687,9 +11805,9 @@ relation Sub_expl: typ_a, typ_b
 
 1. Else
 
-  1. Phantom#601
+  1. Phantom#618
 
-;; ../../../../spec/4b-typing-relation.watsup:51.1-53.20
+;; spec/4b-typing-relation.watsup:51.1-53.20
 relation Sub_expl_canon: typ_a, typ_b
 
 1. If (Type_alpha: typ_a ~~ typ_b holds), then
@@ -11704,52 +11822,52 @@ relation Sub_expl_canon: typ_a, typ_b
 
   1. Else
 
-    1. Phantom#602
+    1. Phantom#619
 
-;; ../../../../spec/4b-typing-relation.watsup:54.1-56.20
-relation Sub_expl_canon_neq: typ'', typ'''
+;; spec/4b-typing-relation.watsup:54.1-56.20
+relation Sub_expl_canon_neq: typ''''', typ''''''
 
-1. If (typ'' = ((FBitT 1) as typ)), then
+1. If (typ''''' = ((FBitT 1) as typ)), then
 
-  1. If (typ''' = ((BoolT) as typ)), then
+  1. If (typ'''''' = ((BoolT) as typ)), then
 
     1. The relation holds
 
   1. Else
 
-    1. Phantom#603
+    1. Phantom#620
 
 1. Else
 
-  1. Phantom#604
+  1. Phantom#621
 
-2. If (typ'' = ((BoolT) as typ)), then
+2. If (typ''''' = ((BoolT) as typ)), then
 
-  1. If (typ''' = ((FBitT 1) as typ)), then
+  1. If (typ'''''' = ((FBitT 1) as typ)), then
 
     1. The relation holds
 
   1. Else
 
-    1. Phantom#605
+    1. Phantom#622
 
 2. Else
 
-  1. Phantom#606
+  1. Phantom#623
 
-3. If (typ'' = ((IntT) as typ)), then
+3. If (typ''''' = ((IntT) as typ)), then
 
-  1. If (typ''' = ((BoolT) as typ)), then
+  1. If (typ'''''' = ((BoolT) as typ)), then
 
     1. The relation holds
 
   1. Else
 
-    1. Phantom#607
+    1. Phantom#624
 
-  2. If (typ''' has type numtyp), then
+  2. If (typ'''''' has type numtyp), then
 
-    1. Let numtyp be (typ''' as numtyp)
+    1. Let numtyp be (typ'''''' as numtyp)
 
     2. If (numtyp matches pattern `FBitT%`), then
 
@@ -11765,27 +11883,27 @@ relation Sub_expl_canon_neq: typ'', typ'''
 
     2. Else
 
-      1. Phantom#608
+      1. Phantom#625
 
   2. Else
 
-    1. Phantom#609
+    1. Phantom#626
 
 3. Else
 
-  1. Phantom#610
+  1. Phantom#627
 
-4. If (typ'' has type numtyp), then
+4. If (typ''''' has type numtyp), then
 
-  1. Let numtyp be (typ'' as numtyp)
+  1. Let numtyp be (typ''''' as numtyp)
 
   2. If (numtyp matches pattern `FIntT%`), then
 
     1. Let (FIntT width_a) be numtyp
 
-    2. If (typ''' has type numtyp), then
+    2. If (typ'''''' has type numtyp), then
 
-      1. Let numtyp' be (typ''' as numtyp)
+      1. Let numtyp' be (typ'''''' as numtyp)
 
       2. If (numtyp' matches pattern `FBitT%`), then
 
@@ -11801,29 +11919,29 @@ relation Sub_expl_canon_neq: typ'', typ'''
 
       2. Else
 
-        1. Phantom#669
+        1. Phantom#686
 
     2. Else
 
-      1. Phantom#670
+      1. Phantom#687
 
     3. Let (FIntT width) be numtyp
 
-    4. If (typ''' = ((IntT) as typ)), then
+    4. If (typ'''''' = ((IntT) as typ)), then
 
       1. The relation holds
 
     4. Else
 
-      1. Phantom#671
+      1. Phantom#688
 
   2. Else If (numtyp matches pattern `FBitT%`), then
 
     1. Let (FBitT width_a) be numtyp
 
-    2. If (typ''' has type numtyp), then
+    2. If (typ'''''' has type numtyp), then
 
-      1. Let numtyp' be (typ''' as numtyp)
+      1. Let numtyp' be (typ'''''' as numtyp)
 
       2. If (numtyp' matches pattern `FIntT%`), then
 
@@ -11839,169 +11957,169 @@ relation Sub_expl_canon_neq: typ'', typ'''
 
       2. Else
 
-        1. Phantom#665
+        1. Phantom#682
 
     2. Else
 
-      1. Phantom#666
+      1. Phantom#683
 
     3. Let (FBitT width) be numtyp
 
-    4. If (typ''' = ((IntT) as typ)), then
+    4. If (typ'''''' = ((IntT) as typ)), then
 
       1. The relation holds
 
     4. Else
 
-      1. Phantom#667
+      1. Phantom#684
 
   2. Else
 
-    1. Phantom#668
+    1. Phantom#685
 
-4. Else If (typ'' has type datatyp), then
+4. Else If (typ''''' has type datatyp), then
 
-  1. Let datatyp be (typ'' as datatyp)
+  1. Let datatyp be (typ''''' as datatyp)
 
   2. If (datatyp matches pattern `NewT%%`), then
 
     1. Let (NewT _id typ_a) be datatyp
 
-    2. If (Sub_impl: typ_a << typ''' holds), then
+    2. If (Sub_impl: typ_a << typ'''''' holds), then
 
       1. The relation holds
 
     2. Else
 
-      1. Phantom#664
+      1. Phantom#681
 
   2. Else If (datatyp matches pattern `SEnumT%%%`), then
 
-    1. Let (SEnumT _id typ'' _(member, val)*) be datatyp
+    1. Let (SEnumT _id typ''''' _(member, val)*) be datatyp
 
-    2. If (Sub_impl: typ'' << typ''' holds), then
+    2. If (Sub_impl: typ''''' << typ'''''' holds), then
 
       1. The relation holds
 
     2. Else
 
-      1. Phantom#662
+      1. Phantom#679
 
   2. Else
 
-    1. Phantom#663
+    1. Phantom#680
 
-4. Else If (typ'' has type synthtyp), then
+4. Else If (typ''''' has type synthtyp), then
 
-  1. Let synthtyp be (typ'' as synthtyp)
+  1. Let synthtyp be (typ''''' as synthtyp)
 
   2. If (synthtyp matches pattern `SeqT%`), then
 
-    1. Let (SeqT typ''*) be synthtyp
+    1. Let (SeqT typ'''''*) be synthtyp
 
-    2. If (typ''' has type datatyp), then
+    2. If (typ'''''' has type datatyp), then
 
-      1. Let datatyp be (typ''' as datatyp)
+      1. Let datatyp be (typ'''''' as datatyp)
 
       2. If (datatyp matches pattern `ListT%`), then
 
-        1. Let (ListT typ''') be datatyp
+        1. Let (ListT typ'''''') be datatyp
 
-        2. If ((Sub_expl: typ'' <: typ''' holds))*, then
+        2. If ((Sub_expl: typ''''' <: typ'''''' holds))*, then
 
           1. The relation holds
 
         2. Else
 
-          1. Phantom#659
+          1. Phantom#676
 
       2. Else If (datatyp matches pattern `TupleT%`), then
 
-        1. Let (TupleT typ'''*) be datatyp
+        1. Let (TupleT typ''''''*) be datatyp
 
-        2. If ((Sub_expl: typ'' <: typ''' holds))*, then
+        2. If ((Sub_expl: typ''''' <: typ'''''' holds))*, then
 
           1. The relation holds
 
         2. Else
 
-          1. Phantom#658
+          1. Phantom#675
 
       2. Else If (datatyp matches pattern `StackT%%`), then
 
-        1. Let (StackT typ''' i_size) be datatyp
+        1. Let (StackT typ'''''' i_size) be datatyp
 
-        2. If ((|typ''*| as int) <= i_size), then
+        2. If ((|typ'''''*| as int) <= i_size), then
 
-          1. If ((Sub_expl: typ'' <: typ''' holds))*, then
+          1. If ((Sub_expl: typ''''' <: typ'''''' holds))*, then
 
             1. The relation holds
 
           1. Else
 
-            1. Phantom#656
+            1. Phantom#673
 
         2. Else
 
-          1. Phantom#657
+          1. Phantom#674
 
       2. Else If (datatyp matches pattern `StructT%%`), then
 
-        1. Let (StructT _id (_member, typ''')*) be datatyp
+        1. Let (StructT _id (_member, typ'''''')*) be datatyp
 
-        2. If ((Sub_expl: typ'' <: typ''' holds))*, then
+        2. If ((Sub_expl: typ''''' <: typ'''''' holds))*, then
 
           1. The relation holds
 
         2. Else
 
-          1. Phantom#655
+          1. Phantom#672
 
       2. Else If (datatyp matches pattern `HeaderT%%`), then
 
-        1. Let (HeaderT _id (_member, typ''')*) be datatyp
+        1. Let (HeaderT _id (_member, typ'''''')*) be datatyp
 
-        2. If ((Sub_expl: typ'' <: typ''' holds))*, then
+        2. If ((Sub_expl: typ''''' <: typ'''''' holds))*, then
 
           1. The relation holds
 
         2. Else
 
-          1. Phantom#653
+          1. Phantom#670
 
       2. Else
 
-        1. Phantom#654
+        1. Phantom#671
 
     2. Else
 
-      1. Phantom#660
+      1. Phantom#677
 
   2. Else If (synthtyp matches pattern `RecordT%`), then
 
-    1. Let (RecordT (member_a, typ'')*) be synthtyp
+    1. Let (RecordT (member_a, typ''''')*) be synthtyp
 
-    2. If (typ''' has type datatyp), then
+    2. If (typ'''''' has type datatyp), then
 
-      1. Let datatyp be (typ''' as datatyp)
+      1. Let datatyp be (typ'''''' as datatyp)
 
       2. If (datatyp matches pattern `StructT%%`), then
 
-        1. Let (StructT _id (member_b, typ''')*) be datatyp
+        1. Let (StructT _id (member_b, typ'''''')*) be datatyp
 
         2. If $eq_set<member>(({ member_a* }), ({ member_b* })), then
 
-          1. (Let typ? be $find_map<member, typ>(({ (member_a -> typ'')* }), member_a))*
+          1. (Let typ''? be $find_map<member, typ>(({ (member_a -> typ''''')* }), member_a))*
 
-          2. If ((typ? matches pattern (_)))*, then
+          2. If ((typ''? matches pattern (_)))*, then
 
-            1. (Let ?(typ_a') be typ?)*
+            1. (Let ?(typ_a') be typ''?)*
 
-            2. (Let typ?' be $find_map<member, typ>(({ (member_b -> typ''')* }), member_a))*
+            2. (Let typ'''? be $find_map<member, typ>(({ (member_b -> typ'''''')* }), member_a))*
 
-            3. If ((typ?' matches pattern (_)))*, then
+            3. If ((typ'''? matches pattern (_)))*, then
 
-              1. (Let ?(typ_b') be typ?')*
+              1. (Let ?(typ_b') be typ'''?)*
 
               2. If ((Sub_expl: typ_a' <: typ_b' holds))*, then
 
@@ -12009,37 +12127,37 @@ relation Sub_expl_canon_neq: typ'', typ'''
 
               2. Else
 
-                1. Phantom#648
+                1. Phantom#665
 
             3. Else
 
-              1. Phantom#649
+              1. Phantom#666
 
           2. Else
 
-            1. Phantom#650
+            1. Phantom#667
 
         2. Else
 
-          1. Phantom#651
+          1. Phantom#668
 
       2. Else If (datatyp matches pattern `HeaderT%%`), then
 
-        1. Let (HeaderT _id (member_b, typ''')*) be datatyp
+        1. Let (HeaderT _id (member_b, typ'''''')*) be datatyp
 
         2. If $eq_set<member>(({ member_a* }), ({ member_b* })), then
 
-          1. (Let typ? be $find_map<member, typ>(({ (member_a -> typ'')* }), member_a))*
+          1. (Let typ''? be $find_map<member, typ>(({ (member_a -> typ''''')* }), member_a))*
 
-          2. If ((typ? matches pattern (_)))*, then
+          2. If ((typ''? matches pattern (_)))*, then
 
-            1. (Let ?(typ_a') be typ?)*
+            1. (Let ?(typ_a') be typ''?)*
 
-            2. (Let typ?' be $find_map<member, typ>(({ (member_b -> typ''')* }), member_a))*
+            2. (Let typ'''? be $find_map<member, typ>(({ (member_b -> typ'''''')* }), member_a))*
 
-            3. If ((typ?' matches pattern (_)))*, then
+            3. If ((typ'''? matches pattern (_)))*, then
 
-              1. (Let ?(typ_b') be typ?')*
+              1. (Let ?(typ_b') be typ'''?)*
 
               2. If ((Sub_expl: typ_a' <: typ_b' holds))*, then
 
@@ -12047,45 +12165,45 @@ relation Sub_expl_canon_neq: typ'', typ'''
 
               2. Else
 
-                1. Phantom#643
+                1. Phantom#660
 
             3. Else
 
-              1. Phantom#644
+              1. Phantom#661
 
           2. Else
 
-            1. Phantom#645
+            1. Phantom#662
 
         2. Else
 
-          1. Phantom#646
+          1. Phantom#663
 
       2. Else
 
-        1. Phantom#647
+        1. Phantom#664
 
     2. Else
 
-      1. Phantom#652
+      1. Phantom#669
 
   2. Else If (synthtyp matches pattern `SeqDefaultT%`), then
 
-    1. Let (SeqDefaultT typ''*) be synthtyp
+    1. Let (SeqDefaultT typ'''''*) be synthtyp
 
-    2. If (typ''' has type datatyp), then
+    2. If (typ'''''' has type datatyp), then
 
-      1. Let datatyp be (typ''' as datatyp)
+      1. Let datatyp be (typ'''''' as datatyp)
 
       2. If (datatyp matches pattern `TupleT%`), then
 
-        1. Let (TupleT typ'''*) be datatyp
+        1. Let (TupleT typ''''''*) be datatyp
 
-        2. If (|typ''*| < |typ'''*|), then
+        2. If (|typ'''''*| < |typ''''''*|), then
 
-          1. Let (typ_c*, typ_d*) be $partition_<typ>(typ'''*, |typ''*|)
+          1. Let (typ_c*, typ_d*) be $partition_<typ>(typ''''''*, |typ'''''*|)
 
-          2. If ((Sub_expl: typ'' <: typ_c holds))*, then
+          2. If ((Sub_expl: typ''''' <: typ_c holds))*, then
 
             1. If ($is_deftable(typ_d))*, then
 
@@ -12093,49 +12211,49 @@ relation Sub_expl_canon_neq: typ'', typ'''
 
             1. Else
 
-              1. Phantom#639
+              1. Phantom#656
 
           2. Else
 
-            1. Phantom#640
+            1. Phantom#657
 
         2. Else
 
-          1. Phantom#641
+          1. Phantom#658
 
       2. Else If (datatyp matches pattern `StackT%%`), then
 
-        1. Let (StackT typ''' i_size) be datatyp
+        1. Let (StackT typ'''''' i_size) be datatyp
 
-        2. If ((|typ''*| as int) < i_size), then
+        2. If ((|typ'''''*| as int) < i_size), then
 
-          1. If ((Sub_expl: typ'' <: typ''' holds))*, then
+          1. If ((Sub_expl: typ''''' <: typ'''''' holds))*, then
 
-            1. If $is_deftable(typ'''), then
+            1. If $is_deftable(typ''''''), then
 
               1. The relation holds
 
             1. Else
 
-              1. Phantom#636
+              1. Phantom#653
 
           1. Else
 
-            1. Phantom#637
+            1. Phantom#654
 
         2. Else
 
-          1. Phantom#638
+          1. Phantom#655
 
       2. Else If (datatyp matches pattern `StructT%%`), then
 
-        1. Let (StructT _id (_member, typ''')*) be datatyp
+        1. Let (StructT _id (_member, typ'''''')*) be datatyp
 
-        2. If (|typ''*| < |typ'''*|), then
+        2. If (|typ'''''*| < |typ''''''*|), then
 
-          1. Let (typ_c*, typ_d*) be $partition_<typ>(typ'''*, |typ''*|)
+          1. Let (typ_c*, typ_d*) be $partition_<typ>(typ''''''*, |typ'''''*|)
 
-          2. If ((Sub_expl: typ'' <: typ_c holds))*, then
+          2. If ((Sub_expl: typ''''' <: typ_c holds))*, then
 
             1. If ($is_deftable(typ_d))*, then
 
@@ -12143,25 +12261,25 @@ relation Sub_expl_canon_neq: typ'', typ'''
 
             1. Else
 
-              1. Phantom#633
+              1. Phantom#650
 
           2. Else
 
-            1. Phantom#634
+            1. Phantom#651
 
         2. Else
 
-          1. Phantom#635
+          1. Phantom#652
 
       2. Else If (datatyp matches pattern `HeaderT%%`), then
 
-        1. Let (HeaderT _id (_member, typ''')*) be datatyp
+        1. Let (HeaderT _id (_member, typ'''''')*) be datatyp
 
-        2. If (|typ''*| < |typ'''*|), then
+        2. If (|typ'''''*| < |typ''''''*|), then
 
-          1. Let (typ_c*, typ_d*) be $partition_<typ>(typ'''*, |typ''*|)
+          1. Let (typ_c*, typ_d*) be $partition_<typ>(typ''''''*, |typ'''''*|)
 
-          2. If ((Sub_expl: typ'' <: typ_c holds))*, then
+          2. If ((Sub_expl: typ''''' <: typ_c holds))*, then
 
             1. If ($is_deftable(typ_d))*, then
 
@@ -12169,59 +12287,59 @@ relation Sub_expl_canon_neq: typ'', typ'''
 
             1. Else
 
-              1. Phantom#629
+              1. Phantom#646
 
           2. Else
 
-            1. Phantom#630
+            1. Phantom#647
 
         2. Else
 
-          1. Phantom#631
+          1. Phantom#648
 
       2. Else
 
-        1. Phantom#632
+        1. Phantom#649
 
     2. Else
 
-      1. Phantom#642
+      1. Phantom#659
 
   2. Else If (synthtyp matches pattern `RecordDefaultT%`), then
 
-    1. Let (RecordDefaultT (member_a, typ'')*) be synthtyp
+    1. Let (RecordDefaultT (member_a, typ''''')*) be synthtyp
 
-    2. If (typ''' has type datatyp), then
+    2. If (typ'''''' has type datatyp), then
 
-      1. Let datatyp be (typ''' as datatyp)
+      1. Let datatyp be (typ'''''' as datatyp)
 
       2. If (datatyp matches pattern `StructT%%`), then
 
-        1. Let (StructT _id (member_b, typ''')*) be datatyp
+        1. Let (StructT _id (member_b, typ'''''')*) be datatyp
 
         2. If $sub_set<member>(({ member_a* }), ({ member_b* })), then
 
           1. Let ({ member_c* }) be $diff_set<member>(({ member_b* }), ({ member_a* }))
 
-          2. (Let typ? be $find_map<member, typ>(({ (member_a -> typ'')* }), member_a))*
+          2. (Let typ''? be $find_map<member, typ>(({ (member_a -> typ''''')* }), member_a))*
 
-          3. If ((typ? matches pattern (_)))*, then
+          3. If ((typ''? matches pattern (_)))*, then
 
-            1. (Let ?(typ_a') be typ?)*
+            1. (Let ?(typ_a') be typ''?)*
 
-            2. (Let typ?' be $find_map<member, typ>(({ (member_b -> typ''')* }), member_a))*
+            2. (Let typ'''? be $find_map<member, typ>(({ (member_b -> typ'''''')* }), member_a))*
 
-            3. If ((typ?' matches pattern (_)))*, then
+            3. If ((typ'''? matches pattern (_)))*, then
 
-              1. (Let ?(typ_b') be typ?')*
+              1. (Let ?(typ_b') be typ'''?)*
 
               2. If ((Sub_expl: typ_a' <: typ_b' holds))*, then
 
-                1. (Let typ?'' be $find_map<member, typ>(({ (member_b -> typ''')* }), member_a))*
+                1. (Let typ''''? be $find_map<member, typ>(({ (member_b -> typ'''''')* }), member_a))*
 
-                2. If ((typ?'' matches pattern (_)))*, then
+                2. If ((typ''''? matches pattern (_)))*, then
 
-                  1. (Let ?(typ_c') be typ?'')*
+                  1. (Let ?(typ_c') be typ''''?)*
 
                   2. If ($is_deftable(typ_c'))*, then
 
@@ -12229,55 +12347,55 @@ relation Sub_expl_canon_neq: typ'', typ'''
 
                   2. Else
 
-                    1. Phantom#622
+                    1. Phantom#639
 
                 2. Else
 
-                  1. Phantom#623
+                  1. Phantom#640
 
               2. Else
 
-                1. Phantom#624
+                1. Phantom#641
 
             3. Else
 
-              1. Phantom#625
+              1. Phantom#642
 
           3. Else
 
-            1. Phantom#626
+            1. Phantom#643
 
         2. Else
 
-          1. Phantom#627
+          1. Phantom#644
 
       2. Else If (datatyp matches pattern `HeaderT%%`), then
 
-        1. Let (HeaderT _id (member_b, typ''')*) be datatyp
+        1. Let (HeaderT _id (member_b, typ'''''')*) be datatyp
 
         2. If $sub_set<member>(({ member_a* }), ({ member_b* })), then
 
           1. Let ({ member_c* }) be $diff_set<member>(({ member_b* }), ({ member_a* }))
 
-          2. (Let typ? be $find_map<member, typ>(({ (member_a -> typ'')* }), member_a))*
+          2. (Let typ''? be $find_map<member, typ>(({ (member_a -> typ''''')* }), member_a))*
 
-          3. If ((typ? matches pattern (_)))*, then
+          3. If ((typ''? matches pattern (_)))*, then
 
-            1. (Let ?(typ_a') be typ?)*
+            1. (Let ?(typ_a') be typ''?)*
 
-            2. (Let typ?' be $find_map<member, typ>(({ (member_b -> typ''')* }), member_a))*
+            2. (Let typ'''? be $find_map<member, typ>(({ (member_b -> typ'''''')* }), member_a))*
 
-            3. If ((typ?' matches pattern (_)))*, then
+            3. If ((typ'''? matches pattern (_)))*, then
 
-              1. (Let ?(typ_b') be typ?')*
+              1. (Let ?(typ_b') be typ'''?)*
 
               2. If ((Sub_expl: typ_a' <: typ_b' holds))*, then
 
-                1. (Let typ?'' be $find_map<member, typ>(({ (member_b -> typ''')* }), member_a))*
+                1. (Let typ''''? be $find_map<member, typ>(({ (member_b -> typ'''''')* }), member_a))*
 
-                2. If ((typ?'' matches pattern (_)))*, then
+                2. If ((typ''''? matches pattern (_)))*, then
 
-                  1. (Let ?(typ_c') be typ?'')*
+                  1. (Let ?(typ_c') be typ''''?)*
 
                   2. If ($is_deftable(typ_c'))*, then
 
@@ -12285,147 +12403,147 @@ relation Sub_expl_canon_neq: typ'', typ'''
 
                   2. Else
 
-                    1. Phantom#615
+                    1. Phantom#632
 
                 2. Else
 
-                  1. Phantom#616
+                  1. Phantom#633
 
               2. Else
 
-                1. Phantom#617
+                1. Phantom#634
 
             3. Else
 
-              1. Phantom#618
+              1. Phantom#635
 
           3. Else
 
-            1. Phantom#619
+            1. Phantom#636
 
         2. Else
 
-          1. Phantom#620
+          1. Phantom#637
 
       2. Else
 
-        1. Phantom#621
+        1. Phantom#638
 
     2. Else
 
-      1. Phantom#628
+      1. Phantom#645
 
   2. Else If (synthtyp matches pattern `SetT%`), then
 
-    1. Let (SetT typ'') be synthtyp
+    1. Let (SetT typ''''') be synthtyp
 
-    2. If (typ''' has type synthtyp), then
+    2. If (typ'''''' has type synthtyp), then
 
-      1. Let synthtyp' be (typ''' as synthtyp)
+      1. Let synthtyp' be (typ'''''' as synthtyp)
 
       2. If (synthtyp' matches pattern `SetT%`), then
 
-        1. Let (SetT typ''') be synthtyp'
+        1. Let (SetT typ'''''') be synthtyp'
 
-        2. If (Sub_expl: typ'' <: typ''' holds), then
+        2. If (Sub_expl: typ''''' <: typ'''''' holds), then
 
           1. The relation holds
 
         2. Else
 
-          1. Phantom#611
+          1. Phantom#628
 
       2. Else
 
-        1. Phantom#612
+        1. Phantom#629
 
     2. Else
 
-      1. Phantom#613
+      1. Phantom#630
 
   2. Else
 
-    1. Phantom#614
+    1. Phantom#631
 
 4. Else
 
-  1. Phantom#661
+  1. Phantom#678
 
-5. If (typ''' has type datatyp), then
+5. If (typ'''''' has type datatyp), then
 
-  1. Let datatyp be (typ''' as datatyp)
+  1. Let datatyp be (typ'''''' as datatyp)
 
   2. If (datatyp matches pattern `NewT%%`), then
 
-    1. Let (NewT _id typ''') be datatyp
+    1. Let (NewT _id typ'''''') be datatyp
 
-    2. If (Sub_impl: typ'' << typ''' holds), then
+    2. If (Sub_impl: typ''''' << typ'''''' holds), then
 
       1. The relation holds
 
     2. Else
 
-      1. Phantom#677
+      1. Phantom#694
 
   2. Else If (datatyp matches pattern `SEnumT%%%`), then
 
-    1. Let (SEnumT _id typ''' _(member, val)*) be datatyp
+    1. Let (SEnumT _id typ'''''' _(member, val)*) be datatyp
 
-    2. If (Sub_impl: typ'' << typ''' holds), then
+    2. If (Sub_impl: typ''''' << typ'''''' holds), then
 
       1. The relation holds
 
     2. Else
 
-      1. Phantom#675
+      1. Phantom#692
 
   2. Else
 
-    1. Phantom#676
+    1. Phantom#693
 
-5. Else If (typ''' has type synthtyp), then
+5. Else If (typ'''''' has type synthtyp), then
 
-  1. Let synthtyp be (typ''' as synthtyp)
+  1. Let synthtyp be (typ'''''' as synthtyp)
 
   2. If (synthtyp matches pattern `SetT%`), then
 
-    1. Let (SetT typ''') be synthtyp
+    1. Let (SetT typ'''''') be synthtyp
 
-    2. If (Sub_expl: typ'' <: typ''' holds), then
+    2. If (Sub_expl: typ''''' <: typ'''''' holds), then
 
       1. The relation holds
 
     2. Else
 
-      1. Phantom#672
+      1. Phantom#689
 
   2. Else
 
-    1. Phantom#673
+    1. Phantom#690
 
 5. Else
 
-  1. Phantom#674
+  1. Phantom#691
 
-6. If (typ'' = ((DefaultT) as typ)), then
+6. If (typ''''' = ((DefaultT) as typ)), then
 
-  1. If $is_deftable(typ'''), then
+  1. If $is_deftable(typ''''''), then
 
     1. The relation holds
 
   1. Else
 
-    1. Phantom#678
+    1. Phantom#695
 
 6. Else
 
-  1. Phantom#679
+  1. Phantom#696
 
-7. If (typ'' = ((InvalidT) as typ)), then
+7. If (typ''''' = ((InvalidT) as typ)), then
 
-  1. If (typ''' has type datatyp), then
+  1. If (typ'''''' has type datatyp), then
 
-    1. Let datatyp be (typ''' as datatyp)
+    1. Let datatyp be (typ'''''' as datatyp)
 
     2. If (datatyp matches pattern `HeaderT%%`), then
 
@@ -12441,17 +12559,17 @@ relation Sub_expl_canon_neq: typ'', typ'''
 
     2. Else
 
-      1. Phantom#680
+      1. Phantom#697
 
   1. Else
 
-    1. Phantom#681
+    1. Phantom#698
 
 7. Else
 
-  1. Phantom#682
+  1. Phantom#699
 
-;; ../../../../spec/4b-typing-relation.watsup:57.1-59.20
+;; spec/4b-typing-relation.watsup:57.1-59.20
 relation Sub_impl: typ_a, typ_b
 
 1. If (Sub_impl_canon: $canon_typ(typ_a) << $canon_typ(typ_b) holds), then
@@ -12460,9 +12578,9 @@ relation Sub_impl: typ_a, typ_b
 
 1. Else
 
-  1. Phantom#683
+  1. Phantom#700
 
-;; ../../../../spec/4b-typing-relation.watsup:60.1-62.20
+;; spec/4b-typing-relation.watsup:60.1-62.20
 relation Sub_impl_canon: typ_a, typ_b
 
 1. If (Type_alpha: typ_a ~~ typ_b holds), then
@@ -12477,16 +12595,16 @@ relation Sub_impl_canon: typ_a, typ_b
 
   1. Else
 
-    1. Phantom#684
+    1. Phantom#701
 
-;; ../../../../spec/4b-typing-relation.watsup:63.1-65.20
-relation Sub_impl_canon_neq: typ'', typ'''
+;; spec/4b-typing-relation.watsup:63.1-65.20
+relation Sub_impl_canon_neq: typ''''', typ''''''
 
-1. If (typ'' = ((IntT) as typ)), then
+1. If (typ''''' = ((IntT) as typ)), then
 
-  1. If (typ''' has type numtyp), then
+  1. If (typ'''''' has type numtyp), then
 
-    1. Let numtyp be (typ''' as numtyp)
+    1. Let numtyp be (typ'''''' as numtyp)
 
     2. If (numtyp matches pattern `FBitT%`), then
 
@@ -12502,167 +12620,167 @@ relation Sub_impl_canon_neq: typ'', typ'''
 
     2. Else
 
-      1. Phantom#685
+      1. Phantom#702
 
   1. Else
 
-    1. Phantom#686
+    1. Phantom#703
 
 1. Else
 
-  1. Phantom#687
+  1. Phantom#704
 
-2. If (typ'' has type datatyp), then
+2. If (typ''''' has type datatyp), then
 
-  1. Let datatyp be (typ'' as datatyp)
+  1. Let datatyp be (typ''''' as datatyp)
 
   2. If (datatyp matches pattern `SEnumT%%%`), then
 
     1. Let (SEnumT _id typ_a _(member, val)*) be datatyp
 
-    2. If (Sub_impl: typ_a << typ''' holds), then
+    2. If (Sub_impl: typ_a << typ'''''' holds), then
 
       1. The relation holds
 
     2. Else
 
-      1. Phantom#738
+      1. Phantom#755
 
   2. Else
 
-    1. Phantom#739
+    1. Phantom#756
 
-2. Else If (typ'' has type synthtyp), then
+2. Else If (typ''''' has type synthtyp), then
 
-  1. Let synthtyp be (typ'' as synthtyp)
+  1. Let synthtyp be (typ''''' as synthtyp)
 
   2. If (synthtyp matches pattern `SeqT%`), then
 
     1. Let (SeqT typ_a*) be synthtyp
 
-    2. If (typ''' has type datatyp), then
+    2. If (typ'''''' has type datatyp), then
 
-      1. Let datatyp be (typ''' as datatyp)
+      1. Let datatyp be (typ'''''' as datatyp)
 
       2. If (datatyp matches pattern `ListT%`), then
 
-        1. Let (ListT typ''') be datatyp
+        1. Let (ListT typ'''''') be datatyp
 
-        2. If ((Sub_impl: typ_a << typ''' holds))*, then
+        2. If ((Sub_impl: typ_a << typ'''''' holds))*, then
 
           1. The relation holds
 
         2. Else
 
-          1. Phantom#736
+          1. Phantom#753
 
       2. Else If (datatyp matches pattern `TupleT%`), then
 
-        1. Let (TupleT typ'''*) be datatyp
+        1. Let (TupleT typ''''''*) be datatyp
 
-        2. If ((Sub_impl: typ_a << typ''' holds))*, then
+        2. If ((Sub_impl: typ_a << typ'''''' holds))*, then
 
           1. The relation holds
 
         2. Else
 
-          1. Phantom#735
+          1. Phantom#752
 
       2. Else If (datatyp matches pattern `StackT%%`), then
 
-        1. Let (StackT typ''' i_size) be datatyp
+        1. Let (StackT typ'''''' i_size) be datatyp
 
         2. If ((|typ_a*| as int) <= i_size), then
 
-          1. If ((Sub_impl: typ_a << typ''' holds))*, then
+          1. If ((Sub_impl: typ_a << typ'''''' holds))*, then
 
             1. The relation holds
 
           1. Else
 
-            1. Phantom#733
+            1. Phantom#750
 
         2. Else
 
-          1. Phantom#734
+          1. Phantom#751
 
       2. Else If (datatyp matches pattern `StructT%%`), then
 
-        1. Let (StructT _id (_member, typ''')*) be datatyp
+        1. Let (StructT _id (_member, typ'''''')*) be datatyp
 
-        2. If ((Sub_impl: typ_a << typ''' holds))*, then
+        2. If ((Sub_impl: typ_a << typ'''''' holds))*, then
 
           1. The relation holds
 
         2. Else
 
-          1. Phantom#732
+          1. Phantom#749
 
       2. Else If (datatyp matches pattern `HeaderT%%`), then
 
-        1. Let (HeaderT _id (_member, typ''')*) be datatyp
+        1. Let (HeaderT _id (_member, typ'''''')*) be datatyp
 
-        2. If ((Sub_impl: typ_a << typ''' holds))*, then
+        2. If ((Sub_impl: typ_a << typ'''''' holds))*, then
 
           1. The relation holds
 
         2. Else
 
-          1. Phantom#730
+          1. Phantom#747
 
       2. Else
 
-        1. Phantom#731
+        1. Phantom#748
 
-    2. Else If (typ''' has type synthtyp), then
+    2. Else If (typ'''''' has type synthtyp), then
 
-      1. Let synthtyp' be (typ''' as synthtyp)
+      1. Let synthtyp' be (typ'''''' as synthtyp)
 
       2. If (synthtyp' matches pattern `SeqT%`), then
 
-        1. Let (SeqT typ'''*) be synthtyp'
+        1. Let (SeqT typ''''''*) be synthtyp'
 
-        2. If ((Sub_impl: typ_a << typ''' holds))*, then
+        2. If ((Sub_impl: typ_a << typ'''''' holds))*, then
 
           1. The relation holds
 
         2. Else
 
-          1. Phantom#727
+          1. Phantom#744
 
       2. Else
 
-        1. Phantom#728
+        1. Phantom#745
 
     2. Else
 
-      1. Phantom#729
+      1. Phantom#746
 
   2. Else If (synthtyp matches pattern `RecordT%`), then
 
     1. Let (RecordT (member_a, typ_a)*) be synthtyp
 
-    2. If (typ''' has type datatyp), then
+    2. If (typ'''''' has type datatyp), then
 
-      1. Let datatyp be (typ''' as datatyp)
+      1. Let datatyp be (typ'''''' as datatyp)
 
       2. If (datatyp matches pattern `StructT%%`), then
 
-        1. Let (StructT _id (member_b, typ''')*) be datatyp
+        1. Let (StructT _id (member_b, typ'''''')*) be datatyp
 
         2. If $eq_set<member>(({ member_a* }), ({ member_b* })), then
 
-          1. (Let typ? be $find_map<member, typ>(({ (member_a -> typ_a)* }), member_a))*
+          1. (Let typ''? be $find_map<member, typ>(({ (member_a -> typ_a)* }), member_a))*
 
-          2. If ((typ? matches pattern (_)))*, then
+          2. If ((typ''? matches pattern (_)))*, then
 
-            1. (Let ?(typ_a') be typ?)*
+            1. (Let ?(typ_a') be typ''?)*
 
-            2. (Let typ?' be $find_map<member, typ>(({ (member_b -> typ''')* }), member_a))*
+            2. (Let typ'''? be $find_map<member, typ>(({ (member_b -> typ'''''')* }), member_a))*
 
-            3. If ((typ?' matches pattern (_)))*, then
+            3. If ((typ'''? matches pattern (_)))*, then
 
-              1. (Let ?(typ_b') be typ?')*
+              1. (Let ?(typ_b') be typ'''?)*
 
               2. If ((Sub_impl: typ_a' << typ_b' holds))*, then
 
@@ -12670,37 +12788,37 @@ relation Sub_impl_canon_neq: typ'', typ'''
 
               2. Else
 
-                1. Phantom#722
+                1. Phantom#739
 
             3. Else
 
-              1. Phantom#723
+              1. Phantom#740
 
           2. Else
 
-            1. Phantom#724
+            1. Phantom#741
 
         2. Else
 
-          1. Phantom#725
+          1. Phantom#742
 
       2. Else If (datatyp matches pattern `HeaderT%%`), then
 
-        1. Let (HeaderT _id (member_b, typ''')*) be datatyp
+        1. Let (HeaderT _id (member_b, typ'''''')*) be datatyp
 
         2. If $eq_set<member>(({ member_a* }), ({ member_b* })), then
 
-          1. (Let typ? be $find_map<member, typ>(({ (member_a -> typ_a)* }), member_a))*
+          1. (Let typ''? be $find_map<member, typ>(({ (member_a -> typ_a)* }), member_a))*
 
-          2. If ((typ? matches pattern (_)))*, then
+          2. If ((typ''? matches pattern (_)))*, then
 
-            1. (Let ?(typ_a') be typ?)*
+            1. (Let ?(typ_a') be typ''?)*
 
-            2. (Let typ?' be $find_map<member, typ>(({ (member_b -> typ''')* }), member_a))*
+            2. (Let typ'''? be $find_map<member, typ>(({ (member_b -> typ'''''')* }), member_a))*
 
-            3. If ((typ?' matches pattern (_)))*, then
+            3. If ((typ'''? matches pattern (_)))*, then
 
-              1. (Let ?(typ_b') be typ?')*
+              1. (Let ?(typ_b') be typ'''?)*
 
               2. If ((Sub_impl: typ_a' << typ_b' holds))*, then
 
@@ -12708,43 +12826,43 @@ relation Sub_impl_canon_neq: typ'', typ'''
 
               2. Else
 
-                1. Phantom#717
+                1. Phantom#734
 
             3. Else
 
-              1. Phantom#718
+              1. Phantom#735
 
           2. Else
 
-            1. Phantom#719
+            1. Phantom#736
 
         2. Else
 
-          1. Phantom#720
+          1. Phantom#737
 
       2. Else
 
-        1. Phantom#721
+        1. Phantom#738
 
     2. Else
 
-      1. Phantom#726
+      1. Phantom#743
 
   2. Else If (synthtyp matches pattern `SeqDefaultT%`), then
 
     1. Let (SeqDefaultT typ_a*) be synthtyp
 
-    2. If (typ''' has type datatyp), then
+    2. If (typ'''''' has type datatyp), then
 
-      1. Let datatyp be (typ''' as datatyp)
+      1. Let datatyp be (typ'''''' as datatyp)
 
       2. If (datatyp matches pattern `TupleT%`), then
 
-        1. Let (TupleT typ'''*) be datatyp
+        1. Let (TupleT typ''''''*) be datatyp
 
-        2. If (|typ_a*| < |typ'''*|), then
+        2. If (|typ_a*| < |typ''''''*|), then
 
-          1. Let (typ_c*, typ_d*) be $partition_<typ>(typ'''*, |typ_a*|)
+          1. Let (typ_c*, typ_d*) be $partition_<typ>(typ''''''*, |typ_a*|)
 
           2. If ((Sub_impl: typ_a << typ_c holds))*, then
 
@@ -12754,47 +12872,47 @@ relation Sub_impl_canon_neq: typ'', typ'''
 
             1. Else
 
-              1. Phantom#713
+              1. Phantom#730
 
           2. Else
 
-            1. Phantom#714
+            1. Phantom#731
 
         2. Else
 
-          1. Phantom#715
+          1. Phantom#732
 
       2. Else If (datatyp matches pattern `StackT%%`), then
 
-        1. Let (StackT typ''' i_size) be datatyp
+        1. Let (StackT typ'''''' i_size) be datatyp
 
         2. If ((|typ_a*| as int) < i_size), then
 
-          1. If ((Sub_impl: typ_a << typ''' holds))*, then
+          1. If ((Sub_impl: typ_a << typ'''''' holds))*, then
 
-            1. If $is_deftable(typ'''), then
+            1. If $is_deftable(typ''''''), then
 
               1. The relation holds
 
             1. Else
 
-              1. Phantom#710
+              1. Phantom#727
 
           1. Else
 
-            1. Phantom#711
+            1. Phantom#728
 
         2. Else
 
-          1. Phantom#712
+          1. Phantom#729
 
       2. Else If (datatyp matches pattern `StructT%%`), then
 
-        1. Let (StructT _id (_member, typ''')*) be datatyp
+        1. Let (StructT _id (_member, typ'''''')*) be datatyp
 
-        2. If (|typ_a*| < |typ'''*|), then
+        2. If (|typ_a*| < |typ''''''*|), then
 
-          1. Let (typ_c*, typ_d*) be $partition_<typ>(typ'''*, |typ_a*|)
+          1. Let (typ_c*, typ_d*) be $partition_<typ>(typ''''''*, |typ_a*|)
 
           2. If ((Sub_impl: typ_a << typ_c holds))*, then
 
@@ -12804,23 +12922,23 @@ relation Sub_impl_canon_neq: typ'', typ'''
 
             1. Else
 
-              1. Phantom#707
+              1. Phantom#724
 
           2. Else
 
-            1. Phantom#708
+            1. Phantom#725
 
         2. Else
 
-          1. Phantom#709
+          1. Phantom#726
 
       2. Else If (datatyp matches pattern `HeaderT%%`), then
 
-        1. Let (HeaderT _id (_member, typ''')*) be datatyp
+        1. Let (HeaderT _id (_member, typ'''''')*) be datatyp
 
-        2. If (|typ_a*| < |typ'''*|), then
+        2. If (|typ_a*| < |typ''''''*|), then
 
-          1. Let (typ_c*, typ_d*) be $partition_<typ>(typ'''*, |typ_a*|)
+          1. Let (typ_c*, typ_d*) be $partition_<typ>(typ''''''*, |typ_a*|)
 
           2. If ((Sub_impl: typ_a << typ_c holds))*, then
 
@@ -12830,59 +12948,59 @@ relation Sub_impl_canon_neq: typ'', typ'''
 
             1. Else
 
-              1. Phantom#703
+              1. Phantom#720
 
           2. Else
 
-            1. Phantom#704
+            1. Phantom#721
 
         2. Else
 
-          1. Phantom#705
+          1. Phantom#722
 
       2. Else
 
-        1. Phantom#706
+        1. Phantom#723
 
     2. Else
 
-      1. Phantom#716
+      1. Phantom#733
 
   2. Else If (synthtyp matches pattern `RecordDefaultT%`), then
 
     1. Let (RecordDefaultT (member_a, typ_a)*) be synthtyp
 
-    2. If (typ''' has type datatyp), then
+    2. If (typ'''''' has type datatyp), then
 
-      1. Let datatyp be (typ''' as datatyp)
+      1. Let datatyp be (typ'''''' as datatyp)
 
       2. If (datatyp matches pattern `StructT%%`), then
 
-        1. Let (StructT _id (member_b, typ''')*) be datatyp
+        1. Let (StructT _id (member_b, typ'''''')*) be datatyp
 
         2. If $sub_set<member>(({ member_a* }), ({ member_b* })), then
 
           1. Let ({ member_c* }) be $diff_set<member>(({ member_b* }), ({ member_a* }))
 
-          2. (Let typ? be $find_map<member, typ>(({ (member_a -> typ_a)* }), member_a))*
+          2. (Let typ''? be $find_map<member, typ>(({ (member_a -> typ_a)* }), member_a))*
 
-          3. If ((typ? matches pattern (_)))*, then
+          3. If ((typ''? matches pattern (_)))*, then
 
-            1. (Let ?(typ_a') be typ?)*
+            1. (Let ?(typ_a') be typ''?)*
 
-            2. (Let typ?' be $find_map<member, typ>(({ (member_b -> typ''')* }), member_a))*
+            2. (Let typ'''? be $find_map<member, typ>(({ (member_b -> typ'''''')* }), member_a))*
 
-            3. If ((typ?' matches pattern (_)))*, then
+            3. If ((typ'''? matches pattern (_)))*, then
 
-              1. (Let ?(typ_b') be typ?')*
+              1. (Let ?(typ_b') be typ'''?)*
 
               2. If ((Sub_impl: typ_a' << typ_b' holds))*, then
 
-                1. (Let typ?'' be $find_map<member, typ>(({ (member_b -> typ''')* }), member_c))*
+                1. (Let typ''''? be $find_map<member, typ>(({ (member_b -> typ'''''')* }), member_c))*
 
-                2. If ((typ?'' matches pattern (_)))*, then
+                2. If ((typ''''? matches pattern (_)))*, then
 
-                  1. (Let ?(typ_c') be typ?'')*
+                  1. (Let ?(typ_c') be typ''''?)*
 
                   2. If ($is_deftable(typ_c'))*, then
 
@@ -12890,55 +13008,55 @@ relation Sub_impl_canon_neq: typ'', typ'''
 
                   2. Else
 
-                    1. Phantom#695
+                    1. Phantom#712
 
                 2. Else
 
-                  1. Phantom#696
+                  1. Phantom#713
 
               2. Else
 
-                1. Phantom#697
+                1. Phantom#714
 
             3. Else
 
-              1. Phantom#698
+              1. Phantom#715
 
           3. Else
 
-            1. Phantom#699
+            1. Phantom#716
 
         2. Else
 
-          1. Phantom#700
+          1. Phantom#717
 
       2. Else If (datatyp matches pattern `HeaderT%%`), then
 
-        1. Let (HeaderT id (member_b, typ''')*) be datatyp
+        1. Let (HeaderT id (member_b, typ'''''')*) be datatyp
 
         2. If $sub_set<member>(({ member_a* }), ({ member_b* })), then
 
           1. Let ({ member_c* }) be $diff_set<member>(({ member_b* }), ({ member_a* }))
 
-          2. (Let typ? be $find_map<member, typ>(({ (member_a -> typ_a)* }), member_a))*
+          2. (Let typ''? be $find_map<member, typ>(({ (member_a -> typ_a)* }), member_a))*
 
-          3. If ((typ? matches pattern (_)))*, then
+          3. If ((typ''? matches pattern (_)))*, then
 
-            1. (Let ?(typ_a') be typ?)*
+            1. (Let ?(typ_a') be typ''?)*
 
-            2. (Let typ?' be $find_map<member, typ>(({ (member_b -> typ''')* }), member_a))*
+            2. (Let typ'''? be $find_map<member, typ>(({ (member_b -> typ'''''')* }), member_a))*
 
-            3. If ((typ?' matches pattern (_)))*, then
+            3. If ((typ'''? matches pattern (_)))*, then
 
-              1. (Let ?(typ_b') be typ?')*
+              1. (Let ?(typ_b') be typ'''?)*
 
               2. If ((Sub_impl: typ_a' << typ_b' holds))*, then
 
-                1. (Let typ?'' be $find_map<member, typ>(({ (member_b -> typ''')* }), member_c))*
+                1. (Let typ''''? be $find_map<member, typ>(({ (member_b -> typ'''''')* }), member_c))*
 
-                2. If ((typ?'' matches pattern (_)))*, then
+                2. If ((typ''''? matches pattern (_)))*, then
 
-                  1. (Let ?(typ_c') be typ?'')*
+                  1. (Let ?(typ_c') be typ''''?)*
 
                   2. If ($is_deftable(typ_c'))*, then
 
@@ -12946,63 +13064,63 @@ relation Sub_impl_canon_neq: typ'', typ'''
 
                   2. Else
 
-                    1. Phantom#688
+                    1. Phantom#705
 
                 2. Else
 
-                  1. Phantom#689
+                  1. Phantom#706
 
               2. Else
 
-                1. Phantom#690
+                1. Phantom#707
 
             3. Else
 
-              1. Phantom#691
+              1. Phantom#708
 
           3. Else
 
-            1. Phantom#692
+            1. Phantom#709
 
         2. Else
 
-          1. Phantom#693
+          1. Phantom#710
 
       2. Else
 
-        1. Phantom#694
+        1. Phantom#711
 
     2. Else
 
-      1. Phantom#701
+      1. Phantom#718
 
   2. Else
 
-    1. Phantom#702
+    1. Phantom#719
 
 2. Else
 
-  1. Phantom#737
+  1. Phantom#754
 
-3. If (typ'' = ((DefaultT) as typ)), then
+3. If (typ''''' = ((DefaultT) as typ)), then
 
-  1. If $is_deftable(typ'''), then
+  1. If $is_deftable(typ''''''), then
 
     1. The relation holds
 
   1. Else
 
-    1. Phantom#740
+    1. Phantom#757
 
 3. Else
 
-  1. Phantom#741
+  1. Phantom#758
 
-4. If (typ'' = ((InvalidT) as typ)), then
+4. If (typ''''' = ((InvalidT) as typ)), then
 
-  1. If (typ''' has type datatyp), then
+  1. If (typ'''''' has type datatyp), then
 
-    1. Let datatyp be (typ''' as datatyp)
+    1. Let datatyp be (typ'''''' as datatyp)
 
     2. If (datatyp matches pattern `HeaderT%%`), then
 
@@ -13018,17 +13136,17 @@ relation Sub_impl_canon_neq: typ'', typ'''
 
     2. Else
 
-      1. Phantom#742
+      1. Phantom#759
 
   1. Else
 
-    1. Phantom#743
+    1. Phantom#760
 
 4. Else
 
-  1. Phantom#744
+  1. Phantom#761
 
-;; ../../../../spec/4b-typing-relation.watsup:75.1-77.23
+;; spec/4b-typing-relation.watsup:75.1-77.23
 relation Expr_ok: p', C, expr''
 
 1. If (expr'' matches pattern `BoolE%`), then
@@ -13083,7 +13201,7 @@ relation Expr_ok: p', C, expr''
 
   3. Else
 
-    1. Phantom#826
+    1. Phantom#843
 
 1. Else If (expr'' matches pattern `SeqE%`), then
 
@@ -13209,7 +13327,7 @@ relation Expr_ok: p', C, expr''
 
   2. Else
 
-    1. Phantom#809
+    1. Phantom#826
 
   3. If binop is in [(SPLUS), (SMINUS)], then
 
@@ -13231,7 +13349,7 @@ relation Expr_ok: p', C, expr''
 
   3. Else
 
-    1. Phantom#810
+    1. Phantom#827
 
   4. If binop is in [(DIV), (MOD)], then
 
@@ -13265,15 +13383,15 @@ relation Expr_ok: p', C, expr''
 
         2. Else
 
-          1. Phantom#811
+          1. Phantom#828
 
       3. Else
 
-        1. Phantom#812
+        1. Phantom#829
 
     7. Else
 
-      1. Phantom#813
+      1. Phantom#830
 
     8. Let (( _typ ; ctk_r'' )) be $annot(exprIL_r'')
 
@@ -13285,11 +13403,11 @@ relation Expr_ok: p', C, expr''
 
     9. Else
 
-      1. Phantom#814
+      1. Phantom#831
 
   4. Else
 
-    1. Phantom#815
+    1. Phantom#832
 
   5. If binop is in [(SHL), (SHR)], then
 
@@ -13311,11 +13429,11 @@ relation Expr_ok: p', C, expr''
 
     6. Else
 
-      1. Phantom#816
+      1. Phantom#833
 
   5. Else
 
-    1. Phantom#817
+    1. Phantom#834
 
   6. If binop is in [(EQ), (NE)], then
 
@@ -13337,11 +13455,11 @@ relation Expr_ok: p', C, expr''
 
     6. Else
 
-      1. Phantom#818
+      1. Phantom#835
 
   6. Else
 
-    1. Phantom#819
+    1. Phantom#836
 
   7. If binop is in [(LE), (GE), (LT), (GT)], then
 
@@ -13363,7 +13481,7 @@ relation Expr_ok: p', C, expr''
 
   7. Else
 
-    1. Phantom#820
+    1. Phantom#837
 
   8. If binop is in [(BAND), (BXOR), (BOR)], then
 
@@ -13385,7 +13503,7 @@ relation Expr_ok: p', C, expr''
 
   8. Else
 
-    1. Phantom#821
+    1. Phantom#838
 
   9. If (binop matches pattern `CONCAT`), then
 
@@ -13411,7 +13529,7 @@ relation Expr_ok: p', C, expr''
 
     7. Else
 
-      1. Phantom#822
+      1. Phantom#839
 
     8. If $is_fbitt(typ_l'), then
 
@@ -13423,11 +13541,11 @@ relation Expr_ok: p', C, expr''
 
     8. Else
 
-      1. Phantom#823
+      1. Phantom#840
 
   9. Else
 
-    1. Phantom#824
+    1. Phantom#841
 
   10. If binop is in [(LAND), (LOR)], then
 
@@ -13449,7 +13567,7 @@ relation Expr_ok: p', C, expr''
 
   10. Else
 
-    1. Phantom#825
+    1. Phantom#842
 
 1. Else If (expr'' matches pattern `TernE%%%`), then
 
@@ -13479,11 +13597,11 @@ relation Expr_ok: p', C, expr''
 
     6. Else
 
-      1. Phantom#807
+      1. Phantom#824
 
   4. Else
 
-    1. Phantom#808
+    1. Phantom#825
 
 1. Else If (expr'' matches pattern `CastE%%`), then
 
@@ -13505,15 +13623,15 @@ relation Expr_ok: p', C, expr''
 
       3. Else
 
-        1. Phantom#804
+        1. Phantom#821
 
     1. Else
 
-      1. Phantom#805
+      1. Phantom#822
 
   3. Else
 
-    1. Phantom#806
+    1. Phantom#823
 
 1. Else If (expr'' matches pattern `MaskE%%`), then
 
@@ -13587,19 +13705,19 @@ relation Expr_ok: p', C, expr''
 
         4. Else
 
-          1. Phantom#793
+          1. Phantom#810
 
       2. Else
 
-        1. Phantom#794
+        1. Phantom#811
 
     3. Else
 
-      1. Phantom#795
+      1. Phantom#812
 
   6. Else
 
-    1. Phantom#796
+    1. Phantom#813
 
   7. Let (( typ_b ; _ctk )) be $annot(exprIL_b)
 
@@ -13627,19 +13745,19 @@ relation Expr_ok: p', C, expr''
 
         4. Else
 
-          1. Phantom#797
+          1. Phantom#814
 
       2. Else
 
-        1. Phantom#798
+        1. Phantom#815
 
     3. Else
 
-      1. Phantom#799
+      1. Phantom#816
 
   8. Else
 
-    1. Phantom#800
+    1. Phantom#817
 
   9. Let (( typ_i ; ctk_i )) be $annot(exprIL_i)
 
@@ -13661,15 +13779,15 @@ relation Expr_ok: p', C, expr''
 
       2. Else
 
-        1. Phantom#801
+        1. Phantom#818
 
     3. Else
 
-      1. Phantom#802
+      1. Phantom#819
 
   10. Else
 
-    1. Phantom#803
+    1. Phantom#820
 
 1. Else If (expr'' matches pattern `BitAccE%%%`), then
 
@@ -13725,23 +13843,23 @@ relation Expr_ok: p', C, expr''
 
           3. Else
 
-            1. Phantom#788
+            1. Phantom#805
 
         4. Else
 
-          1. Phantom#789
+          1. Phantom#806
 
       5. Else
 
-        1. Phantom#790
+        1. Phantom#807
 
     4. Else
 
-      1. Phantom#791
+      1. Phantom#808
 
   7. Else
 
-    1. Phantom#792
+    1. Phantom#809
 
 1. Else If (expr'' matches pattern `ErrAccE%`), then
 
@@ -13755,17 +13873,17 @@ relation Expr_ok: p', C, expr''
 
   3. Else
 
-    1. Phantom#787
+    1. Phantom#804
 
 1. Else If (expr'' matches pattern `TypeAccE%%`), then
 
   1. Let (TypeAccE name member) be expr''
 
-  2. Let typdef? be $find_typdef(p', C, name)
+  2. Let typdef'? be $find_typdef(p', C, name)
 
-  3. If (typdef? matches pattern (_)), then
+  3. If (typdef'? matches pattern (_)), then
 
-    1. Let ?(typdef) be typdef?
+    1. Let ?(typdef) be typdef'?
 
     2. If (typdef has type monotypdef), then
 
@@ -13787,39 +13905,39 @@ relation Expr_ok: p', C, expr''
 
           2. Else
 
-            1. Phantom#783
+            1. Phantom#800
 
         2. Else If (datatyp matches pattern `SEnumT%%%`), then
 
           1. Let (SEnumT id_t typ_t (member_t, val_t)*) be datatyp
 
-          2. Let val? be $assoc_<member, val>(member, (member_t, val_t)*)
+          2. Let val'? be $assoc_<member, val>(member, (member_t, val_t)*)
 
-          3. If (val? matches pattern (_)), then
+          3. If (val'? matches pattern (_)), then
 
-            1. Let ?(val) be val?
+            1. Let ?(val) be val'?
 
             2. Result in (ValueE (SEnumFieldV id_t member val) (( typ ; (LCTK) )))
 
           3. Else
 
-            1. Phantom#781
+            1. Phantom#798
 
         2. Else
 
-          1. Phantom#782
+          1. Phantom#799
 
       3. Else
 
-        1. Phantom#784
+        1. Phantom#801
 
     2. Else
 
-      1. Phantom#785
+      1. Phantom#802
 
   3. Else
 
-    1. Phantom#786
+    1. Phantom#803
 
 1. Else If (expr'' matches pattern `ExprAccE%%`), then
 
@@ -13845,11 +13963,11 @@ relation Expr_ok: p', C, expr''
 
       2. Else
 
-        1. Phantom#772
+        1. Phantom#789
 
     4. Else
 
-      1. Phantom#773
+      1. Phantom#790
 
   2. Else If (text = "lastIndex"), then
 
@@ -13873,15 +13991,15 @@ relation Expr_ok: p', C, expr''
 
         2. Else
 
-          1. Phantom#769
+          1. Phantom#786
 
       4. Else
 
-        1. Phantom#770
+        1. Phantom#787
 
     1. Else
 
-      1. Phantom#771
+      1. Phantom#788
 
   2. Else If (text = "last"), then
 
@@ -13905,15 +14023,15 @@ relation Expr_ok: p', C, expr''
 
         2. Else
 
-          1. Phantom#766
+          1. Phantom#783
 
       4. Else
 
-        1. Phantom#767
+        1. Phantom#784
 
     1. Else
 
-      1. Phantom#768
+      1. Phantom#785
 
   2. Else If (text = "next"), then
 
@@ -13935,15 +14053,15 @@ relation Expr_ok: p', C, expr''
 
       2. Else
 
-        1. Phantom#763
+        1. Phantom#780
 
     4. Else
 
-      1. Phantom#764
+      1. Phantom#781
 
   2. Else
 
-    1. Phantom#765
+    1. Phantom#782
 
   3. Let (ExprAccE expr_b member) be expr''
 
@@ -13961,53 +14079,53 @@ relation Expr_ok: p', C, expr''
 
       1. Let (StructT id_s (member_s, typ_s)*) be datatyp
 
-      2. Let typ? be $assoc_<member, typ>(member, (member_s, typ_s)*)
+      2. Let typ''? be $assoc_<member, typ>(member, (member_s, typ_s)*)
 
-      3. If (typ? matches pattern (_)), then
+      3. If (typ''? matches pattern (_)), then
 
-        1. Let ?(typ) be typ?
+        1. Let ?(typ) be typ''?
 
         2. Result in (ExprAccE exprIL_b member (( typ ; (DYN) )))
 
       3. Else
 
-        1. Phantom#780
+        1. Phantom#797
 
     2. Else If (datatyp matches pattern `HeaderT%%`), then
 
       1. Let (HeaderT id_h (member_h, typ_h)*) be datatyp
 
-      2. Let typ? be $assoc_<member, typ>(member, (member_h, typ_h)*)
+      2. Let typ''? be $assoc_<member, typ>(member, (member_h, typ_h)*)
 
-      3. If (typ? matches pattern (_)), then
+      3. If (typ''? matches pattern (_)), then
 
-        1. Let ?(typ) be typ?
+        1. Let ?(typ) be typ''?
 
         2. Result in (ExprAccE exprIL_b member (( typ ; (DYN) )))
 
       3. Else
 
-        1. Phantom#779
+        1. Phantom#796
 
     2. Else If (datatyp matches pattern `UnionT%%`), then
 
       1. Let (UnionT id_u (member_u, typ_u)*) be datatyp
 
-      2. Let typ? be $assoc_<member, typ>(member, (member_u, typ_u)*)
+      2. Let typ''? be $assoc_<member, typ>(member, (member_u, typ_u)*)
 
-      3. If (typ? matches pattern (_)), then
+      3. If (typ''? matches pattern (_)), then
 
-        1. Let ?(typ) be typ?
+        1. Let ?(typ) be typ''?
 
         2. Result in (ExprAccE exprIL_b member (( typ ; (DYN) )))
 
       3. Else
 
-        1. Phantom#777
+        1. Phantom#794
 
     2. Else
 
-      1. Phantom#778
+      1. Phantom#795
 
   7. Else If (typ' has type synthtyp), then
 
@@ -14017,25 +14135,25 @@ relation Expr_ok: p', C, expr''
 
       1. Let (TableStructT id_t (member_t, typ_t)*) be synthtyp
 
-      2. Let typ? be $assoc_<member, typ>(member, (member_t, typ_t)*)
+      2. Let typ''? be $assoc_<member, typ>(member, (member_t, typ_t)*)
 
-      3. If (typ? matches pattern (_)), then
+      3. If (typ''? matches pattern (_)), then
 
-        1. Let ?(typ) be typ?
+        1. Let ?(typ) be typ''?
 
         2. Result in (ExprAccE exprIL_b member (( typ ; (DYN) )))
 
       3. Else
 
-        1. Phantom#774
+        1. Phantom#791
 
     2. Else
 
-      1. Phantom#775
+      1. Phantom#792
 
   7. Else
 
-    1. Phantom#776
+    1. Phantom#793
 
 1. Else If (expr'' matches pattern `CallFuncE%%%`), then
 
@@ -14057,7 +14175,7 @@ relation Expr_ok: p', C, expr''
 
   7. Else
 
-    1. Phantom#762
+    1. Phantom#779
 
 1. Else If (expr'' matches pattern `CallMethodE%%%%`), then
 
@@ -14083,31 +14201,29 @@ relation Expr_ok: p', C, expr''
 
             1. Else
 
-              1. Phantom#754
+              1. Phantom#771
 
           1. Else
 
-            1. Phantom#755
+            1. Phantom#772
 
         3. Else
 
-          1. Phantom#756
+          1. Phantom#773
 
       1. Else
 
-        1. Phantom#757
+        1. Phantom#774
 
     1. Else
 
-      1. Phantom#758
+      1. Phantom#775
 
   2. Else
 
-    1. Phantom#759
-
-  3. Let (CallMethodE expr_b member targ* arg*) be expr''
+    1. Phantom#776
 
-  4. If ~member is in ["minSizeInBits", "minSizeInBytes", "maxSizeInBits", "maxSizeInBytes"], then
+  3. If ~member is in ["minSizeInBits", "minSizeInBytes", "maxSizeInBits", "maxSizeInBytes"], then
 
     1. (Type_ok: p' C |- targ : targIL tid_fresh_a*)*
 
@@ -14125,11 +14241,11 @@ relation Expr_ok: p', C, expr''
 
     6. Else
 
-      1. Phantom#760
+      1. Phantom#777
 
-  4. Else
+  3. Else
 
-    1. Phantom#761
+    1. Phantom#778
 
 1. Else If (expr'' matches pattern `CallTypeE%%%%`), then
 
@@ -14139,11 +14255,11 @@ relation Expr_ok: p', C, expr''
 
     1. If (arg* matches pattern []), then
 
-      1. Let typdef? be $find_typdef(p', C, name)
+      1. Let typdef'? be $find_typdef(p', C, name)
 
-      2. If (typdef? matches pattern (_)), then
+      2. If (typdef'? matches pattern (_)), then
 
-        1. Let ?(typdef) be typdef?
+        1. Let ?(typdef) be typdef'?
 
         2. If member is in ["minSizeInBits", "minSizeInBytes", "maxSizeInBits", "maxSizeInBytes"], then
 
@@ -14161,31 +14277,31 @@ relation Expr_ok: p', C, expr''
 
               1. Else
 
-                1. Phantom#747
+                1. Phantom#764
 
             1. Else
 
-              1. Phantom#748
+              1. Phantom#765
 
           3. Else
 
-            1. Phantom#749
+            1. Phantom#766
 
         2. Else
 
-          1. Phantom#750
+          1. Phantom#767
 
       2. Else
 
-        1. Phantom#751
+        1. Phantom#768
 
     1. Else
 
-      1. Phantom#752
+      1. Phantom#769
 
   2. Else
 
-    1. Phantom#753
+    1. Phantom#770
 
 1. Else If (expr'' matches pattern `InstE%%%`), then
 
@@ -14207,11 +14323,11 @@ relation Expr_ok: p', C, expr''
 
   7. Else
 
-    1. Phantom#745
+    1. Phantom#762
 
 1. Else
 
-  1. Phantom#746
+  1. Phantom#763
 
 2. If (p' matches pattern `LOCAL`), then
 
@@ -14233,21 +14349,21 @@ relation Expr_ok: p', C, expr''
 
       3. Else
 
-        1. Phantom#827
+        1. Phantom#844
 
     2. Else
 
-      1. Phantom#828
+      1. Phantom#845
 
   1. Else
 
-    1. Phantom#829
+    1. Phantom#846
 
 2. Else
 
-  1. Phantom#830
+  1. Phantom#847
 
-;; ../../../../spec/4b-typing-relation.watsup:81.1-83.23
+;; spec/4b-typing-relation.watsup:81.1-83.23
 relation Arg_ok: p, C, arg
 
 1. If (arg matches pattern `ExprA%`), then
@@ -14262,11 +14378,11 @@ relation Arg_ok: p, C, arg
 
 1. Else If (arg matches pattern `NameA%%`), then
 
-  1. Let (NameA id expr?) be arg
+  1. Let (NameA id expr'?) be arg
 
-  2. If (expr? matches pattern (_)), then
+  2. If (expr'? matches pattern (_)), then
 
-    1. Let ?(expr) be expr?
+    1. Let ?(expr) be expr'?
 
     2. Expr_ok: p C |- expr : exprIL
 
@@ -14274,15 +14390,25 @@ relation Arg_ok: p, C, arg
 
     4. Result in (NameA id ?(exprIL)), typ
 
-  2. Else If (expr? matches pattern ()), then
+  2. Else
+
+    1. Phantom#848
+
+  3. Let (NameA id expr?) be arg
+
+  4. If (expr? matches pattern ()), then
 
     1. Result in (NameA id ?()), ((AnyT) as typ)
 
+  4. Else
+
+    1. Phantom#849
+
 1. Else If (arg matches pattern `AnyA`), then
 
   1. Result in (AnyA), ((AnyT) as typ)
 
-;; ../../../../spec/4b-typing-relation.watsup:86.1-88.23
+;; spec/4b-typing-relation.watsup:86.1-88.23
 relation Lval_ok: p, C, exprIL
 
 1. If (exprIL matches pattern `NameE%%`), then
@@ -14303,15 +14429,15 @@ relation Lval_ok: p, C, exprIL
 
       1. Else
 
-        1. Phantom#835
+        1. Phantom#854
 
     2. Else
 
-      1. Phantom#836
+      1. Phantom#855
 
   3. Else
 
-    1. Phantom#837
+    1. Phantom#856
 
 1. Else If (exprIL matches pattern `ArrAccE%%%`), then
 
@@ -14323,7 +14449,7 @@ relation Lval_ok: p, C, exprIL
 
   2. Else
 
-    1. Phantom#834
+    1. Phantom#853
 
 1. Else If (exprIL matches pattern `BitAccE%%%%`), then
 
@@ -14335,7 +14461,7 @@ relation Lval_ok: p, C, exprIL
 
   2. Else
 
-    1. Phantom#833
+    1. Phantom#852
 
 1. Else If (exprIL matches pattern `ExprAccE%%%`), then
 
@@ -14347,18 +14473,18 @@ relation Lval_ok: p, C, exprIL
 
   2. Else
 
-    1. Phantom#831
+    1. Phantom#850
 
 1. Else
 
-  1. Phantom#832
+  1. Phantom#851
 
-;; ../../../../spec/4b-typing-relation.watsup:93.18-93.31
+;; spec/4b-typing-relation.watsup:93.18-93.31
 syntax blkctxt = 
    | `INIT`()
    | `NOINIT`()
 
-;; ../../../../spec/4b-typing-relation.watsup:94.1-96.29
+;; spec/4b-typing-relation.watsup:94.1-96.29
 relation Block_ok: cursor, C, f, blkctxt, (BlockB stmt*)
 
 1. If (cursor matches pattern `LOCAL`), then
@@ -14381,9 +14507,9 @@ relation Block_ok: cursor, C, f, blkctxt, (BlockB stmt*)
 
 1. Else
 
-  1. Phantom#838
+  1. Phantom#857
 
-;; ../../../../spec/4b-typing-relation.watsup:97.1-99.26
+;; spec/4b-typing-relation.watsup:97.1-99.26
 relation Stmt_ok: p', C, f, stmt
 
 1. If (stmt matches pattern `EmptyS`), then
@@ -14412,11 +14538,11 @@ relation Stmt_ok: p', C, f, stmt
 
     1. Else
 
-      1. Phantom#852
+      1. Phantom#871
 
   4. Else
 
-    1. Phantom#853
+    1. Phantom#872
 
 1. Else If (stmt matches pattern `IfS%%%`), then
 
@@ -14438,7 +14564,7 @@ relation Stmt_ok: p', C, f, stmt
 
   4. Else
 
-    1. Phantom#851
+    1. Phantom#870
 
 1. Else If (stmt matches pattern `ExitS`), then
 
@@ -14464,7 +14590,7 @@ relation Stmt_ok: p', C, f, stmt
 
   2. Else
 
-    1. Phantom#850
+    1. Phantom#869
 
 1. Else If (stmt matches pattern `CallMethodS%%%%`), then
 
@@ -14488,11 +14614,11 @@ relation Stmt_ok: p', C, f, stmt
 
   1. Let (CallInstS name targ* arg*) be stmt
 
-  2. ConsType_ok: p' C |- name [] [] : ct tid* id*
+  2. ConsType_ok: p' C |- name [] [] : ct tid* id'*
 
   3. If (tid* matches pattern []), then
 
-    1. If (id* matches pattern []), then
+    1. If (id'* matches pattern []), then
 
       1. Inst_ok: p' C [] |- ct [] [] [] : typ targIL* argIL*
 
@@ -14528,39 +14654,39 @@ relation Stmt_ok: p', C, f, stmt
 
                   1. Else
 
-                    1. Phantom#841
+                    1. Phantom#860
 
                 2. Else
 
-                  1. Phantom#842
+                  1. Phantom#861
 
               2. Else
 
-                1. Phantom#843
+                1. Phantom#862
 
             5. Else
 
-              1. Phantom#844
+              1. Phantom#863
 
           2. Else
 
-            1. Phantom#845
+            1. Phantom#864
 
         1. Else
 
-          1. Phantom#846
+          1. Phantom#865
 
       2. Else
 
-        1. Phantom#847
+        1. Phantom#866
 
     1. Else
 
-      1. Phantom#848
+      1. Phantom#867
 
   3. Else
 
-    1. Phantom#849
+    1. Phantom#868
 
 1. Else If (stmt matches pattern `TransS%`), then
 
@@ -14576,7 +14702,7 @@ relation Stmt_ok: p', C, f, stmt
 
   4. Else
 
-    1. Phantom#840
+    1. Phantom#859
 
 1. Else If (stmt matches pattern `DeclS%`), then
 
@@ -14588,7 +14714,7 @@ relation Stmt_ok: p', C, f, stmt
 
 1. Else
 
-  1. Phantom#839
+  1. Phantom#858
 
 2. If (p' matches pattern `LOCAL`), then
 
@@ -14620,15 +14746,15 @@ relation Stmt_ok: p', C, f, stmt
 
           4. Else
 
-            1. Phantom#856
+            1. Phantom#875
 
         2. Else
 
-          1. Phantom#857
+          1. Phantom#876
 
       3. Else
 
-        1. Phantom#858
+        1. Phantom#877
 
       4. Let typ' be $canon_typ(typ)
 
@@ -14642,15 +14768,15 @@ relation Stmt_ok: p', C, f, stmt
 
         2. Else
 
-          1. Phantom#859
+          1. Phantom#878
 
       5. Else
 
-        1. Phantom#860
+        1. Phantom#879
 
     2. Else
 
-      1. Phantom#861
+      1. Phantom#880
 
   1. Else If (stmt matches pattern `BlockS%`), then
 
@@ -14662,11 +14788,11 @@ relation Stmt_ok: p', C, f, stmt
 
   1. Else If (stmt matches pattern `RetS%`), then
 
-    1. Let (RetS expr?) be stmt
+    1. Let (RetS expr'?) be stmt
 
-    2. If (expr? matches pattern (_)), then
+    2. If (expr'? matches pattern (_)), then
 
-      1. Let ?(expr) be expr?
+      1. Let ?(expr) be expr'?
 
       2. Expr_ok: (LOCAL) C |- expr : exprIL
 
@@ -14678,11 +14804,11 @@ relation Stmt_ok: p', C, f, stmt
 
     2. Else
 
-      1. Phantom#854
+      1. Phantom#873
 
   1. Else
 
-    1. Phantom#855
+    1. Phantom#874
 
   2. If (stmt = (RetS ?())), then
 
@@ -14692,17 +14818,17 @@ relation Stmt_ok: p', C, f, stmt
 
     1. Else
 
-      1. Phantom#862
+      1. Phantom#881
 
   2. Else
 
-    1. Phantom#863
+    1. Phantom#882
 
 2. Else
 
-  1. Phantom#864
+  1. Phantom#883
 
-;; ../../../../spec/4b-typing-relation.watsup:100.1-102.26
+;; spec/4b-typing-relation.watsup:100.1-102.26
 relation Stmts_ok: p, C, f, stmt*
 
 1. If (stmt* matches pattern []), then
@@ -14719,12 +14845,14 @@ relation Stmts_ok: p, C, f, stmt*
 
   4. Result in C'', f'', stmtIL_h :: stmtIL_t*
 
-;; ../../../../spec/4b-typing-relation.watsup:107.1-109.23
-relation Param_ok: p, C, (id dir type expr?)
+;; spec/4b-typing-relation.watsup:107.1-109.23
+relation Param_ok: p, C, (id dir type expr''?)
 
-1. If (expr? matches pattern (_)), then
+1. (Let expr' be expr'')?
 
-  1. Let ?(expr) be expr?
+2. If (expr'? matches pattern (_)), then
+
+  1. Let ?(expr) be expr'?
 
   2. Type_ok: p C |- type : typ_p tid_fresh*
 
@@ -14746,17 +14874,23 @@ relation Param_ok: p, C, (id dir type expr?)
 
       1. Else
 
-        1. Phantom#866
+        1. Phantom#884
 
     3. Else
 
-      1. Phantom#867
+      1. Phantom#885
 
   4. Else
 
-    1. Phantom#868
+    1. Phantom#886
+
+2. Else
+
+  1. Phantom#887
 
-1. Else If (expr? matches pattern ()), then
+3. (Let expr be expr'')?
+
+4. If (expr? matches pattern ()), then
 
   1. Type_ok: p C |- type : typ_p tid_fresh*
 
@@ -14768,14 +14902,20 @@ relation Param_ok: p, C, (id dir type expr?)
 
   3. Else
 
-    1. Phantom#865
+    1. Phantom#888
+
+4. Else
+
+  1. Phantom#889
 
-;; ../../../../spec/4b-typing-relation.watsup:110.1-112.23
-relation CParam_ok: p, C, (id dir type expr?)
+;; spec/4b-typing-relation.watsup:110.1-112.23
+relation CParam_ok: p, C, (id dir type expr''?)
 
-1. If (expr? matches pattern (_)), then
+1. (Let expr' be expr'')?
 
-  1. Let ?(expr) be expr?
+2. If (expr'? matches pattern (_)), then
+
+  1. Let ?(expr) be expr'?
 
   2. Type_ok: p C |- type : typ_p tid_fresh*
 
@@ -14797,17 +14937,23 @@ relation CParam_ok: p, C, (id dir type expr?)
 
       1. Else
 
-        1. Phantom#870
+        1. Phantom#890
 
     3. Else
 
-      1. Phantom#871
+      1. Phantom#891
 
   4. Else
 
-    1. Phantom#872
+    1. Phantom#892
 
-1. Else If (expr? matches pattern ()), then
+2. Else
+
+  1. Phantom#893
+
+3. (Let expr be expr'')?
+
+4. If (expr? matches pattern ()), then
 
   1. Type_ok: p C |- type : typ_p tid_fresh*
 
@@ -14819,9 +14965,13 @@ relation CParam_ok: p, C, (id dir type expr?)
 
   3. Else
 
-    1. Phantom#869
+    1. Phantom#894
+
+4. Else
 
-;; ../../../../spec/4b-typing-relation.watsup:116.1-118.23
+  1. Phantom#895
+
+;; spec/4b-typing-relation.watsup:116.1-118.23
 relation Decl_ok: p', C'''', decl''
 
 1. If (decl'' matches pattern `ConstD%%%`), then
@@ -14850,15 +15000,15 @@ relation Decl_ok: p', C'''', decl''
 
       3. Else
 
-        1. Phantom#895
+        1. Phantom#920
 
     1. Else
 
-      1. Phantom#896
+      1. Phantom#921
 
   3. Else
 
-    1. Phantom#897
+    1. Phantom#922
 
 1. Else If (decl'' matches pattern `VarD%%%`), then
 
@@ -14880,19 +15030,25 @@ relation Decl_ok: p', C'''', decl''
 
         1. Else
 
-          1. Phantom#892
+          1. Phantom#912
 
       1. Else
 
-        1. Phantom#893
+        1. Phantom#913
 
     2. Else
 
-      1. Phantom#894
+      1. Phantom#914
+
+  2. Else
+
+    1. Phantom#915
 
-  2. Else If (expr? matches pattern (_)), then
+  3. Let (VarD id type expr'?) be decl''
 
-    1. Let ?(expr) be expr?
+  4. If (expr'? matches pattern (_)), then
+
+    1. Let ?(expr) be expr'?
 
     2. Type_ok: p' C'''' |- type : typ tid*
 
@@ -14912,15 +15068,19 @@ relation Decl_ok: p', C'''', decl''
 
         1. Else
 
-          1. Phantom#889
+          1. Phantom#916
 
       1. Else
 
-        1. Phantom#890
+        1. Phantom#917
 
     3. Else
 
-      1. Phantom#891
+      1. Phantom#918
+
+  4. Else
+
+    1. Phantom#919
 
 1. Else If (decl'' matches pattern `InstD%%%%%`), then
 
@@ -14984,35 +15144,33 @@ relation Decl_ok: p', C'''', decl''
 
               2. Else
 
-                1. Phantom#881
+                1. Phantom#904
 
             10. Else
 
-              1. Phantom#882
+              1. Phantom#905
 
           2. Else
 
-            1. Phantom#883
+            1. Phantom#906
 
         2. Else
 
-          1. Phantom#884
+          1. Phantom#907
 
       2. Else
 
-        1. Phantom#885
+        1. Phantom#908
 
     6. Else
 
-      1. Phantom#886
+      1. Phantom#909
 
   2. Else
 
-    1. Phantom#887
-
-  3. Let (InstD id name_inst targ* arg* decl*) be decl''
+    1. Phantom#910
 
-  4. If (decl* matches pattern []), then
+  3. If (decl''* matches pattern []), then
 
     1. (Type_ok: p' C'''' |- targ : targIL tid_fresh_a*)*
 
@@ -15026,9 +15184,9 @@ relation Decl_ok: p', C'''', decl''
 
     6. Result in C', (InstD id typ name_inst targIL'* argIL'* [])
 
-  4. Else
+  3. Else
 
-    1. Phantom#888
+    1. Phantom#911
 
 1. Else If (decl'' matches pattern `ActionD%%%`), then
 
@@ -15058,15 +15216,15 @@ relation Decl_ok: p', C'''', decl''
 
       4. Else
 
-        1. Phantom#878
+        1. Phantom#901
 
     4. Else
 
-      1. Phantom#879
+      1. Phantom#902
 
   2. Else
 
-    1. Phantom#880
+    1. Phantom#903
 
 1. Else If (decl'' matches pattern `ValueSetD%%%`), then
 
@@ -15092,23 +15250,23 @@ relation Decl_ok: p', C'''', decl''
 
         3. Else
 
-          1. Phantom#873
+          1. Phantom#896
 
       1. Else
 
-        1. Phantom#874
+        1. Phantom#897
 
     2. Else
 
-      1. Phantom#875
+      1. Phantom#898
 
   2. Else
 
-    1. Phantom#876
+    1. Phantom#899
 
 1. Else
 
-  1. Phantom#877
+  1. Phantom#900
 
 2. If (p' matches pattern `GLOBAL`), then
 
@@ -15130,7 +15288,7 @@ relation Decl_ok: p', C'''', decl''
 
     2. Else
 
-      1. Phantom#951
+      1. Phantom#976
 
   1. Else If (decl'' matches pattern `MatchKindD%`), then
 
@@ -15150,7 +15308,7 @@ relation Decl_ok: p', C'''', decl''
 
     2. Else
 
-      1. Phantom#950
+      1. Phantom#975
 
   1. Else If (decl'' matches pattern `StructD%%%`), then
 
@@ -15174,7 +15332,7 @@ relation Decl_ok: p', C'''', decl''
 
     7. Else
 
-      1. Phantom#949
+      1. Phantom#974
 
   1. Else If (decl'' matches pattern `HeaderD%%%`), then
 
@@ -15198,7 +15356,7 @@ relation Decl_ok: p', C'''', decl''
 
     7. Else
 
-      1. Phantom#948
+      1. Phantom#973
 
   1. Else If (decl'' matches pattern `UnionD%%%`), then
 
@@ -15222,7 +15380,7 @@ relation Decl_ok: p', C'''', decl''
 
     7. Else
 
-      1. Phantom#947
+      1. Phantom#972
 
   1. Else If (decl'' matches pattern `EnumD%%`), then
 
@@ -15252,11 +15410,11 @@ relation Decl_ok: p', C'''', decl''
 
       8. Else
 
-        1. Phantom#945
+        1. Phantom#970
 
     2. Else
 
-      1. Phantom#946
+      1. Phantom#971
 
   1. Else If (decl'' matches pattern `SEnumD%%%`), then
 
@@ -15292,23 +15450,23 @@ relation Decl_ok: p', C'''', decl''
 
             6. Else
 
-              1. Phantom#940
+              1. Phantom#965
 
           2. Else
 
-            1. Phantom#941
+            1. Phantom#966
 
         1. Else
 
-          1. Phantom#942
+          1. Phantom#967
 
       2. Else
 
-        1. Phantom#943
+        1. Phantom#968
 
     2. Else
 
-      1. Phantom#944
+      1. Phantom#969
 
   1. Else If (decl'' matches pattern `NewTypeD%%`), then
 
@@ -15336,15 +15494,15 @@ relation Decl_ok: p', C'''', decl''
 
           3. Else
 
-            1. Phantom#937
+            1. Phantom#962
 
         1. Else
 
-          1. Phantom#938
+          1. Phantom#963
 
       3. Else
 
-        1. Phantom#939
+        1. Phantom#964
 
     2. Else If (typedef matches pattern `DeclD%`), then
 
@@ -15358,11 +15516,11 @@ relation Decl_ok: p', C'''', decl''
 
         1. Let [tid_n] be tid*
 
-        2. Let typdef? be $find_typdef((GLOBAL), C', (CURRENT tid_n))
+        2. Let typdef'? be $find_typdef((GLOBAL), C', (CURRENT tid_n))
 
-        3. If (typdef? matches pattern (_)), then
+        3. If (typdef'? matches pattern (_)), then
 
-          1. Let ?(typdef) be typdef?
+          1. Let ?(typdef) be typdef'?
 
           2. If (typdef has type monotypdef), then
 
@@ -15378,7 +15536,7 @@ relation Decl_ok: p', C'''', decl''
 
             3. Else
 
-              1. Phantom#934
+              1. Phantom#959
 
           2. Else If (typdef has type polytypdef), then
 
@@ -15394,15 +15552,15 @@ relation Decl_ok: p', C'''', decl''
 
             3. Else
 
-              1. Phantom#933
+              1. Phantom#958
 
         3. Else
 
-          1. Phantom#935
+          1. Phantom#960
 
       4. Else
 
-        1. Phantom#936
+        1. Phantom#961
 
   1. Else If (decl'' matches pattern `TypeDefD%%`), then
 
@@ -15432,15 +15590,15 @@ relation Decl_ok: p', C'''', decl''
 
           4. Else
 
-            1. Phantom#930
+            1. Phantom#955
 
         1. Else
 
-          1. Phantom#931
+          1. Phantom#956
 
       3. Else
 
-        1. Phantom#932
+        1. Phantom#957
 
     2. Else If (typedef matches pattern `DeclD%`), then
 
@@ -15454,11 +15612,11 @@ relation Decl_ok: p', C'''', decl''
 
         1. Let [tid_d] be tid*
 
-        2. Let typdef? be $find_typdef((GLOBAL), C', (CURRENT tid_d))
+        2. Let typdef'? be $find_typdef((GLOBAL), C', (CURRENT tid_d))
 
-        3. If (typdef? matches pattern (_)), then
+        3. If (typdef'? matches pattern (_)), then
 
-          1. Let ?(typdef) be typdef?
+          1. Let ?(typdef) be typdef'?
 
           2. If (typdef has type monotypdef), then
 
@@ -15474,7 +15632,7 @@ relation Decl_ok: p', C'''', decl''
 
             3. Else
 
-              1. Phantom#927
+              1. Phantom#952
 
           2. Else If (typdef has type polytypdef), then
 
@@ -15490,15 +15648,15 @@ relation Decl_ok: p', C'''', decl''
 
             3. Else
 
-              1. Phantom#926
+              1. Phantom#951
 
         3. Else
 
-          1. Phantom#928
+          1. Phantom#953
 
       4. Else
 
-        1. Phantom#929
+        1. Phantom#954
 
   1. Else If (decl'' matches pattern `FuncD%%%%%`), then
 
@@ -15534,15 +15692,15 @@ relation Decl_ok: p', C'''', decl''
 
         2. Else
 
-          1. Phantom#923
+          1. Phantom#948
 
       6. Else
 
-        1. Phantom#924
+        1. Phantom#949
 
     5. Else
 
-      1. Phantom#925
+      1. Phantom#950
 
   1. Else If (decl'' matches pattern `ExternFuncD%%%%`), then
 
@@ -15574,11 +15732,11 @@ relation Decl_ok: p', C'''', decl''
 
       6. Else
 
-        1. Phantom#921
+        1. Phantom#946
 
     5. Else
 
-      1. Phantom#922
+      1. Phantom#947
 
   1. Else If (decl'' matches pattern `ExternObjectD%%%`), then
 
@@ -15630,7 +15788,7 @@ relation Decl_ok: p', C'''', decl''
 
     8. Else
 
-      1. Phantom#920
+      1. Phantom#945
 
   1. Else If (decl'' matches pattern `ParserD%%%%%`), then
 
@@ -15646,9 +15804,9 @@ relation Decl_ok: p', C'''', decl''
 
       1. Let C_2 be $add_params((BLOCK), C_1, (cparamIL* as paramtyp*))
 
-      2. (Param_ok: (LOCAL) C_2 |- param : paramIL tid*')*
+      2. (Param_ok: (LOCAL) C_2 |- param : paramIL tid'*)*
 
-      3. If ((tid*' matches pattern []))*, then
+      3. If ((tid'* matches pattern []))*, then
 
         1. Let funcdef_apply be ((MonoFD (ParserApplyMethodT (paramIL* as paramtyp*))) as funcdef)
 
@@ -15692,35 +15850,35 @@ relation Decl_ok: p', C'''', decl''
 
                   9. Else
 
-                    1. Phantom#912
+                    1. Phantom#937
 
                 1. Else
 
-                  1. Phantom#913
+                  1. Phantom#938
 
               1. Else
 
-                1. Phantom#914
+                1. Phantom#939
 
             1. Else
 
-              1. Phantom#915
+              1. Phantom#940
 
           4. Else
 
-            1. Phantom#916
+            1. Phantom#941
 
         2. Else
 
-          1. Phantom#917
+          1. Phantom#942
 
       3. Else
 
-        1. Phantom#918
+        1. Phantom#943
 
     5. Else
 
-      1. Phantom#919
+      1. Phantom#944
 
   1. Else If (decl'' matches pattern `ControlTypeD%%%`), then
 
@@ -15746,7 +15904,7 @@ relation Decl_ok: p', C'''', decl''
 
     8. Else
 
-      1. Phantom#911
+      1. Phantom#936
 
   1. Else If (decl'' matches pattern `ControlD%%%%%`), then
 
@@ -15762,9 +15920,9 @@ relation Decl_ok: p', C'''', decl''
 
       1. Let C_2 be $add_params((BLOCK), C_1, (cparamIL* as paramtyp*))
 
-      2. (Param_ok: (LOCAL) C_2 |- param : paramIL tid*')*
+      2. (Param_ok: (LOCAL) C_2 |- param : paramIL tid'*)*
 
-      3. If ((tid*' matches pattern []))*, then
+      3. If ((tid'* matches pattern []))*, then
 
         1. Let funcdef_apply be ((MonoFD (ControlApplyMethodT (paramIL* as paramtyp*))) as funcdef)
 
@@ -15792,19 +15950,19 @@ relation Decl_ok: p', C'''', decl''
 
           8. Else
 
-            1. Phantom#907
+            1. Phantom#932
 
         2. Else
 
-          1. Phantom#908
+          1. Phantom#933
 
       3. Else
 
-        1. Phantom#909
+        1. Phantom#934
 
     5. Else
 
-      1. Phantom#910
+      1. Phantom#935
 
   1. Else If (decl'' matches pattern `PackageTypeD%%%`), then
 
@@ -15842,15 +16000,15 @@ relation Decl_ok: p', C'''', decl''
 
       4. Else
 
-        1. Phantom#904
+        1. Phantom#929
 
     9. Else
 
-      1. Phantom#905
+      1. Phantom#930
 
   1. Else
 
-    1. Phantom#906
+    1. Phantom#931
 
 2. Else If (p' matches pattern `BLOCK`), then
 
@@ -15880,29 +16038,29 @@ relation Decl_ok: p', C'''', decl''
 
           5. Else
 
-            1. Phantom#898
+            1. Phantom#923
 
         1. Else
 
-          1. Phantom#899
+          1. Phantom#924
 
       1. Else
 
-        1. Phantom#900
+        1. Phantom#925
 
     2. Else
 
-      1. Phantom#901
+      1. Phantom#926
 
   1. Else
 
-    1. Phantom#902
+    1. Phantom#927
 
 2. Else
 
-  1. Phantom#903
+  1. Phantom#928
 
-;; ../../../../spec/4b-typing-relation.watsup:119.1-121.23
+;; spec/4b-typing-relation.watsup:119.1-121.23
 relation Decls_ok: p, C, decl*
 
 1. If (decl* matches pattern []), then
@@ -15919,7 +16077,7 @@ relation Decls_ok: p, C, decl*
 
   4. Result in C'', declIL_h :: declIL_t*
 
-;; ../../../../spec/4b-typing-relation.watsup:125.1-127.17
+;; spec/4b-typing-relation.watsup:125.1-127.17
 relation Prog_ok: decl*
 
 1. Let C be $empty_context
@@ -15928,12 +16086,12 @@ relation Prog_ok: decl*
 
 3. Result in C', declIL*
 
-;; ../../../../spec/4b-typing-relation.watsup:131.18-131.29
+;; spec/4b-typing-relation.watsup:131.18-131.29
 syntax actctxt = 
    | `ACT`()
    | `NOACT`()
 
-;; ../../../../spec/4b-typing-relation.watsup:132.1-134.29
+;; spec/4b-typing-relation.watsup:132.1-134.29
 relation Call_convention_ok: p, C, actctxt, (id dir typ_p' val?), (exprIL, typ_a')
 
 1. If (dir matches pattern `IN`), then
@@ -15952,11 +16110,11 @@ relation Call_convention_ok: p, C, actctxt, (id dir typ_p' val?), (exprIL, typ_a
 
     1. Else
 
-      1. Phantom#955
+      1. Phantom#980
 
   1. Else
 
-    1. Phantom#956
+    1. Phantom#981
 
 1. Else If (dir matches pattern `INOUT`), then
 
@@ -15968,15 +16126,15 @@ relation Call_convention_ok: p, C, actctxt, (id dir typ_p' val?), (exprIL, typ_a
 
     1. Else
 
-      1. Phantom#952
+      1. Phantom#977
 
   1. Else
 
-    1. Phantom#953
+    1. Phantom#978
 
 1. Else
 
-  1. Phantom#954
+  1. Phantom#979
 
 2. If (actctxt matches pattern `ACT`), then
 
@@ -15988,7 +16146,7 @@ relation Call_convention_ok: p, C, actctxt, (id dir typ_p' val?), (exprIL, typ_a
 
   1. Else
 
-    1. Phantom#960
+    1. Phantom#985
 
 2. Else If (actctxt matches pattern `NOACT`), then
 
@@ -16004,17 +16162,17 @@ relation Call_convention_ok: p, C, actctxt, (id dir typ_p' val?), (exprIL, typ_a
 
       1. Else
 
-        1. Phantom#957
+        1. Phantom#982
 
     2. Else
 
-      1. Phantom#958
+      1. Phantom#983
 
   1. Else
 
-    1. Phantom#959
+    1. Phantom#984
 
-;; ../../../../spec/4b-typing-relation.watsup:135.1-137.29
+;; spec/4b-typing-relation.watsup:135.1-137.29
 relation Call_convention_arg_ok: p, C, actctxt, pt', (argIL, typ')
 
 1. If (argIL matches pattern `ExprA%`), then
@@ -16027,11 +16185,11 @@ relation Call_convention_arg_ok: p, C, actctxt, pt', (argIL, typ')
 
 1. Else If (argIL matches pattern `NameA%%`), then
 
-  1. Let (NameA id exprIL?) be argIL
+  1. Let (NameA id exprIL''?) be argIL
 
-  2. If (exprIL? matches pattern (_)), then
+  2. If (exprIL''? matches pattern (_)), then
 
-    1. Let ?(exprIL) be exprIL?
+    1. Let ?(exprIL) be exprIL''?
 
     2. Call_convention_ok: p C actctxt |- pt' ~~ (exprIL, typ') : exprIL'
 
@@ -16039,11 +16197,11 @@ relation Call_convention_arg_ok: p, C, actctxt, pt', (argIL, typ')
 
   2. Else
 
-    1. Phantom#961
+    1. Phantom#986
 
 1. Else
 
-  1. Phantom#962
+  1. Phantom#987
 
 2. Let (_id dir _typ _val?) be pt'
 
@@ -16059,7 +16217,7 @@ relation Call_convention_arg_ok: p, C, actctxt, pt', (argIL, typ')
 
     2. Else
 
-      1. Phantom#964
+      1. Phantom#989
 
   1. Else If (argIL matches pattern `AnyA`), then
 
@@ -16067,13 +16225,13 @@ relation Call_convention_arg_ok: p, C, actctxt, pt', (argIL, typ')
 
   1. Else
 
-    1. Phantom#963
+    1. Phantom#988
 
 3. Else
 
-  1. Phantom#965
+  1. Phantom#990
 
-;; ../../../../spec/4b-typing-relation.watsup:143.1-145.23
+;; spec/4b-typing-relation.watsup:143.1-145.23
 relation Call_site_ok: cursor, C, functyp
 
 1. If (cursor matches pattern `BLOCK`), then
@@ -16088,7 +16246,7 @@ relation Call_site_ok: cursor, C, functyp
 
     2. Else
 
-      1. Phantom#985
+      1. Phantom#1010
 
   1. Else If (functyp matches pattern `BuiltinMethodT%%`), then
 
@@ -16100,7 +16258,7 @@ relation Call_site_ok: cursor, C, functyp
 
     2. Else
 
-      1. Phantom#984
+      1. Phantom#1009
 
   1. Else If (functyp matches pattern `ExternMethodT%%`), then
 
@@ -16112,7 +16270,7 @@ relation Call_site_ok: cursor, C, functyp
 
     2. Else
 
-      1. Phantom#983
+      1. Phantom#1008
 
   1. Else If (functyp matches pattern `ExternAbstractMethodT%%`), then
 
@@ -16124,11 +16282,11 @@ relation Call_site_ok: cursor, C, functyp
 
     2. Else
 
-      1. Phantom#981
+      1. Phantom#1006
 
   1. Else
 
-    1. Phantom#982
+    1. Phantom#1007
 
 1. Else If (cursor matches pattern `LOCAL`), then
 
@@ -16142,7 +16300,7 @@ relation Call_site_ok: cursor, C, functyp
 
     2. Else
 
-      1. Phantom#979
+      1. Phantom#1004
 
   1. Else If (functyp matches pattern `FuncT%%`), then
 
@@ -16158,7 +16316,7 @@ relation Call_site_ok: cursor, C, functyp
 
     3. Else
 
-      1. Phantom#977
+      1. Phantom#1002
 
     4. If ((((C.LOCAL.KIND = (ACTION)) \/ (C.LOCAL.KIND = (PARSERSTATE))) \/ (C.LOCAL.KIND = (CONTROLAPPLYMETHOD))) \/ (C.LOCAL.KIND = (TABLEAPPLYMETHOD))), then
 
@@ -16166,7 +16324,7 @@ relation Call_site_ok: cursor, C, functyp
 
     4. Else
 
-      1. Phantom#978
+      1. Phantom#1003
 
   1. Else If (functyp matches pattern `ExternFuncT%%`), then
 
@@ -16182,7 +16340,7 @@ relation Call_site_ok: cursor, C, functyp
 
     3. Else
 
-      1. Phantom#975
+      1. Phantom#1000
 
     4. If ((((C.LOCAL.KIND = (ACTION)) \/ (C.LOCAL.KIND = (PARSERSTATE))) \/ (C.LOCAL.KIND = (CONTROLAPPLYMETHOD))) \/ (C.LOCAL.KIND = (TABLEAPPLYMETHOD))), then
 
@@ -16190,7 +16348,7 @@ relation Call_site_ok: cursor, C, functyp
 
     4. Else
 
-      1. Phantom#976
+      1. Phantom#1001
 
   1. Else If (functyp matches pattern `BuiltinMethodT%%`), then
 
@@ -16212,7 +16370,7 @@ relation Call_site_ok: cursor, C, functyp
 
     3. Else
 
-      1. Phantom#973
+      1. Phantom#998
 
     4. If ((((C.LOCAL.KIND = (ACTION)) \/ (C.LOCAL.KIND = (PARSERSTATE))) \/ (C.LOCAL.KIND = (CONTROLAPPLYMETHOD))) \/ (C.LOCAL.KIND = (TABLEAPPLYMETHOD))), then
 
@@ -16220,7 +16378,7 @@ relation Call_site_ok: cursor, C, functyp
 
     4. Else
 
-      1. Phantom#974
+      1. Phantom#999
 
   1. Else If (functyp matches pattern `ExternMethodT%%`), then
 
@@ -16236,7 +16394,7 @@ relation Call_site_ok: cursor, C, functyp
 
     3. Else
 
-      1. Phantom#971
+      1. Phantom#996
 
     4. If ((((C.LOCAL.KIND = (ACTION)) \/ (C.LOCAL.KIND = (PARSERSTATE))) \/ (C.LOCAL.KIND = (CONTROLAPPLYMETHOD))) \/ (C.LOCAL.KIND = (TABLEAPPLYMETHOD))), then
 
@@ -16244,7 +16402,7 @@ relation Call_site_ok: cursor, C, functyp
 
     4. Else
 
-      1. Phantom#972
+      1. Phantom#997
 
   1. Else If (functyp matches pattern `ExternAbstractMethodT%%`), then
 
@@ -16260,7 +16418,7 @@ relation Call_site_ok: cursor, C, functyp
 
     3. Else
 
-      1. Phantom#969
+      1. Phantom#994
 
     4. If ((((C.LOCAL.KIND = (ACTION)) \/ (C.LOCAL.KIND = (PARSERSTATE))) \/ (C.LOCAL.KIND = (CONTROLAPPLYMETHOD))) \/ (C.LOCAL.KIND = (TABLEAPPLYMETHOD))), then
 
@@ -16268,7 +16426,7 @@ relation Call_site_ok: cursor, C, functyp
 
     4. Else
 
-      1. Phantom#970
+      1. Phantom#995
 
   1. Else If (functyp matches pattern `ParserApplyMethodT%`), then
 
@@ -16280,7 +16438,7 @@ relation Call_site_ok: cursor, C, functyp
 
     2. Else
 
-      1. Phantom#968
+      1. Phantom#993
 
   1. Else If (functyp matches pattern `ControlApplyMethodT%`), then
 
@@ -16292,7 +16450,7 @@ relation Call_site_ok: cursor, C, functyp
 
     2. Else
 
-      1. Phantom#967
+      1. Phantom#992
 
   1. Else If (functyp matches pattern `TableApplyMethodT%`), then
 
@@ -16304,22 +16462,20 @@ relation Call_site_ok: cursor, C, functyp
 
     2. Else
 
-      1. Phantom#966
+      1. Phantom#991
 
 1. Else
 
-  1. Phantom#980
+  1. Phantom#1005
 
-;; ../../../../spec/4b-typing-relation.watsup:146.1-148.35
-relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
+;; spec/4b-typing-relation.watsup:146.1-148.35
+relation Call_ok: p, C, tid'*, functyp, targIL*, arg*, id_deft'*
 
-1. Let targIL* be targIL*'
+1. (Let tid be tid')*
 
-2. Let arg* be arg*'
+2. (Let id_deft be id_deft')*
 
-3. Let id_deft* be id*'
-
-4. If (tid*' matches pattern []), then
+3. If (tid* matches pattern []), then
 
   1. If (functyp matches pattern `ActionT%`), then
 
@@ -16345,19 +16501,19 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
           1. Else
 
-            1. Phantom#990
+            1. Phantom#1015
 
         1. Else
 
-          1. Phantom#991
+          1. Phantom#1016
 
       2. Else
 
-        1. Phantom#992
+        1. Phantom#1017
 
     4. Else
 
-      1. Phantom#993
+      1. Phantom#1018
 
   1. Else If (functyp matches pattern `ExternFuncT%%`), then
 
@@ -16381,27 +16537,27 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
         1. Else
 
-          1. Phantom#986
+          1. Phantom#1011
 
       2. Else
 
-        1. Phantom#987
+        1. Phantom#1012
 
     4. Else
 
-      1. Phantom#988
+      1. Phantom#1013
 
   1. Else
 
-    1. Phantom#989
+    1. Phantom#1014
 
-4. Else
+3. Else
 
-  1. Phantom#994
+  1. Phantom#1019
 
-5. Let tid_fresh* be tid*'
+4. (Let tid_fresh be tid')*
 
-6. If (functyp matches pattern `ExternFuncT%%`), then
+5. If (functyp matches pattern `ExternFuncT%%`), then
 
   1. Let (ExternFuncT pt* typ_r) be functyp
 
@@ -16439,25 +16595,25 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
           1. Else
 
-            1. Phantom#1011
+            1. Phantom#1036
 
         2. Else
 
-          1. Phantom#1012
+          1. Phantom#1037
 
       4. Else
 
-        1. Phantom#1013
+        1. Phantom#1038
 
     4. Else
 
-      1. Phantom#1014
+      1. Phantom#1039
 
   4. Else
 
-    1. Phantom#1015
+    1. Phantom#1040
 
-6. Else If (functyp matches pattern `FuncT%%`), then
+5. Else If (functyp matches pattern `FuncT%%`), then
 
   1. Let (FuncT pt* typ_r) be functyp
 
@@ -16495,25 +16651,25 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
           1. Else
 
-            1. Phantom#1006
+            1. Phantom#1031
 
         2. Else
 
-          1. Phantom#1007
+          1. Phantom#1032
 
       4. Else
 
-        1. Phantom#1008
+        1. Phantom#1033
 
     4. Else
 
-      1. Phantom#1009
+      1. Phantom#1034
 
   4. Else
 
-    1. Phantom#1010
+    1. Phantom#1035
 
-6. Else If (functyp matches pattern `ExternMethodT%%`), then
+5. Else If (functyp matches pattern `ExternMethodT%%`), then
 
   1. Let (ExternMethodT pt* typ_r) be functyp
 
@@ -16551,25 +16707,25 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
           1. Else
 
-            1. Phantom#1001
+            1. Phantom#1026
 
         2. Else
 
-          1. Phantom#1002
+          1. Phantom#1027
 
       4. Else
 
-        1. Phantom#1003
+        1. Phantom#1028
 
     4. Else
 
-      1. Phantom#1004
+      1. Phantom#1029
 
   4. Else
 
-    1. Phantom#1005
+    1. Phantom#1030
 
-6. Else If (functyp matches pattern `ExternAbstractMethodT%%`), then
+5. Else If (functyp matches pattern `ExternAbstractMethodT%%`), then
 
   1. Let (ExternAbstractMethodT pt* typ_r) be functyp
 
@@ -16607,29 +16763,29 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
           1. Else
 
-            1. Phantom#995
+            1. Phantom#1020
 
         2. Else
 
-          1. Phantom#996
+          1. Phantom#1021
 
       4. Else
 
-        1. Phantom#997
+        1. Phantom#1022
 
     4. Else
 
-      1. Phantom#998
+      1. Phantom#1023
 
   4. Else
 
-    1. Phantom#999
+    1. Phantom#1024
 
-6. Else
+5. Else
 
-  1. Phantom#1000
+  1. Phantom#1025
 
-7. If (tid*' matches pattern []), then
+6. If (tid* matches pattern []), then
 
   1. If (functyp matches pattern `FuncT%%`), then
 
@@ -16653,21 +16809,21 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
         1. Else
 
-          1. Phantom#1040
+          1. Phantom#1060
 
       2. Else
 
-        1. Phantom#1041
+        1. Phantom#1061
 
     4. Else
 
-      1. Phantom#1042
+      1. Phantom#1062
 
   1. Else If (functyp matches pattern `BuiltinMethodT%%`), then
 
     1. Let (BuiltinMethodT pt* typ_r) be functyp
 
-    2. If (targIL*' matches pattern []), then
+    2. If (targIL* matches pattern []), then
 
       1. Let pt'* be $filter_default_args(pt*, id_deft*)
 
@@ -16687,19 +16843,19 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
           1. Else
 
-            1. Phantom#1036
+            1. Phantom#1056
 
         2. Else
 
-          1. Phantom#1037
+          1. Phantom#1057
 
       3. Else
 
-        1. Phantom#1038
+        1. Phantom#1058
 
     2. Else
 
-      1. Phantom#1039
+      1. Phantom#1059
 
   1. Else If (functyp matches pattern `ExternMethodT%%`), then
 
@@ -16723,15 +16879,15 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
         1. Else
 
-          1. Phantom#1033
+          1. Phantom#1053
 
       2. Else
 
-        1. Phantom#1034
+        1. Phantom#1054
 
     4. Else
 
-      1. Phantom#1035
+      1. Phantom#1055
 
   1. Else If (functyp matches pattern `ExternAbstractMethodT%%`), then
 
@@ -16755,21 +16911,21 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
         1. Else
 
-          1. Phantom#1030
+          1. Phantom#1050
 
       2. Else
 
-        1. Phantom#1031
+        1. Phantom#1051
 
     4. Else
 
-      1. Phantom#1032
+      1. Phantom#1052
 
   1. Else If (functyp matches pattern `ParserApplyMethodT%`), then
 
     1. Let (ParserApplyMethodT pt*) be functyp
 
-    2. If (targIL*' matches pattern []), then
+    2. If (targIL* matches pattern []), then
 
       1. Let pt'* be $filter_default_args(pt*, id_deft*)
 
@@ -16789,25 +16945,25 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
           1. Else
 
-            1. Phantom#1026
+            1. Phantom#1046
 
         2. Else
 
-          1. Phantom#1027
+          1. Phantom#1047
 
       3. Else
 
-        1. Phantom#1028
+        1. Phantom#1048
 
     2. Else
 
-      1. Phantom#1029
+      1. Phantom#1049
 
   1. Else If (functyp matches pattern `ControlApplyMethodT%`), then
 
     1. Let (ControlApplyMethodT pt*) be functyp
 
-    2. If (targIL*' matches pattern []), then
+    2. If (targIL* matches pattern []), then
 
       1. Let pt'* be $filter_default_args(pt*, id_deft*)
 
@@ -16827,29 +16983,41 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
           1. Else
 
-            1. Phantom#1022
+            1. Phantom#1041
 
         2. Else
 
-          1. Phantom#1023
+          1. Phantom#1042
 
       3. Else
 
-        1. Phantom#1024
+        1. Phantom#1043
 
     2. Else
 
-      1. Phantom#1025
+      1. Phantom#1044
 
-  1. Else If (functyp matches pattern `TableApplyMethodT%`), then
+  1. Else
+
+    1. Phantom#1045
+
+6. Else
+
+  1. Phantom#1063
+
+7. (Let id be id_deft')*
+
+8. If (tid* matches pattern []), then
+
+  1. If (functyp matches pattern `TableApplyMethodT%`), then
 
     1. Let (TableApplyMethodT typ_r) be functyp
 
-    2. If (targIL*' matches pattern []), then
+    2. If (targIL* matches pattern []), then
 
-      1. If (arg*' matches pattern []), then
+      1. If (arg* matches pattern []), then
 
-        1. If (id*' matches pattern []), then
+        1. If (id* matches pattern []), then
 
           1. If (FuncType_wf: $bound_tids(p, C) |- (TableApplyMethodT typ_r) holds), then
 
@@ -16859,33 +17027,33 @@ relation Call_ok: p, C, tid*', functyp, targIL*', arg*', id*'
 
             1. Else
 
-              1. Phantom#1016
+              1. Phantom#1064
 
           1. Else
 
-            1. Phantom#1017
+            1. Phantom#1065
 
         1. Else
 
-          1. Phantom#1018
+          1. Phantom#1066
 
       1. Else
 
-        1. Phantom#1019
+        1. Phantom#1067
 
     2. Else
 
-      1. Phantom#1020
+      1. Phantom#1068
 
   1. Else
 
-    1. Phantom#1021
+    1. Phantom#1069
 
-7. Else
+8. Else
 
-  1. Phantom#1043
+  1. Phantom#1070
 
-;; ../../../../spec/4b-typing-relation.watsup:153.1-155.29
+;; spec/4b-typing-relation.watsup:153.1-155.29
 relation FuncType_ok: p, C, name, targIL*, arg*
 
 1. Let (fid, funcdef, id*)? be $find_funcdef(p, C, name, arg*)
@@ -16900,14 +17068,14 @@ relation FuncType_ok: p, C, name, targIL*, arg*
 
 2. Else
 
-  1. Phantom#1044
+  1. Phantom#1071
 
-;; ../../../../spec/4b-typing-relation.watsup:156.1-158.32
-relation MethodType_ok: p, C, expr_b, member', targIL*', arg*'
+;; spec/4b-typing-relation.watsup:156.1-158.32
+relation MethodType_ok: p, C, expr_b, member', targIL*, arg*
 
-1. If (targIL*' matches pattern []), then
+1. If (targIL* matches pattern []), then
 
-  1. If (arg*' matches pattern []), then
+  1. If (arg* matches pattern []), then
 
     1. Expr_ok: p C |- expr_b : exprIL_b
 
@@ -16917,21 +17085,13 @@ relation MethodType_ok: p, C, expr_b, member', targIL*', arg*'
 
     2. Else
 
-      1. Phantom#1045
+      1. Phantom#1072
 
   1. Else
 
-    1. Phantom#1046
-
-1. Else
-
-  1. Phantom#1047
-
-2. Let arg* be arg*'
-
-3. If (targIL*' matches pattern []), then
+    1. Phantom#1073
 
-  1. If member' is in ["push_front", "pop_front"], then
+  2. If member' is in ["push_front", "pop_front"], then
 
     1. Expr_ok: p C |- expr_b : exprIL_b
 
@@ -16953,17 +17113,17 @@ relation MethodType_ok: p, C, expr_b, member', targIL*', arg*'
 
       2. Else
 
-        1. Phantom#1048
+        1. Phantom#1074
 
     4. Else
 
-      1. Phantom#1049
+      1. Phantom#1075
 
-  1. Else
+  2. Else
 
-    1. Phantom#1050
+    1. Phantom#1076
 
-  2. If member' is in ["setValid", "setInvalid"], then
+  3. If member' is in ["setValid", "setInvalid"], then
 
     1. Expr_ok: p C |- expr_b : exprIL_b
 
@@ -16983,23 +17143,23 @@ relation MethodType_ok: p, C, expr_b, member', targIL*', arg*'
 
       2. Else
 
-        1. Phantom#1051
+        1. Phantom#1077
 
     4. Else
 
-      1. Phantom#1052
+      1. Phantom#1078
 
-  2. Else
+  3. Else
 
-    1. Phantom#1053
+    1. Phantom#1079
 
-3. Else
+1. Else
 
-  1. Phantom#1054
+  1. Phantom#1080
 
-4. If (member' = "isValid"), then
+2. If (member' = "isValid"), then
 
-  1. If (targIL*' matches pattern []), then
+  1. If (targIL* matches pattern []), then
 
     1. Expr_ok: p C |- expr_b : exprIL_b
 
@@ -17025,29 +17185,27 @@ relation MethodType_ok: p, C, expr_b, member', targIL*', arg*'
 
       2. Else
 
-        1. Phantom#1055
+        1. Phantom#1081
 
     4. Else
 
-      1. Phantom#1056
+      1. Phantom#1082
 
   1. Else
 
-    1. Phantom#1057
-
-4. Else
+    1. Phantom#1083
 
-  1. Phantom#1058
+2. Else
 
-5. Let targIL* be targIL*'
+  1. Phantom#1084
 
-6. Expr_ok: p C |- expr_b : exprIL_b
+3. Expr_ok: p C |- expr_b : exprIL_b
 
-7. Let (( typ_b ; _ctk )) be $annot(exprIL_b)
+4. Let (( typ_b ; _ctk )) be $annot(exprIL_b)
 
-8. Let typ be $canon_typ(typ_b)
+5. Let typ be $canon_typ(typ_b)
 
-9. If (typ has type objtyp), then
+6. If (typ has type objtyp), then
 
   1. Let objtyp be (typ as objtyp)
 
@@ -17067,19 +17225,19 @@ relation MethodType_ok: p, C, expr_b, member', targIL*', arg*'
 
     3. Else
 
-      1. Phantom#1059
+      1. Phantom#1085
 
   2. Else
 
-    1. Phantom#1060
+    1. Phantom#1086
 
-9. Else
+6. Else
 
-  1. Phantom#1061
+  1. Phantom#1087
 
-10. If (member' = "apply"), then
+7. If (member' = "apply"), then
 
-  1. If (targIL*' matches pattern []), then
+  1. If (targIL* matches pattern []), then
 
     1. If (typ has type objtyp), then
 
@@ -17113,15 +17271,15 @@ relation MethodType_ok: p, C, expr_b, member', targIL*', arg*'
 
             1. Else
 
-              1. Phantom#1066
+              1. Phantom#1092
 
           2. Else
 
-            1. Phantom#1067
+            1. Phantom#1093
 
         8. Else
 
-          1. Phantom#1068
+          1. Phantom#1094
 
       2. Else If (objtyp matches pattern `ControlT%`), then
 
@@ -17151,25 +17309,25 @@ relation MethodType_ok: p, C, expr_b, member', targIL*', arg*'
 
             1. Else
 
-              1. Phantom#1062
+              1. Phantom#1088
 
           2. Else
 
-            1. Phantom#1063
+            1. Phantom#1089
 
         8. Else
 
-          1. Phantom#1064
+          1. Phantom#1090
 
       2. Else
 
-        1. Phantom#1065
+        1. Phantom#1091
 
     1. Else
 
-      1. Phantom#1069
+      1. Phantom#1095
 
-    2. If (arg*' matches pattern []), then
+    2. If (arg* matches pattern []), then
 
       1. If (typ has type objtyp), then
 
@@ -17185,25 +17343,25 @@ relation MethodType_ok: p, C, expr_b, member', targIL*', arg*'
 
         2. Else
 
-          1. Phantom#1070
+          1. Phantom#1096
 
       1. Else
 
-        1. Phantom#1071
+        1. Phantom#1097
 
     2. Else
 
-      1. Phantom#1072
+      1. Phantom#1098
 
   1. Else
 
-    1. Phantom#1073
+    1. Phantom#1099
 
-10. Else
+7. Else
 
-  1. Phantom#1074
+  1. Phantom#1100
 
-;; ../../../../spec/4b-typing-relation.watsup:163.1-165.29
+;; spec/4b-typing-relation.watsup:163.1-165.29
 relation ConsType_ok: p, C, name, targIL*, arg*
 
 1. Let (cid, consdef, id*)? be $find_consdef((GLOBAL), C, name, arg*)
@@ -17218,9 +17376,9 @@ relation ConsType_ok: p, C, name, targIL*, arg*
 
 2. Else
 
-  1. Phantom#1075
+  1. Phantom#1101
 
-;; ../../../../spec/4b-typing-relation.watsup:171.1-173.23
+;; spec/4b-typing-relation.watsup:171.1-173.23
 relation Inst_site_ok: cursor, C, (ConsT pt* typ_i)
 
 1. If (cursor matches pattern `GLOBAL`), then
@@ -17233,7 +17391,7 @@ relation Inst_site_ok: cursor, C, (ConsT pt* typ_i)
 
   2. Else
 
-    1. Phantom#1083
+    1. Phantom#1109
 
 1. Else If (cursor matches pattern `BLOCK`), then
 
@@ -17247,7 +17405,7 @@ relation Inst_site_ok: cursor, C, (ConsT pt* typ_i)
 
     1. Else
 
-      1. Phantom#1082
+      1. Phantom#1108
 
   2. Else If (C.BLOCK.KIND matches pattern `PARSER`), then
 
@@ -17257,7 +17415,7 @@ relation Inst_site_ok: cursor, C, (ConsT pt* typ_i)
 
     1. Else
 
-      1. Phantom#1081
+      1. Phantom#1107
 
   2. Else If (C.BLOCK.KIND matches pattern `CONTROL`), then
 
@@ -17267,11 +17425,11 @@ relation Inst_site_ok: cursor, C, (ConsT pt* typ_i)
 
     1. Else
 
-      1. Phantom#1079
+      1. Phantom#1105
 
   2. Else
 
-    1. Phantom#1080
+    1. Phantom#1106
 
 1. Else If (cursor matches pattern `LOCAL`), then
 
@@ -17285,7 +17443,7 @@ relation Inst_site_ok: cursor, C, (ConsT pt* typ_i)
 
     1. Else
 
-      1. Phantom#1078
+      1. Phantom#1104
 
   2. Else If (C.LOCAL.KIND matches pattern `CONTROLAPPLYMETHOD`), then
 
@@ -17295,18 +17453,20 @@ relation Inst_site_ok: cursor, C, (ConsT pt* typ_i)
 
     1. Else
 
-      1. Phantom#1076
+      1. Phantom#1102
 
   2. Else
 
-    1. Phantom#1077
+    1. Phantom#1103
 
-;; ../../../../spec/4b-typing-relation.watsup:174.1-176.35
-relation Inst_ok: cursor', C_0', tid*', ct, targIL*, arg*, id_deft*
+;; spec/4b-typing-relation.watsup:174.1-176.35
+relation Inst_ok: cursor', C_0', tid'*, ct, targIL*, arg*, id_deft*
 
-1. If (cursor' matches pattern `GLOBAL`), then
+1. (Let tid be tid')*
 
-  1. If (tid*' matches pattern []), then
+2. If (cursor' matches pattern `GLOBAL`), then
+
+  1. If (tid* matches pattern []), then
 
     1. Let (ConsT pt* typ_i) be ct
 
@@ -17332,31 +17492,31 @@ relation Inst_ok: cursor', C_0', tid*', ct, targIL*, arg*, id_deft*
 
           1. Else
 
-            1. Phantom#1084
+            1. Phantom#1110
 
         2. Else
 
-          1. Phantom#1085
+          1. Phantom#1111
 
       4. Else
 
-        1. Phantom#1086
+        1. Phantom#1112
 
     2. Else
 
-      1. Phantom#1087
+      1. Phantom#1113
 
   1. Else
 
-    1. Phantom#1088
+    1. Phantom#1114
 
-1. Else
+2. Else
 
-  1. Phantom#1089
+  1. Phantom#1115
 
-2. Let tid_fresh* be tid*'
+3. (Let tid_fresh be tid')*
 
-3. If (cursor' matches pattern `GLOBAL`), then
+4. If (cursor' matches pattern `GLOBAL`), then
 
   1. Let (ConsT pt* typ_i) be ct
 
@@ -17396,33 +17556,33 @@ relation Inst_ok: cursor', C_0', tid*', ct, targIL*, arg*, id_deft*
 
             1. Else
 
-              1. Phantom#1090
+              1. Phantom#1116
 
           4. Else
 
-            1. Phantom#1091
+            1. Phantom#1117
 
         4. Else
 
-          1. Phantom#1092
+          1. Phantom#1118
 
       4. Else
 
-        1. Phantom#1093
+        1. Phantom#1119
 
     1. Else
 
-      1. Phantom#1094
+      1. Phantom#1120
 
   2. Else
 
-    1. Phantom#1095
+    1. Phantom#1121
 
-3. Else
+4. Else
 
-  1. Phantom#1096
+  1. Phantom#1122
 
-4. If (tid*' matches pattern []), then
+5. If (tid* matches pattern []), then
 
   1. Let (ConsT pt* typ_i) be ct
 
@@ -17446,27 +17606,27 @@ relation Inst_ok: cursor', C_0', tid*', ct, targIL*, arg*, id_deft*
 
         1. Else
 
-          1. Phantom#1097
+          1. Phantom#1123
 
       2. Else
 
-        1. Phantom#1098
+        1. Phantom#1124
 
     3. Else
 
-      1. Phantom#1099
+      1. Phantom#1125
 
   2. Else
 
-    1. Phantom#1100
+    1. Phantom#1126
 
-4. Else
+5. Else
 
-  1. Phantom#1101
+  1. Phantom#1127
 
-5. Let (ConsT pt* typ_i) be ct
+6. Let (ConsT pt* typ_i) be ct
 
-6. If ~((cursor' = (GLOBAL)) /\ $is_packaget($canon_typ(typ_i))), then
+7. If ~((cursor' = (GLOBAL)) /\ $is_packaget($canon_typ(typ_i))), then
 
   1. (Arg_ok: cursor' C_0' |- arg : argIL typ_a)*
 
@@ -17498,25 +17658,25 @@ relation Inst_ok: cursor', C_0', tid*', ct, targIL*, arg*, id_deft*
 
         1. Else
 
-          1. Phantom#1102
+          1. Phantom#1128
 
       4. Else
 
-        1. Phantom#1103
+        1. Phantom#1129
 
     4. Else
 
-      1. Phantom#1104
+      1. Phantom#1130
 
   3. Else
 
-    1. Phantom#1105
+    1. Phantom#1131
 
-6. Else
+7. Else
 
-  1. Phantom#1106
+  1. Phantom#1132
 
-;; ../../../../spec/4d2-typing-subtyping.watsup:312.1-313.34
+;; spec/4d2-typing-subtyping.watsup:312.1-313.34
 def $reduce_senum_unary(exprIL, $check_unary)
 
 1. Let (( typ ; _ctk )) be $annot(exprIL)
@@ -17527,7 +17687,7 @@ def $reduce_senum_unary(exprIL, $check_unary)
 
 2. Else
 
-  1. Phantom#1107
+  1. Phantom#1133
 
 3. Let (( typ ; ctk )) be $annot(exprIL)
 
@@ -17551,17 +17711,17 @@ def $reduce_senum_unary(exprIL, $check_unary)
 
     2. Else
 
-      1. Phantom#1108
+      1. Phantom#1134
 
   2. Else
 
-    1. Phantom#1109
+    1. Phantom#1135
 
 4. Else
 
-  1. Phantom#1110
+  1. Phantom#1136
 
-;; ../../../../spec/4d2-typing-subtyping.watsup:327.1-328.41
+;; spec/4d2-typing-subtyping.watsup:327.1-328.41
 def $reduce_senums_binary(exprIL_a, exprIL_b, $check_binary)
 
 1. Let (( typ_a ; _ctk )) be $annot(exprIL_a)
@@ -17574,7 +17734,7 @@ def $reduce_senums_binary(exprIL_a, exprIL_b, $check_binary)
 
 3. Else
 
-  1. Phantom#1111
+  1. Phantom#1137
 
 4. Let (( typ_a ; ctk_a )) be $annot(exprIL_a)
 
@@ -17600,15 +17760,15 @@ def $reduce_senums_binary(exprIL_a, exprIL_b, $check_binary)
 
     2. Else
 
-      1. Phantom#1112
+      1. Phantom#1138
 
   2. Else
 
-    1. Phantom#1113
+    1. Phantom#1139
 
 6. Else
 
-  1. Phantom#1114
+  1. Phantom#1140
 
 7. Let (( typ_b ; ctk_b )) be $annot(exprIL_b)
 
@@ -17632,17 +17792,17 @@ def $reduce_senums_binary(exprIL_a, exprIL_b, $check_binary)
 
     2. Else
 
-      1. Phantom#1115
+      1. Phantom#1141
 
   2. Else
 
-    1. Phantom#1116
+    1. Phantom#1142
 
 8. Else
 
-  1. Phantom#1117
+  1. Phantom#1143
 
-;; ../../../../spec/4d2-typing-subtyping.watsup:353.1-354.32
+;; spec/4d2-typing-subtyping.watsup:353.1-354.32
 def $coerce_binary(exprIL_a, exprIL_b)
 
 1. Let (( typ_a ; _ctk )) be $annot(exprIL_a)
@@ -17655,7 +17815,7 @@ def $coerce_binary(exprIL_a, exprIL_b)
 
 3. Else
 
-  1. Phantom#1118
+  1. Phantom#1144
 
 4. Let (( typ_a ; ctk_a )) be $annot(exprIL_a)
 
@@ -17671,11 +17831,11 @@ def $coerce_binary(exprIL_a, exprIL_b)
 
   1. Else
 
-    1. Phantom#1119
+    1. Phantom#1145
 
 6. Else
 
-  1. Phantom#1120
+  1. Phantom#1146
 
 7. Let (( typ_b ; ctk_b )) be $annot(exprIL_b)
 
@@ -17691,17 +17851,17 @@ def $coerce_binary(exprIL_a, exprIL_b)
 
     1. Else
 
-      1. Phantom#1121
+      1. Phantom#1147
 
   1. Else
 
-    1. Phantom#1122
+    1. Phantom#1148
 
 8. Else
 
-  1. Phantom#1123
+  1. Phantom#1149
 
-;; ../../../../spec/4d2-typing-subtyping.watsup:377.1-378.31
+;; spec/4d2-typing-subtyping.watsup:377.1-378.31
 def $coerce_assign(exprIL, typ_t)
 
 1. Let (( typ_f ; _ctk )) be $annot(exprIL)
@@ -17712,7 +17872,7 @@ def $coerce_assign(exprIL, typ_t)
 
 2. Else
 
-  1. Phantom#1124
+  1. Phantom#1150
 
 3. Let (( typ_f ; ctk_f )) be $annot(exprIL)
 
@@ -17724,18 +17884,18 @@ def $coerce_assign(exprIL, typ_t)
 
   1. Else
 
-    1. Phantom#1125
+    1. Phantom#1151
 
 4. Else
 
-  1. Phantom#1126
+  1. Phantom#1152
 
-;; ../../../../spec/4e-typing-expr.watsup:88.1-88.33
+;; spec/4e-typing-expr.watsup:88.1-88.33
 def $compatible_bnot(typ)
 
 1. Return $compatible'_bnot($canon_typ(typ))
 
-;; ../../../../spec/4e-typing-expr.watsup:89.1-89.34
+;; spec/4e-typing-expr.watsup:89.1-89.34
 def $compatible'_bnot(typ)
 
 1. If (typ has type numtyp), then
@@ -17758,12 +17918,12 @@ def $compatible'_bnot(typ)
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:103.1-103.33
+;; spec/4e-typing-expr.watsup:103.1-103.33
 def $compatible_lnot(typ)
 
 1. Return $compatible'_lnot($canon_typ(typ))
 
-;; ../../../../spec/4e-typing-expr.watsup:104.1-104.34
+;; spec/4e-typing-expr.watsup:104.1-104.34
 def $compatible'_lnot(typ)
 
 1. If (typ = ((BoolT) as typ)), then
@@ -17774,12 +17934,12 @@ def $compatible'_lnot(typ)
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:117.1-117.34
+;; spec/4e-typing-expr.watsup:117.1-117.34
 def $compatible_uplus(typ)
 
 1. Return $compatible'_uplus($canon_typ(typ))
 
-;; ../../../../spec/4e-typing-expr.watsup:118.1-118.35
+;; spec/4e-typing-expr.watsup:118.1-118.35
 def $compatible'_uplus(typ)
 
 1. If (typ = ((IntT) as typ)), then
@@ -17806,12 +17966,12 @@ def $compatible'_uplus(typ)
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:133.1-133.35
+;; spec/4e-typing-expr.watsup:133.1-133.35
 def $compatible_uminus(typ)
 
 1. Return $compatible'_uminus($canon_typ(typ))
 
-;; ../../../../spec/4e-typing-expr.watsup:134.1-134.36
+;; spec/4e-typing-expr.watsup:134.1-134.36
 def $compatible'_uminus(typ)
 
 1. If (typ = ((IntT) as typ)), then
@@ -17838,12 +17998,12 @@ def $compatible'_uminus(typ)
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:153.1-153.47
+;; spec/4e-typing-expr.watsup:153.1-153.47
 def $compatible_plusminusmult(typ_l, typ_r)
 
 1. Return $compatible'_plusminusmult($canon_typ(typ_l), $canon_typ(typ_r))
 
-;; ../../../../spec/4e-typing-expr.watsup:154.1-154.48
+;; spec/4e-typing-expr.watsup:154.1-154.48
 def $compatible'_plusminusmult(typ'', typ''')
 
 1. If (typ'' = ((IntT) as typ)), then
@@ -17892,12 +18052,12 @@ def $compatible'_plusminusmult(typ'', typ''')
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:179.1-179.46
+;; spec/4e-typing-expr.watsup:179.1-179.46
 def $compatible_satplusminus(typ_l, typ_r)
 
 1. Return $compatible'_satplusminus($canon_typ(typ_l), $canon_typ(typ_r))
 
-;; ../../../../spec/4e-typing-expr.watsup:180.1-180.47
+;; spec/4e-typing-expr.watsup:180.1-180.47
 def $compatible'_satplusminus(typ'', typ''')
 
 1. If (typ'' has type numtyp), then
@@ -17940,12 +18100,12 @@ def $compatible'_satplusminus(typ'', typ''')
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:204.1-204.40
+;; spec/4e-typing-expr.watsup:204.1-204.40
 def $compatible_divmod(typ_l, typ_r)
 
 1. Return $compatible'_divmod($canon_typ(typ_l), $canon_typ(typ_r))
 
-;; ../../../../spec/4e-typing-expr.watsup:205.1-205.41
+;; spec/4e-typing-expr.watsup:205.1-205.41
 def $compatible'_divmod(typ'', typ''')
 
 1. If (typ'' = ((IntT) as typ)), then
@@ -17958,12 +18118,12 @@ def $compatible'_divmod(typ'', typ''')
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:249.1-249.39
+;; spec/4e-typing-expr.watsup:249.1-249.39
 def $compatible_shift(typ_l, typ_r)
 
 1. Return $compatible'_shift($canon_typ(typ_l), $canon_typ(typ_r))
 
-;; ../../../../spec/4e-typing-expr.watsup:250.1-250.40
+;; spec/4e-typing-expr.watsup:250.1-250.40
 def $compatible'_shift(typ'', typ''')
 
 1. If (typ'' = ((IntT) as typ)), then
@@ -18044,12 +18204,12 @@ def $compatible'_shift(typ'', typ''')
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:296.1-296.41
+;; spec/4e-typing-expr.watsup:296.1-296.41
 def $compatible_compare(typ_l, typ_r)
 
 1. Return $compatible'_compare($canon_typ(typ_l), $canon_typ(typ_r))
 
-;; ../../../../spec/4e-typing-expr.watsup:297.1-297.42
+;; spec/4e-typing-expr.watsup:297.1-297.42
 def $compatible'_compare(typ'', typ''')
 
 1. If (typ'' = ((IntT) as typ)), then
@@ -18098,12 +18258,12 @@ def $compatible'_compare(typ'', typ''')
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:322.1-322.41
+;; spec/4e-typing-expr.watsup:322.1-322.41
 def $compatible_bitwise(typ_l, typ_r)
 
 1. Return $compatible'_bitwise($canon_typ(typ_l), $canon_typ(typ_r))
 
-;; ../../../../spec/4e-typing-expr.watsup:323.1-323.42
+;; spec/4e-typing-expr.watsup:323.1-323.42
 def $compatible'_bitwise(typ'', typ''')
 
 1. If (typ'' has type numtyp), then
@@ -18146,12 +18306,12 @@ def $compatible'_bitwise(typ'', typ''')
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:347.1-347.40
+;; spec/4e-typing-expr.watsup:347.1-347.40
 def $compatible_concat(typ_l, typ_r)
 
 1. Return $compatible'_concat($canon_typ(typ_l), $canon_typ(typ_r))
 
-;; ../../../../spec/4e-typing-expr.watsup:348.1-348.41
+;; spec/4e-typing-expr.watsup:348.1-348.41
 def $compatible'_concat(typ'', typ''')
 
 1. If (typ'' has type numtyp), then
@@ -18202,12 +18362,12 @@ def $compatible'_concat(typ'', typ''')
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:391.1-391.41
+;; spec/4e-typing-expr.watsup:391.1-391.41
 def $compatible_logical(typ_l, typ_r)
 
 1. Return $compatible'_logical($canon_typ(typ_l), $canon_typ(typ_r))
 
-;; ../../../../spec/4e-typing-expr.watsup:392.1-392.42
+;; spec/4e-typing-expr.watsup:392.1-392.42
 def $compatible'_logical(typ'', typ''')
 
 1. If (typ'' = ((BoolT) as typ)), then
@@ -18220,12 +18380,12 @@ def $compatible'_logical(typ'', typ''')
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:453.1-453.38
+;; spec/4e-typing-expr.watsup:453.1-453.38
 def $compatible_mask(typ_l, typ_r)
 
 1. Return $compatible'_mask($canon_typ(typ_l), $canon_typ(typ_r))
 
-;; ../../../../spec/4e-typing-expr.watsup:454.1-454.39
+;; spec/4e-typing-expr.watsup:454.1-454.39
 def $compatible'_mask(typ'', typ''')
 
 1. If (typ'' = ((IntT) as typ)), then
@@ -18274,12 +18434,12 @@ def $compatible'_mask(typ'', typ''')
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:481.1-481.39
+;; spec/4e-typing-expr.watsup:481.1-481.39
 def $compatible_range(typ_l, typ_r)
 
 1. Return $compatible'_range($canon_typ(typ_l), $canon_typ(typ_r))
 
-;; ../../../../spec/4e-typing-expr.watsup:482.1-482.40
+;; spec/4e-typing-expr.watsup:482.1-482.40
 def $compatible'_range(typ'', typ''')
 
 1. If (typ'' = ((IntT) as typ)), then
@@ -18328,7 +18488,7 @@ def $compatible'_range(typ'', typ''')
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:508.1-510.26
+;; spec/4e-typing-expr.watsup:508.1-510.26
 relation Select_case_keyset_ok: cursor, C, typ_k, keyset
 
 1. If (cursor matches pattern `LOCAL`), then
@@ -18363,15 +18523,15 @@ relation Select_case_keyset_ok: cursor, C, typ_k, keyset
 
           1. Else
 
-            1. Phantom#1127
+            1. Phantom#1153
 
       2. Else
 
-        1. Phantom#1128
+        1. Phantom#1154
 
     4. Else
 
-      1. Phantom#1129
+      1. Phantom#1155
 
     5. Let (( typ ; _ctk )) be $annot(exprIL)
 
@@ -18383,7 +18543,7 @@ relation Select_case_keyset_ok: cursor, C, typ_k, keyset
 
     6. Else
 
-      1. Phantom#1130
+      1. Phantom#1156
 
   1. Else If (keyset matches pattern `DefaultK`), then
 
@@ -18395,18 +18555,22 @@ relation Select_case_keyset_ok: cursor, C, typ_k, keyset
 
 1. Else
 
-  1. Phantom#1131
+  1. Phantom#1157
 
-;; ../../../../spec/4e-typing-expr.watsup:543.1-545.26
-relation Select_case_keysets_ok: p, C, typ*', keyset*'
+;; spec/4e-typing-expr.watsup:543.1-545.26
+relation Select_case_keysets_ok: p, C, typ'*, keyset''*
 
-1. If (typ*' matches pattern [ _/1 ]), then
+1. (Let typ be typ')*
 
-  1. Let [typ_k] be typ*'
+2. (Let keyset' be keyset'')*
 
-  2. If (keyset*' matches pattern [ _/1 ]), then
+3. If (typ* matches pattern [ _/1 ]), then
 
-    1. Let [keyset] be keyset*'
+  1. Let [typ_k] be typ*
+
+  2. If (keyset'* matches pattern [ _/1 ]), then
+
+    1. Let [keyset] be keyset'*
 
     2. Select_case_keyset_ok: p C typ_k |- keyset : keysetIL
 
@@ -18414,39 +18578,39 @@ relation Select_case_keysets_ok: p, C, typ*', keyset*'
 
   2. Else
 
-    1. Phantom#1132
+    1. Phantom#1158
 
-1. Else
+3. Else
 
-  1. Phantom#1133
+  1. Phantom#1159
 
-2. Let typ_k* be typ*'
+4. (Let typ_k be typ')*
 
-3. If (keyset*' matches pattern [ _/1 ]), then
+5. If (keyset'* matches pattern [ _/1 ]), then
 
-  1. Let [keyset] be keyset*'
+  1. Let [keyset] be keyset'*
 
   2. Select_case_keyset_ok: p C ((SeqT typ_k*) as typ) |- keyset : keysetIL
 
   3. Result in [keysetIL]
 
-3. Else
+5. Else
 
-  1. Phantom#1134
+  1. Phantom#1160
 
-4. Let keyset* be keyset*'
+6. (Let keyset be keyset'')*
 
-5. If (|typ_k*| = |keyset*|), then
+7. If (|typ_k*| = |keyset*|), then
 
   1. (Select_case_keyset_ok: p C typ_k |- keyset : keysetIL)*
 
   2. Result in keysetIL*
 
-5. Else
+7. Else
 
-  1. Phantom#1135
+  1. Phantom#1161
 
-;; ../../../../spec/4e-typing-expr.watsup:561.1-563.26
+;; spec/4e-typing-expr.watsup:561.1-563.26
 relation Select_case_ok: cursor, C, typ_k*, (keyset* statelabel)
 
 1. If (cursor matches pattern `LOCAL`), then
@@ -18467,26 +18631,26 @@ relation Select_case_ok: cursor, C, typ_k*, (keyset* statelabel)
 
       1. Else
 
-        1. Phantom#1136
+        1. Phantom#1162
 
     2. Else
 
-      1. Phantom#1137
+      1. Phantom#1163
 
   3. Else
 
-    1. Phantom#1138
+    1. Phantom#1164
 
 1. Else
 
-  1. Phantom#1139
+  1. Phantom#1165
 
-;; ../../../../spec/4e-typing-expr.watsup:585.1-585.39
+;; spec/4e-typing-expr.watsup:585.1-585.39
 def $compatible_arrayindex(typ)
 
 1. Return $compatible'_arrayindex($canon_typ(typ))
 
-;; ../../../../spec/4e-typing-expr.watsup:586.1-586.40
+;; spec/4e-typing-expr.watsup:586.1-586.40
 def $compatible'_arrayindex(typ)
 
 1. If (typ = ((IntT) as typ)), then
@@ -18513,12 +18677,12 @@ def $compatible'_arrayindex(typ)
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:642.1-642.42
+;; spec/4e-typing-expr.watsup:642.1-642.42
 def $compatible_bitstringbase(typ)
 
 1. Return $compatible'_bitstringbase($canon_typ(typ))
 
-;; ../../../../spec/4e-typing-expr.watsup:643.1-643.43
+;; spec/4e-typing-expr.watsup:643.1-643.43
 def $compatible'_bitstringbase(typ)
 
 1. If (typ = ((IntT) as typ)), then
@@ -18545,12 +18709,12 @@ def $compatible'_bitstringbase(typ)
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:652.1-652.43
+;; spec/4e-typing-expr.watsup:652.1-652.43
 def $compatible_bitstringindex(typ)
 
 1. Return $compatible'_bitstringindex($canon_typ(typ))
 
-;; ../../../../spec/4e-typing-expr.watsup:653.1-653.44
+;; spec/4e-typing-expr.watsup:653.1-653.44
 def $compatible'_bitstringindex(typ)
 
 1. If (typ = ((IntT) as typ)), then
@@ -18577,12 +18741,12 @@ def $compatible'_bitstringindex(typ)
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:662.1-662.52
+;; spec/4e-typing-expr.watsup:662.1-662.52
 def $is_valid_bitstring_slice(typ, n_l, n_h)
 
 1. Return ((n_l <= n_h) /\ $is_valid_bitstring_slice'($canon_typ(typ), n_l, n_h))
 
-;; ../../../../spec/4e-typing-expr.watsup:663.1-663.53
+;; spec/4e-typing-expr.watsup:663.1-663.53
 def $is_valid_bitstring_slice'(typ', _nat'', _nat''')
 
 1. If (typ' = ((IntT) as typ)), then
@@ -18613,12 +18777,12 @@ def $is_valid_bitstring_slice'(typ', _nat'', _nat''')
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:855.1-855.44
+;; spec/4e-typing-expr.watsup:855.1-855.44
 def $not_abstract_extern_object(typ)
 
 1. Return $not_abstract_extern_object'($canon_typ(typ))
 
-;; ../../../../spec/4e-typing-expr.watsup:856.1-856.45
+;; spec/4e-typing-expr.watsup:856.1-856.45
 def $not_abstract_extern_object'(typ)
 
 1. If ~$is_externt(typ), then
@@ -18649,7 +18813,7 @@ def $not_abstract_extern_object'(typ)
 
   1. Return false
 
-;; ../../../../spec/4e-typing-expr.watsup:857.1-857.50
+;; spec/4e-typing-expr.watsup:857.1-857.50
 def $not_abstract_extern_object''(funcdef')
 
 1. If (funcdef' has type polyfuncdef), then
@@ -18666,7 +18830,7 @@ def $not_abstract_extern_object''(funcdef')
 
   1. Return true
 
-;; ../../../../spec/4f-typing-stmt.watsup:45.1-47.29
+;; spec/4f-typing-stmt.watsup:45.1-47.29
 relation Switch_tbl_label_ok: p, C, id_t, b_last', switchlabel
 
 1. If (switchlabel matches pattern `ExprL%`), then
@@ -18697,23 +18861,23 @@ relation Switch_tbl_label_ok: p, C, id_t, b_last', switchlabel
 
         2. Else
 
-          1. Phantom#1140
+          1. Phantom#1166
 
       4. Else
 
-        1. Phantom#1141
+        1. Phantom#1167
 
     2. Else
 
-      1. Phantom#1142
+      1. Phantom#1168
 
   2. Else
 
-    1. Phantom#1143
+    1. Phantom#1169
 
 1. Else
 
-  1. Phantom#1144
+  1. Phantom#1170
 
 2. If (b_last' = true), then
 
@@ -18723,13 +18887,13 @@ relation Switch_tbl_label_ok: p, C, id_t, b_last', switchlabel
 
   1. Else
 
-    1. Phantom#1145
+    1. Phantom#1171
 
 2. Else
 
-  1. Phantom#1146
+  1. Phantom#1172
 
-;; ../../../../spec/4f-typing-stmt.watsup:60.1-62.32
+;; spec/4f-typing-stmt.watsup:60.1-62.32
 relation Switch_tbl_case_ok: p, C, f, id_t, b_last, switchcase
 
 1. If (switchcase matches pattern `MatchC%%`), then
@@ -18750,7 +18914,7 @@ relation Switch_tbl_case_ok: p, C, f, id_t, b_last, switchcase
 
   3. Result in f, (FallC switchlabelIL), switchlabel
 
-;; ../../../../spec/4f-typing-stmt.watsup:74.1-76.29
+;; spec/4f-typing-stmt.watsup:74.1-76.29
 relation Switch_tbl_cases_ok: p, C, f, id_t, switchcase*
 
 1. If (switchcase* matches pattern []), then
@@ -18769,7 +18933,7 @@ relation Switch_tbl_cases_ok: p, C, f, id_t, switchcase*
 
   5. Result in f'', switchcaseIL_h :: switchcaseIL_t*, switchlabel_h :: switchlabel_t*
 
-;; ../../../../spec/4f-typing-stmt.watsup:98.1-100.29
+;; spec/4f-typing-stmt.watsup:98.1-100.29
 relation Switch_gen_label_ok: p, C, typ_s, b_last', switchlabel
 
 1. If (switchlabel matches pattern `ExprL%`), then
@@ -18788,11 +18952,11 @@ relation Switch_gen_label_ok: p, C, typ_s, b_last', switchlabel
 
   4. Else
 
-    1. Phantom#1147
+    1. Phantom#1173
 
 1. Else
 
-  1. Phantom#1148
+  1. Phantom#1174
 
 2. If (b_last' = true), then
 
@@ -18802,13 +18966,13 @@ relation Switch_gen_label_ok: p, C, typ_s, b_last', switchlabel
 
   1. Else
 
-    1. Phantom#1149
+    1. Phantom#1175
 
 2. Else
 
-  1. Phantom#1150
+  1. Phantom#1176
 
-;; ../../../../spec/4f-typing-stmt.watsup:112.1-114.32
+;; spec/4f-typing-stmt.watsup:112.1-114.32
 relation Switch_gen_case_ok: p, C, f, typ_s, b_last, switchcase
 
 1. If (switchcase matches pattern `MatchC%%`), then
@@ -18829,7 +18993,7 @@ relation Switch_gen_case_ok: p, C, f, typ_s, b_last, switchcase
 
   3. Result in f, (FallC switchlabelIL), switchlabel
 
-;; ../../../../spec/4f-typing-stmt.watsup:126.1-128.29
+;; spec/4f-typing-stmt.watsup:126.1-128.29
 relation Switch_gen_cases_ok: p, C, f, typ_s, switchcase*
 
 1. If (switchcase* matches pattern []), then
@@ -18848,7 +19012,7 @@ relation Switch_gen_cases_ok: p, C, f, typ_s, switchcase*
 
   5. Result in f'', switchcaseIL_h :: switchcaseIL_t*, switchlabel_h :: switchlabel_t*
 
-;; ../../../../spec/4g-typing-decl.watsup:88.1-90.29
+;; spec/4g-typing-decl.watsup:88.1-90.29
 relation Inst_init_decl_ok: p, C'', frame, fdenv, decl''
 
 1. If (decl'' matches pattern `InstD%%%%%`), then
@@ -18869,7 +19033,7 @@ relation Inst_init_decl_ok: p, C'', frame, fdenv, decl''
 
   4. Else
 
-    1. Phantom#1155
+    1. Phantom#1181
 
 1. Else If (decl'' matches pattern `FuncD%%%%%`), then
 
@@ -18911,21 +19075,21 @@ relation Inst_init_decl_ok: p, C'', frame, fdenv, decl''
 
       2. Else
 
-        1. Phantom#1151
+        1. Phantom#1177
 
     7. Else
 
-      1. Phantom#1152
+      1. Phantom#1178
 
   7. Else
 
-    1. Phantom#1153
+    1. Phantom#1179
 
 1. Else
 
-  1. Phantom#1154
+  1. Phantom#1180
 
-;; ../../../../spec/4g-typing-decl.watsup:128.1-130.26
+;; spec/4g-typing-decl.watsup:128.1-130.26
 relation Inst_init_decls_ok: C, frame, fdenv, decl*
 
 1. If (decl* matches pattern []), then
@@ -18942,7 +19106,7 @@ relation Inst_init_decls_ok: C, frame, fdenv, decl*
 
   4. Result in frame'', fdenv'', declIL_h :: declIL_t*
 
-;; ../../../../spec/4g-typing-decl.watsup:141.1-142.109
+;; spec/4g-typing-decl.watsup:141.1-142.109
 def $update_fdenv_extern(fdenv_ext, theta, fid*, funcdef*)
 
 1. If (fid* matches pattern []), then
@@ -18953,7 +19117,7 @@ def $update_fdenv_extern(fdenv_ext, theta, fid*, funcdef*)
 
   1. Else
 
-    1. Phantom#1161
+    1. Phantom#1187
 
 1. Else If (fid* matches pattern _ :: _), then
 
@@ -18963,15 +19127,15 @@ def $update_fdenv_extern(fdenv_ext, theta, fid*, funcdef*)
 
     1. Let fd_h :: fd_t* be funcdef*
 
-    2. Let funcdef? be $find_map<fid, funcdef>(fdenv_ext, fid_h)
+    2. Let funcdef''? be $find_map<fid, funcdef>(fdenv_ext, fid_h)
 
-    3. If (funcdef? matches pattern (_)), then
+    3. If (funcdef''? matches pattern (_)), then
 
-      1. Let ?(funcdef) be funcdef?
+      1. Let ?(funcdef') be funcdef''?
 
-      2. If (funcdef has type polyfuncdef), then
+      2. If (funcdef' has type polyfuncdef), then
 
-        1. Let (PolyFD (tparam*, tparam_hidden*) -> functyp) be (funcdef as polyfuncdef)
+        1. Let (PolyFD (tparam*, tparam_hidden*) -> functyp) be (funcdef' as polyfuncdef)
 
         2. If (functyp matches pattern `ExternAbstractMethodT%%`), then
 
@@ -18989,25 +19153,25 @@ def $update_fdenv_extern(fdenv_ext, theta, fid*, funcdef*)
 
           4. Else
 
-            1. Phantom#1156
+            1. Phantom#1182
 
         2. Else
 
-          1. Phantom#1157
+          1. Phantom#1183
 
       2. Else
 
-        1. Phantom#1158
+        1. Phantom#1184
 
     3. Else
 
-      1. Phantom#1159
+      1. Phantom#1185
 
   2. Else
 
-    1. Phantom#1160
+    1. Phantom#1186
 
-;; ../../../../spec/4g-typing-decl.watsup:291.1-293.32
+;; spec/4g-typing-decl.watsup:291.1-293.32
 relation SEnum_field_ok: C, id_s, typ_s, (member_s, val_s)*, member, expr
 
 1. Expr_ok: (BLOCK) C |- expr : exprIL
@@ -19034,9 +19198,9 @@ relation SEnum_field_ok: C, id_s, typ_s, (member_s, val_s)*, member, expr
 
 3. Else
 
-  1. Phantom#1162
+  1. Phantom#1188
 
-;; ../../../../spec/4g-typing-decl.watsup:311.1-313.29
+;; spec/4g-typing-decl.watsup:311.1-313.29
 relation SEnum_fields_ok: C, id, typ, (member, val)*, (member, expr)*
 
 1. If ((member, expr)* matches pattern []), then
@@ -19053,7 +19217,7 @@ relation SEnum_fields_ok: C, id, typ, (member, val)*, (member, expr)*
 
   4. Result in C'', (member'', val'')*
 
-;; ../../../../spec/4g-typing-decl.watsup:500.1-500.49
+;; spec/4g-typing-decl.watsup:500.1-500.49
 def $split_methods(method*)
 
 1. If (method* matches pattern []), then
@@ -19064,27 +19228,27 @@ def $split_methods(method*)
 
   1. Let method_h :: method_t* be method*
 
-  2. Let method be method_h
+  2. Let method' be method_h
 
-  3. If (method matches pattern `ExternConsM%%`), then
+  3. If (method' matches pattern `ExternConsM%%`), then
 
-    1. Let (ExternConsM _id _cparam*) be method
+    1. Let (ExternConsM _id _cparam*) be method'
 
     2. Let (method_c*, method_m*) be $split_methods(method_t*)
 
     3. Return (method_h :: method_c*, method_m*)
 
-  3. Else If (method matches pattern `ExternM%%%%`), then
+  3. Else If (method' matches pattern `ExternM%%%%`), then
 
-    1. Let (ExternM _id _type _tparam* _param*) be method
+    1. Let (ExternM _id _type _tparam* _param*) be method'
 
     2. Let (method_c*, method_m*) be $split_methods(method_t*)
 
     3. Return (method_c*, method_h :: method_m*)
 
-  3. Else If (method matches pattern `ExternAbstractM%%%%`), then
+  3. Else If (method' matches pattern `ExternAbstractM%%%%`), then
 
-    1. Let (ExternAbstractM _id _type _tparam* _param*) be method
+    1. Let (ExternAbstractM _id _type _tparam* _param*) be method'
 
     2. Let (method_c*, method_m*) be $split_methods(method_t*)
 
@@ -19092,9 +19256,9 @@ def $split_methods(method*)
 
   3. Else
 
-    1. Phantom#1163
+    1. Phantom#1189
 
-;; ../../../../spec/4g-typing-decl.watsup:514.1-516.23
+;; spec/4g-typing-decl.watsup:514.1-516.23
 relation Method_ok: C'', id_e, method
 
 1. If (method matches pattern `ExternConsM%%`), then
@@ -19111,11 +19275,11 @@ relation Method_ok: C'', id_e, method
 
     4. Let tparam_hidden* be $concat_<tid>(tid_fresh_c**)
 
-    5. Let typdef? be $find_typdef((GLOBAL), C'', (CURRENT id_e))
+    5. Let typdef'? be $find_typdef((GLOBAL), C'', (CURRENT id_e))
 
-    6. If (typdef? matches pattern (_)), then
+    6. If (typdef'? matches pattern (_)), then
 
-      1. Let ?(typdef) be typdef?
+      1. Let ?(typdef) be typdef'?
 
       2. If (typdef has type polytypdef), then
 
@@ -19135,23 +19299,23 @@ relation Method_ok: C'', id_e, method
 
           3. Else
 
-            1. Phantom#1170
+            1. Phantom#1196
 
         2. Else
 
-          1. Phantom#1171
+          1. Phantom#1197
 
       2. Else
 
-        1. Phantom#1172
+        1. Phantom#1198
 
     6. Else
 
-      1. Phantom#1173
+      1. Phantom#1199
 
   2. Else
 
-    1. Phantom#1174
+    1. Phantom#1200
 
 1. Else If (method matches pattern `ExternAbstractM%%%%`), then
 
@@ -19185,15 +19349,15 @@ relation Method_ok: C'', id_e, method
 
       6. Else
 
-        1. Phantom#1167
+        1. Phantom#1193
 
     4. Else
 
-      1. Phantom#1168
+      1. Phantom#1194
 
   2. Else
 
-    1. Phantom#1169
+    1. Phantom#1195
 
 1. Else If (method matches pattern `ExternM%%%%`), then
 
@@ -19229,17 +19393,17 @@ relation Method_ok: C'', id_e, method
 
       7. Else
 
-        1. Phantom#1164
+        1. Phantom#1190
 
     4. Else
 
-      1. Phantom#1165
+      1. Phantom#1191
 
   2. Else
 
-    1. Phantom#1166
+    1. Phantom#1192
 
-;; ../../../../spec/4g-typing-decl.watsup:580.1-582.23
+;; spec/4g-typing-decl.watsup:580.1-582.23
 relation Methods_ok: C, id_e, method*
 
 1. If (method* matches pattern []), then
@@ -19256,7 +19420,7 @@ relation Methods_ok: C, id_e, method*
 
   4. Result in C'', methodIL_h :: methodIL_t*
 
-;; ../../../../spec/4g-typing-decl.watsup:652.1-654.20
+;; spec/4g-typing-decl.watsup:652.1-654.20
 relation ParserState_ok: C, (statelabel block)
 
 1. Block_ok: (LOCAL) C (CONT) (INIT) |- block : C' flow blockIL
@@ -19267,9 +19431,9 @@ relation ParserState_ok: C, (statelabel block)
 
 2. Else
 
-  1. Phantom#1175
+  1. Phantom#1201
 
-;; ../../../../spec/4g-typing-decl.watsup:713.1-715.26
+;; spec/4g-typing-decl.watsup:713.1-715.26
 relation Table_key_ok: p, C, tblctx, (expr matchkind)
 
 1. Expr_ok: p C |- expr : exprIL
@@ -19290,17 +19454,17 @@ relation Table_key_ok: p, C, tblctx, (expr matchkind)
 
     1. Else
 
-      1. Phantom#1176
+      1. Phantom#1202
 
   1. Else
 
-    1. Phantom#1177
+    1. Phantom#1203
 
 3. Else
 
-  1. Phantom#1178
+  1. Phantom#1204
 
-;; ../../../../spec/4g-typing-decl.watsup:717.1-717.44
+;; spec/4g-typing-decl.watsup:717.1-717.44
 def $check_table_key(matchkind, typ)
 
 1. If (matchkind = "exact"), then
@@ -19509,7 +19673,7 @@ def $check_table_key(matchkind, typ)
 
   1. Return false
 
-;; ../../../../spec/4g-typing-decl.watsup:767.1-769.26
+;; spec/4g-typing-decl.watsup:767.1-769.26
 relation Table_keys_ok: p, C, tblctx, tblkey*
 
 1. If (tblkey* matches pattern []), then
@@ -19526,7 +19690,7 @@ relation Table_keys_ok: p, C, tblctx, tblkey*
 
   4. Result in tblctx'', tblkeyIL_h :: tblkeyIL_t*
 
-;; ../../../../spec/4g-typing-decl.watsup:783.1-785.26
+;; spec/4g-typing-decl.watsup:783.1-785.26
 relation Call_action_partial_ok: p, C, pt*, (argIL, typ_a)*
 
 1. Let (paramIL_d*, paramIL_c*) be $split_directionless_params((pt* as paramIL*))
@@ -19539,9 +19703,9 @@ relation Call_action_partial_ok: p, C, pt*, (argIL, typ_a)*
 
 2. Else
 
-  1. Phantom#1179
+  1. Phantom#1205
 
-;; ../../../../spec/4g-typing-decl.watsup:787.1-788.46
+;; spec/4g-typing-decl.watsup:787.1-788.46
 def $split_directionless_params(paramIL*)
 
 1. If (paramIL* matches pattern []), then
@@ -19566,16 +19730,16 @@ def $split_directionless_params(paramIL*)
 
     2. Return (paramIL_h :: paramIL_d*, paramIL_c*)
 
-;; ../../../../spec/4g-typing-decl.watsup:807.1-809.26
+;; spec/4g-typing-decl.watsup:807.1-809.26
 relation Table_action_ok: p, C, tblctx, (name arg*)
 
 1. (Arg_ok: p C |- arg : argIL typ_a)*
 
-2. Let funcdef? be $find_funcdef_by_name(p, C, name)
+2. Let funcdef'? be $find_funcdef_by_name(p, C, name)
 
-3. If (funcdef? matches pattern (_)), then
+3. If (funcdef'? matches pattern (_)), then
 
-  1. Let ?(funcdef) be funcdef?
+  1. Let ?(funcdef) be funcdef'?
 
   2. If (funcdef has type monofuncdef), then
 
@@ -19593,17 +19757,17 @@ relation Table_action_ok: p, C, tblctx, (name arg*)
 
     2. Else
 
-      1. Phantom#1180
+      1. Phantom#1206
 
   2. Else
 
-    1. Phantom#1181
+    1. Phantom#1207
 
 3. Else
 
-  1. Phantom#1182
+  1. Phantom#1208
 
-;; ../../../../spec/4g-typing-decl.watsup:821.1-823.26
+;; spec/4g-typing-decl.watsup:821.1-823.26
 relation Table_actions_ok: p, C, tblctx, tblaction*
 
 1. If (tblaction* matches pattern []), then
@@ -19628,9 +19792,9 @@ relation Table_actions_ok: p, C, tblctx, tblaction*
 
   6. Else
 
-    1. Phantom#1183
+    1. Phantom#1209
 
-;; ../../../../spec/4g-typing-decl.watsup:841.1-843.29
+;; spec/4g-typing-decl.watsup:841.1-843.29
 relation Table_entry_keyset_ok: p, C, tblctx, (typ_k, text'), keyset
 
 1. If (text' = "lpm"), then
@@ -19679,27 +19843,27 @@ relation Table_entry_keyset_ok: p, C, tblctx, (typ_k, text'), keyset
 
               5. Else
 
-                1. Phantom#1201
+                1. Phantom#1227
 
             3. Else
 
-              1. Phantom#1202
+              1. Phantom#1228
 
           3. Else
 
-            1. Phantom#1203
+            1. Phantom#1229
 
         2. Else
 
-          1. Phantom#1204
+          1. Phantom#1230
 
       4. Else
 
-        1. Phantom#1205
+        1. Phantom#1231
 
     2. Else
 
-      1. Phantom#1206
+      1. Phantom#1232
 
     3. If ~($is_maske(expr) \/ $is_rangee(expr)), then
 
@@ -19721,15 +19885,15 @@ relation Table_entry_keyset_ok: p, C, tblctx, (typ_k, text'), keyset
 
         2. Else
 
-          1. Phantom#1207
+          1. Phantom#1233
 
       4. Else
 
-        1. Phantom#1208
+        1. Phantom#1234
 
     3. Else
 
-      1. Phantom#1209
+      1. Phantom#1235
 
   1. Else If (keyset matches pattern `DefaultK`), then
 
@@ -19743,7 +19907,7 @@ relation Table_entry_keyset_ok: p, C, tblctx, (typ_k, text'), keyset
 
     2. Else
 
-      1. Phantom#1200
+      1. Phantom#1226
 
   1. Else If (keyset matches pattern `AnyK`), then
 
@@ -19757,7 +19921,7 @@ relation Table_entry_keyset_ok: p, C, tblctx, (typ_k, text'), keyset
 
     2. Else
 
-      1. Phantom#1199
+      1. Phantom#1225
 
 1. Else If (text' = "ternary"), then
 
@@ -19787,19 +19951,19 @@ relation Table_entry_keyset_ok: p, C, tblctx, (typ_k, text'), keyset
 
           2. Else
 
-            1. Phantom#1192
+            1. Phantom#1218
 
         2. Else
 
-          1. Phantom#1193
+          1. Phantom#1219
 
       4. Else
 
-        1. Phantom#1194
+        1. Phantom#1220
 
     2. Else
 
-      1. Phantom#1195
+      1. Phantom#1221
 
     3. If ~($is_maske(expr) \/ $is_rangee(expr)), then
 
@@ -19815,15 +19979,15 @@ relation Table_entry_keyset_ok: p, C, tblctx, (typ_k, text'), keyset
 
       3. Else
 
-        1. Phantom#1196
+        1. Phantom#1222
 
     3. Else
 
-      1. Phantom#1197
+      1. Phantom#1223
 
   1. Else
 
-    1. Phantom#1198
+    1. Phantom#1224
 
 1. Else If (text' = "range"), then
 
@@ -19853,19 +20017,19 @@ relation Table_entry_keyset_ok: p, C, tblctx, (typ_k, text'), keyset
 
           2. Else
 
-            1. Phantom#1184
+            1. Phantom#1210
 
         2. Else
 
-          1. Phantom#1185
+          1. Phantom#1211
 
       4. Else
 
-        1. Phantom#1186
+        1. Phantom#1212
 
     2. Else
 
-      1. Phantom#1187
+      1. Phantom#1213
 
     3. If ~($is_maske(expr) \/ $is_rangee(expr)), then
 
@@ -19881,19 +20045,19 @@ relation Table_entry_keyset_ok: p, C, tblctx, (typ_k, text'), keyset
 
       3. Else
 
-        1. Phantom#1188
+        1. Phantom#1214
 
     3. Else
 
-      1. Phantom#1189
+      1. Phantom#1215
 
   1. Else
 
-    1. Phantom#1190
+    1. Phantom#1216
 
 1. Else
 
-  1. Phantom#1191
+  1. Phantom#1217
 
 2. If (keyset matches pattern `ExprK%`), then
 
@@ -19915,15 +20079,15 @@ relation Table_entry_keyset_ok: p, C, tblctx, (typ_k, text'), keyset
 
       3. Else
 
-        1. Phantom#1212
+        1. Phantom#1238
 
     1. Else
 
-      1. Phantom#1213
+      1. Phantom#1239
 
   2. Else
 
-    1. Phantom#1214
+    1. Phantom#1240
 
 2. Else If (keyset matches pattern `DefaultK`), then
 
@@ -19933,7 +20097,7 @@ relation Table_entry_keyset_ok: p, C, tblctx, (typ_k, text'), keyset
 
   1. Else
 
-    1. Phantom#1211
+    1. Phantom#1237
 
 2. Else If (keyset matches pattern `AnyK`), then
 
@@ -19943,9 +20107,9 @@ relation Table_entry_keyset_ok: p, C, tblctx, (typ_k, text'), keyset
 
   1. Else
 
-    1. Phantom#1210
+    1. Phantom#1236
 
-;; ../../../../spec/4g-typing-decl.watsup:935.1-937.32
+;; spec/4g-typing-decl.watsup:935.1-937.32
 relation Table_entry_keysets_state_ok: p, C, tblctx, tblstate', key*, keyset*
 
 1. If (key* matches pattern []), then
@@ -19956,7 +20120,7 @@ relation Table_entry_keysets_state_ok: p, C, tblctx, tblstate', key*, keyset*
 
   1. Else
 
-    1. Phantom#1216
+    1. Phantom#1242
 
 1. Else If (key* matches pattern _ :: _), then
 
@@ -19976,12 +20140,12 @@ relation Table_entry_keysets_state_ok: p, C, tblctx, tblstate', key*, keyset*
 
   2. Else
 
-    1. Phantom#1215
+    1. Phantom#1241
 
-;; ../../../../spec/4g-typing-decl.watsup:949.1-951.26
-relation Table_entry_keysets_ok: p, C, tblctx, keyset*'
+;; spec/4g-typing-decl.watsup:949.1-951.26
+relation Table_entry_keysets_ok: p, C, tblctx, keyset*
 
-1. If (keyset*' = [(DefaultK)]), then
+1. If (keyset* = [(DefaultK)]), then
 
   1. Let mode be tblctx.MODE
 
@@ -19993,7 +20157,7 @@ relation Table_entry_keysets_ok: p, C, tblctx, keyset*'
 
   2. Else
 
-    1. Phantom#1217
+    1. Phantom#1243
 
   3. If (((tblctx.MODE = (NOPRI)) \/ (tblctx.MODE = (PRI))) \/ (tblctx.MODE = (PRILPM))), then
 
@@ -20001,13 +20165,13 @@ relation Table_entry_keysets_ok: p, C, tblctx, keyset*'
 
   3. Else
 
-    1. Phantom#1218
+    1. Phantom#1244
 
 1. Else
 
-  1. Phantom#1219
+  1. Phantom#1245
 
-2. If (keyset*' = [(AnyK)]), then
+2. If (keyset* = [(AnyK)]), then
 
   1. Let mode be tblctx.MODE
 
@@ -20019,7 +20183,7 @@ relation Table_entry_keysets_ok: p, C, tblctx, keyset*'
 
   2. Else
 
-    1. Phantom#1220
+    1. Phantom#1246
 
   3. If (((tblctx.MODE = (NOPRI)) \/ (tblctx.MODE = (PRI))) \/ (tblctx.MODE = (PRILPM))), then
 
@@ -20027,25 +20191,23 @@ relation Table_entry_keysets_ok: p, C, tblctx, keyset*'
 
   3. Else
 
-    1. Phantom#1221
+    1. Phantom#1247
 
 2. Else
 
-  1. Phantom#1222
-
-3. Let keyset* be keyset*'
+  1. Phantom#1248
 
-4. If (|tblctx.KEYS| = |keyset*|), then
+3. If (|tblctx.KEYS| = |keyset*|), then
 
   1. Table_entry_keysets_state_ok: p C tblctx (NOLPM) |- tblctx.KEYS keyset* : tblstate keysetIL*
 
   2. Result in tblstate, keysetIL*
 
-4. Else
+3. Else
 
-  1. Phantom#1223
+  1. Phantom#1249
 
-;; ../../../../spec/4g-typing-decl.watsup:975.1-977.29
+;; spec/4g-typing-decl.watsup:975.1-977.29
 relation Call_default_action_ok: p, C, pt*, (argIL, typ)*, argIL_a*
 
 1. If (|pt*| = |argIL*|), then
@@ -20060,13 +20222,13 @@ relation Call_default_action_ok: p, C, pt*, (argIL, typ)*, argIL_a*
 
   2. Else
 
-    1. Phantom#1224
+    1. Phantom#1250
 
 1. Else
 
-  1. Phantom#1225
+  1. Phantom#1251
 
-;; ../../../../spec/4g-typing-decl.watsup:979.1-979.59
+;; spec/4g-typing-decl.watsup:979.1-979.59
 def $filter_directionless_args(paramtyp*, argIL*)
 
 1. If (paramtyp* matches pattern []), then
@@ -20077,7 +20239,7 @@ def $filter_directionless_args(paramtyp*, argIL*)
 
   1. Else
 
-    1. Phantom#1228
+    1. Phantom#1254
 
 1. Else If (paramtyp* matches pattern _ :: _), then
 
@@ -20095,7 +20257,7 @@ def $filter_directionless_args(paramtyp*, argIL*)
 
     3. Else
 
-      1. Phantom#1226
+      1. Phantom#1252
 
     4. Otherwise
 
@@ -20103,9 +20265,9 @@ def $filter_directionless_args(paramtyp*, argIL*)
 
   2. Else
 
-    1. Phantom#1227
+    1. Phantom#1253
 
-;; ../../../../spec/4g-typing-decl.watsup:997.1-999.26
+;; spec/4g-typing-decl.watsup:997.1-999.26
 relation Table_entry_action_ok: p, C, tblctx, (name arg*)
 
 1. Let (paramtyp*, argIL*)? be $find_action(tblctx, name)
@@ -20124,12 +20286,14 @@ relation Table_entry_action_ok: p, C, tblctx, (name arg*)
 
 2. Else
 
-  1. Phantom#1229
+  1. Phantom#1255
 
-;; ../../../../spec/4g-typing-decl.watsup:1012.1-1014.29
-relation Table_entry_priority_ok: cursor, C, tblctx, tblstate, expr?
+;; spec/4g-typing-decl.watsup:1012.1-1014.29
+relation Table_entry_priority_ok: cursor, C, tblctx, tblstate, expr''?
 
-1. If (cursor matches pattern `LOCAL`), then
+1. (Let expr be expr'')?
+
+2. If (cursor matches pattern `LOCAL`), then
 
   1. If (expr? matches pattern ()), then
 
@@ -20139,77 +20303,49 @@ relation Table_entry_priority_ok: cursor, C, tblctx, tblstate, expr?
 
     1. Else
 
-      1. Phantom#1235
-
-    2. If ((tblctx.MODE = (PRI)) \/ (tblctx.MODE = (PRILPM))), then
-
-      1. If (tblctx.PRIORITIES.VALUES = []), then
-
-        1. If tblctx.PRIORITIES.LARGEST_WINS, then
-
-          1. Let i_size be tblctx.ENTRIES.SIZE
-
-          2. Let i_delta be tblctx.PRIORITIES.DELTA
-
-          3. Let i be (((i_size - (1 as int)) * i_delta) + (1 as int))
-
-          4. If (i >= (0 as int)), then
-
-            1. Let tblctx' be $add_priority(i, tblctx)
-
-            2. Result in tblctx', ?((IntV i))
-
-          4. Else
-
-            1. Phantom#1238
-
-        1. Else If ~tblctx.PRIORITIES.LARGEST_WINS, then
-
-          1. Let tblctx' be $add_priority((1 as int), tblctx)
-
-          2. Result in tblctx', ?((IntV (1 as int)))
+      1. Phantom#1256
 
-      1. Else If (tblctx.PRIORITIES.VALUES =/= []), then
+  1. Else
 
-        1. Let i_delta be tblctx.PRIORITIES.DELTA
+    1. Phantom#1257
 
-        2. Let i be $find_last_priority(tblctx)
+  2. If (tblstate matches pattern `LPM%`), then
 
-        3. If tblctx.PRIORITIES.LARGEST_WINS, then
+    1. Let (LPM nat_prefix) be tblstate
 
-          1. Let i' be (i - i_delta)
+    2. If (expr? matches pattern ()), then
 
-          2. If (i' >= (0 as int)), then
+      1. Let mode be tblctx.MODE
 
-            1. Let tblctx' be $add_priority(i', tblctx)
+      2. If (mode matches pattern `NOPRILPM%`), then
 
-            2. Result in tblctx', ?((IntV i'))
+        1. Let (NOPRILPM nat) be mode
 
-          2. Else
+        2. Result in tblctx, ?()
 
-            1. Phantom#1237
+      2. Else
 
-        3. Else If ~tblctx.PRIORITIES.LARGEST_WINS, then
+        1. Phantom#1258
 
-          1. Let i' be (i + i_delta)
+    2. Else
 
-          2. If (i' >= (0 as int)), then
+      1. Phantom#1259
 
-            1. Let tblctx' be $add_priority(i', tblctx)
+  2. Else
 
-            2. Result in tblctx', ?((IntV i'))
+    1. Phantom#1260
 
-          2. Else
+2. Else
 
-            1. Phantom#1236
+  1. Phantom#1261
 
-    2. Else
+3. (Let expr' be expr'')?
 
-      1. Phantom#1239
+4. If (cursor matches pattern `LOCAL`), then
 
-  1. Else If (expr? matches pattern (_)), then
+  1. If (expr'? matches pattern (_)), then
 
-    1. Let ?(expr) be expr?
+    1. Let ?(expr) be expr'?
 
     2. If ((tblctx.MODE = (PRI)) \/ (tblctx.MODE = (PRILPM))), then
 
@@ -20233,7 +20369,7 @@ relation Table_entry_priority_ok: cursor, C, tblctx, tblstate, expr?
 
           4. Else
 
-            1. Phantom#1232
+            1. Phantom#1264
 
         1. Else If (tblctx.PRIORITIES.VALUES =/= []), then
 
@@ -20253,51 +20389,101 @@ relation Table_entry_priority_ok: cursor, C, tblctx, tblstate, expr?
 
             4. Else
 
-              1. Phantom#1230
+              1. Phantom#1262
 
           1. Else
 
-            1. Phantom#1231
+            1. Phantom#1263
 
       1. Else
 
-        1. Phantom#1233
+        1. Phantom#1265
 
     2. Else
 
-      1. Phantom#1234
+      1. Phantom#1266
 
-  2. If (tblstate matches pattern `LPM%`), then
+  1. Else
 
-    1. Let (LPM nat_prefix) be tblstate
+    1. Phantom#1267
 
-    2. If (expr? matches pattern ()), then
+  2. If (expr? matches pattern ()), then
 
-      1. Let mode be tblctx.MODE
+    1. If ((tblctx.MODE = (PRI)) \/ (tblctx.MODE = (PRILPM))), then
 
-      2. If (mode matches pattern `NOPRILPM%`), then
+      1. If (tblctx.PRIORITIES.VALUES = []), then
 
-        1. Let (NOPRILPM nat) be mode
+        1. If tblctx.PRIORITIES.LARGEST_WINS, then
 
-        2. Result in tblctx, ?()
+          1. Let i_size be tblctx.ENTRIES.SIZE
 
-      2. Else
+          2. Let i_delta be tblctx.PRIORITIES.DELTA
 
-        1. Phantom#1240
+          3. Let i be (((i_size - (1 as int)) * i_delta) + (1 as int))
 
-    2. Else
+          4. If (i >= (0 as int)), then
+
+            1. Let tblctx' be $add_priority(i, tblctx)
+
+            2. Result in tblctx', ?((IntV i))
+
+          4. Else
+
+            1. Phantom#1270
+
+        1. Else If ~tblctx.PRIORITIES.LARGEST_WINS, then
+
+          1. Let tblctx' be $add_priority((1 as int), tblctx)
+
+          2. Result in tblctx', ?((IntV (1 as int)))
+
+      1. Else If (tblctx.PRIORITIES.VALUES =/= []), then
+
+        1. Let i_delta be tblctx.PRIORITIES.DELTA
+
+        2. Let i be $find_last_priority(tblctx)
+
+        3. If tblctx.PRIORITIES.LARGEST_WINS, then
+
+          1. Let i' be (i - i_delta)
+
+          2. If (i' >= (0 as int)), then
+
+            1. Let tblctx' be $add_priority(i', tblctx)
+
+            2. Result in tblctx', ?((IntV i'))
 
-      1. Phantom#1241
+          2. Else
+
+            1. Phantom#1269
+
+        3. Else If ~tblctx.PRIORITIES.LARGEST_WINS, then
+
+          1. Let i' be (i + i_delta)
+
+          2. If (i' >= (0 as int)), then
+
+            1. Let tblctx' be $add_priority(i', tblctx)
+
+            2. Result in tblctx', ?((IntV i'))
+
+          2. Else
+
+            1. Phantom#1268
+
+    1. Else
+
+      1. Phantom#1271
 
   2. Else
 
-    1. Phantom#1242
+    1. Phantom#1272
 
-1. Else
+4. Else
 
-  1. Phantom#1243
+  1. Phantom#1273
 
-;; ../../../../spec/4g-typing-decl.watsup:1105.1-1107.26
+;; spec/4g-typing-decl.watsup:1105.1-1107.26
 relation Table_entry_ok: p, C, tblctx, (bool keyset* tblaction expr?)
 
 1. Table_entry_keysets_ok: p C tblctx |- keyset* : tblstate keysetIL*
@@ -20308,7 +20494,7 @@ relation Table_entry_ok: p, C, tblctx, (bool keyset* tblaction expr?)
 
 4. Result in tblctx', (bool keysetIL* tblactionIL val?)
 
-;; ../../../../spec/4g-typing-decl.watsup:1118.1-1120.26
+;; spec/4g-typing-decl.watsup:1118.1-1120.26
 relation Table_entries_fold_ok: p, C, tblctx, tblentry*
 
 1. If (tblentry* matches pattern []), then
@@ -20325,7 +20511,7 @@ relation Table_entries_fold_ok: p, C, tblctx, tblentry*
 
   4. Result in tblctx'', tblentryIL_h :: tblentryIL_t*
 
-;; ../../../../spec/4g-typing-decl.watsup:1131.1-1133.26
+;; spec/4g-typing-decl.watsup:1131.1-1133.26
 relation Table_entries_ok: p, C, tblctx_0, (b tblentry*)
 
 1. If ((|tblctx_0.KEYS| = 0) => (|tblentry*| = 0)), then
@@ -20340,9 +20526,9 @@ relation Table_entries_ok: p, C, tblctx_0, (b tblentry*)
 
 1. Else
 
-  1. Phantom#1244
+  1. Phantom#1274
 
-;; ../../../../spec/4g-typing-decl.watsup:1148.1-1150.26
+;; spec/4g-typing-decl.watsup:1148.1-1150.26
 relation Table_default_ok: p, C, tblctx, (bool (name arg*))
 
 1. Let (paramtyp*, argIL*)? be $find_action(tblctx, name)
@@ -20361,9 +20547,9 @@ relation Table_default_ok: p, C, tblctx, (bool (name arg*))
 
 2. Else
 
-  1. Phantom#1245
+  1. Phantom#1275
 
-;; ../../../../spec/4g-typing-decl.watsup:1166.1-1168.26
+;; spec/4g-typing-decl.watsup:1166.1-1168.26
 relation Table_custom_ok: p, C, tblctx, (b text' expr)
 
 1. If (text' = "size"), then
@@ -20378,7 +20564,7 @@ relation Table_custom_ok: p, C, tblctx, (b text' expr)
 
   3. Else
 
-    1. Phantom#1251
+    1. Phantom#1281
 
 1. Else If (text' = "largest_priority_wins"), then
 
@@ -20400,11 +20586,11 @@ relation Table_custom_ok: p, C, tblctx, (b text' expr)
 
     2. Else
 
-      1. Phantom#1249
+      1. Phantom#1279
 
   3. Else
 
-    1. Phantom#1250
+    1. Phantom#1280
 
 1. Else If (text' = "priority_delta"), then
 
@@ -20426,15 +20612,15 @@ relation Table_custom_ok: p, C, tblctx, (b text' expr)
 
     3. Else
 
-      1. Phantom#1246
+      1. Phantom#1276
 
   3. Else
 
-    1. Phantom#1247
+    1. Phantom#1277
 
 1. Else
 
-  1. Phantom#1248
+  1. Phantom#1278
 
 2. If (((text' =/= "size") /\ (text' =/= "largest_priority_wins")) /\ (text' =/= "priority_delta")), then
 
@@ -20444,9 +20630,9 @@ relation Table_custom_ok: p, C, tblctx, (b text' expr)
 
 2. Else
 
-  1. Phantom#1252
+  1. Phantom#1282
 
-;; ../../../../spec/4g-typing-decl.watsup:1203.1-1205.26
+;; spec/4g-typing-decl.watsup:1203.1-1205.26
 relation Table_prop_ok: p, C, tblctx, tblprop
 
 1. If (tblprop matches pattern `KeyP%`), then
@@ -20489,7 +20675,7 @@ relation Table_prop_ok: p, C, tblctx, tblprop
 
   3. Result in tblctx', (CustomP tblcustompropIL)
 
-;; ../../../../spec/4g-typing-decl.watsup:1228.1-1230.26
+;; spec/4g-typing-decl.watsup:1228.1-1230.26
 relation Table_props_ok: p, C, tblctx, tblprop*
 
 1. If (tblprop* matches pattern []), then
@@ -20506,7 +20692,7 @@ relation Table_props_ok: p, C, tblctx, tblprop*
 
   4. Result in tblctx'', tblpropIL_h :: tblpropIL_t*
 
-;; ../../../../spec/4g-typing-decl.watsup:1244.1-1246.26
+;; spec/4g-typing-decl.watsup:1244.1-1246.26
 relation Table_type_decl_ok: cursor, C, tblctx, id
 
 1. If (cursor matches pattern `BLOCK`), then
@@ -20533,9 +20719,9 @@ relation Table_type_decl_ok: cursor, C, tblctx, id
 
 1. Else
 
-  1. Phantom#1253
+  1. Phantom#1283
 
-;; ../../../../spec/4h-typing-call.watsup:149.1-150.77
+;; spec/4h-typing-call.watsup:149.1-150.77
 def $filter_default_args(paramtyp*, id_deft*)
 
 1. If (paramtyp* matches pattern []), then
@@ -20554,16 +20740,16 @@ def $filter_default_args(paramtyp*, id_deft*)
 
   3. Else
 
-    1. Phantom#1254
+    1. Phantom#1284
 
   4. Otherwise
 
     1. Return pt_h :: $filter_default_args(pt_t*, id_deft*)
 
-;; ../../../../spec/4h-typing-call.watsup:161.15-161.32
+;; spec/4h-typing-call.watsup:161.15-161.32
 syntax pmap = map<id, paramtyp>
 
-;; ../../../../spec/4h-typing-call.watsup:163.1-164.80
+;; spec/4h-typing-call.watsup:163.1-164.80
 def $align_params_with_args(pt*, (argIL, typ)*)
 
 1. (Let (id _dir _typ _val?) be pt)*
@@ -20574,7 +20760,7 @@ def $align_params_with_args(pt*, (argIL, typ)*)
 
 4. Return pt'*
 
-;; ../../../../spec/4h-typing-call.watsup:165.1-166.97
+;; spec/4h-typing-call.watsup:165.1-166.97
 def $align_params_with_args'(pmap, pt, (argIL, _typ))
 
 1. If (argIL matches pattern `ExprA%`), then
@@ -20597,23 +20783,23 @@ def $align_params_with_args'(pmap, pt, (argIL, _typ))
 
   3. Else
 
-    1. Phantom#1255
+    1. Phantom#1285
 
 1. Else If (argIL matches pattern `AnyA`), then
 
   1. Return pt
 
-;; ../../../../spec/4h-typing-call.watsup:183.1-184.12
+;; spec/4h-typing-call.watsup:183.1-184.12
 syntax typcstr = 
    | `KNOWN%`(typ)
    | `UNKNOWN`()
 
-;; ../../../../spec/4h-typing-call.watsup:188.1-188.42
+;; spec/4h-typing-call.watsup:188.1-188.42
 def $empty_cstr(tid*)
 
 1. Return ({ (tid -> (UNKNOWN))* })
 
-;; ../../../../spec/4h-typing-call.watsup:194.1-194.63
+;; spec/4h-typing-call.watsup:194.1-194.63
 def $gen_cstr(cstr, typ'', typ_a''')
 
 1. If (typ'' has type abstyp), then
@@ -20862,7 +21048,7 @@ def $gen_cstr(cstr, typ'', typ_a''')
 
   1. Return cstr
 
-;; ../../../../spec/4h-typing-call.watsup:196.1-196.66
+;; spec/4h-typing-call.watsup:196.1-196.66
 def $gen_cstrs(cstr, typ_p*, typ_a*)
 
 1. If (|typ_p*| = |typ_a*|), then
@@ -20873,9 +21059,9 @@ def $gen_cstrs(cstr, typ_p*, typ_a*)
 
 1. Else
 
-  1. Phantom#1256
+  1. Phantom#1286
 
-;; ../../../../spec/4h-typing-call.watsup:198.1-198.74
+;; spec/4h-typing-call.watsup:198.1-198.74
 def $gen_cstr_fd(cstr, fd_p, fd_a)
 
 1. Let (_id _dir typ_p _val?)* be $get_params_funcdef(fd_p)
@@ -20888,7 +21074,7 @@ def $gen_cstr_fd(cstr, fd_p, fd_a)
 
 5. Return cstr''
 
-;; ../../../../spec/4h-typing-call.watsup:200.1-200.77
+;; spec/4h-typing-call.watsup:200.1-200.77
 def $gen_cstr_fd'(cstr, fid*, fdenv_p, fdenv_a)
 
 1. If (fid* matches pattern []), then
@@ -20905,11 +21091,11 @@ def $gen_cstr_fd'(cstr, fid*, fdenv_p, fdenv_a)
 
     1. Let ?(fd_p) be funcdef?
 
-    2. Let funcdef?' be $find_map<fid, funcdef>(fdenv_a, fid_h)
+    2. Let funcdef'? be $find_map<fid, funcdef>(fdenv_a, fid_h)
 
-    3. If (funcdef?' matches pattern (_)), then
+    3. If (funcdef'? matches pattern (_)), then
 
-      1. Let ?(fd_a) be funcdef?'
+      1. Let ?(fd_a) be funcdef'?
 
       2. Let cstr' be $gen_cstr_fd(cstr, fd_p, fd_a)
 
@@ -20917,13 +21103,13 @@ def $gen_cstr_fd'(cstr, fid*, fdenv_p, fdenv_a)
 
     3. Else
 
-      1. Phantom#1257
+      1. Phantom#1287
 
   3. Else
 
-    1. Phantom#1258
+    1. Phantom#1288
 
-;; ../../../../spec/4h-typing-call.watsup:202.1-202.74
+;; spec/4h-typing-call.watsup:202.1-202.74
 def $merge_cstr(cstr_o, cstr_n)
 
 1. Let ({ tid_o* }) be $dom_map<tid, typcstr>(cstr_o)
@@ -20934,9 +21120,9 @@ def $merge_cstr(cstr_o, cstr_n)
 
 2. Else
 
-  1. Phantom#1259
+  1. Phantom#1289
 
-;; ../../../../spec/4h-typing-call.watsup:204.1-204.100
+;; spec/4h-typing-call.watsup:204.1-204.100
 def $merge_cstr'(cstr_o, cstr_n, tid*, cstr)
 
 1. If (tid* matches pattern []), then
@@ -20957,13 +21143,13 @@ def $merge_cstr'(cstr_o, cstr_n, tid*, cstr)
 
     1. Else
 
-      1. Phantom#1260
+      1. Phantom#1290
 
-    2. Let typcstr? be $find_map<tid, typcstr>(cstr_n, tid_h)
+    2. Let typcstr'? be $find_map<tid, typcstr>(cstr_n, tid_h)
 
-    3. If (typcstr? matches pattern (_)), then
+    3. If (typcstr'? matches pattern (_)), then
 
-      1. Let ?(typcstr) be typcstr?
+      1. Let ?(typcstr) be typcstr'?
 
       2. If (typcstr matches pattern `KNOWN%`), then
 
@@ -20975,21 +21161,21 @@ def $merge_cstr'(cstr_o, cstr_n, tid*, cstr)
 
       2. Else
 
-        1. Phantom#1261
+        1. Phantom#1291
 
     3. Else
 
-      1. Phantom#1262
+      1. Phantom#1292
 
   2. Else
 
-    1. Phantom#1263
+    1. Phantom#1293
 
-  3. Let typcstr? be $find_map<tid, typcstr>(cstr_o, tid_h)
+  3. Let typcstr'? be $find_map<tid, typcstr>(cstr_o, tid_h)
 
-  4. If (typcstr? matches pattern (_)), then
+  4. If (typcstr'? matches pattern (_)), then
 
-    1. Let ?(typcstr) be typcstr?
+    1. Let ?(typcstr) be typcstr'?
 
     2. If (typcstr matches pattern `KNOWN%`), then
 
@@ -21003,17 +21189,17 @@ def $merge_cstr'(cstr_o, cstr_n, tid*, cstr)
 
       2. Else
 
-        1. Phantom#1264
+        1. Phantom#1294
 
-      3. Let typcstr?' be $find_map<tid, typcstr>(cstr_n, tid_h)
+      3. Let typcstr'''? be $find_map<tid, typcstr>(cstr_n, tid_h)
 
-      4. If (typcstr?' matches pattern (_)), then
+      4. If (typcstr'''? matches pattern (_)), then
 
-        1. Let ?(typcstr') be typcstr?'
+        1. Let ?(typcstr'') be typcstr'''?
 
-        2. If (typcstr' matches pattern `KNOWN%`), then
+        2. If (typcstr'' matches pattern `KNOWN%`), then
 
-          1. Let (KNOWN typ_n) be typcstr'
+          1. Let (KNOWN typ_n) be typcstr''
 
           2. If (Sub_impl: typ_o << typ_n holds), then
 
@@ -21031,25 +21217,25 @@ def $merge_cstr'(cstr_o, cstr_n, tid*, cstr)
 
             1. Else
 
-              1. Phantom#1265
+              1. Phantom#1295
 
         2. Else
 
-          1. Phantom#1266
+          1. Phantom#1296
 
       4. Else
 
-        1. Phantom#1267
+        1. Phantom#1297
 
     2. Else
 
-      1. Phantom#1268
+      1. Phantom#1298
 
   4. Else
 
-    1. Phantom#1269
+    1. Phantom#1299
 
-;; ../../../../spec/4h-typing-call.watsup:206.1-206.76
+;; spec/4h-typing-call.watsup:206.1-206.76
 def $merge_cstrs(cstr, map<tid, typcstr>*)
 
 1. If (map<tid, typcstr>* matches pattern []), then
@@ -21066,7 +21252,7 @@ def $merge_cstrs(cstr, map<tid, typcstr>*)
 
   4. Return cstr''
 
-;; ../../../../spec/4h-typing-call.watsup:208.1-208.54
+;; spec/4h-typing-call.watsup:208.1-208.54
 def $resolve_cstrs(set<pair<tid, typcstr>>')
 
 1. If (set<pair<tid, typcstr>>' = ({ [] })), then
@@ -21075,7 +21261,7 @@ def $resolve_cstrs(set<pair<tid, typcstr>>')
 
 1. Else
 
-  1. Phantom#1270
+  1. Phantom#1300
 
 2. Let ({ pair<tid, typcstr>* }) be set<pair<tid, typcstr>>'
 
@@ -21095,17 +21281,17 @@ def $resolve_cstrs(set<pair<tid, typcstr>>')
 
     2. Else
 
-      1. Phantom#1271
+      1. Phantom#1301
 
   2. Else
 
-    1. Phantom#1272
+    1. Phantom#1302
 
 3. Else
 
-  1. Phantom#1273
+  1. Phantom#1303
 
-;; ../../../../spec/4h-typing-call.watsup:332.1-332.56
+;; spec/4h-typing-call.watsup:332.1-332.56
 def $infer_targs(tid*, (id dir typ_p val?)*, typ_a*)
 
 1. Let cstr be $empty_cstr(tid*)
@@ -21114,7 +21300,7 @@ def $infer_targs(tid*, (id dir typ_p val?)*, typ_a*)
 
 3. Return $resolve_cstrs(cstr')
 
-;; ../../../../spec/4h-typing-call.watsup:438.1-439.43
+;; spec/4h-typing-call.watsup:438.1-439.43
 def $is_table_apply_in_action_arg(argIL)
 
 1. Return false
